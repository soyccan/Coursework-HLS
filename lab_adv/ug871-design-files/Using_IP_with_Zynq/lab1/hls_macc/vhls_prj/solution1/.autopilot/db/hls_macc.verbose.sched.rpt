

================================================================
== Vivado HLS Report for 'hls_macc'
================================================================
* Date:           Sat Oct 12 12:42:08 2019

* Version:        2019.1.3 (Build 2642998 on Wed Sep 04 10:25:22 MDT 2019)
* Project:        vhls_prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   4.00|     3.115|        0.50|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    8|    8|    8|    8|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 9
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.11>
ST_1 : Operation 10 [1/1] (1.00ns)   --->   "%accum_clr_read = call i1 @_ssdm_op_Read.s_axilite.i1(i1 %accum_clr) nounwind" [hls_macc.c:3]   --->   Operation 10 'read' 'accum_clr_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 11 [1/1] (1.00ns)   --->   "%b_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %b) nounwind" [hls_macc.c:3]   --->   Operation 11 'read' 'b_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 12 [1/1] (1.00ns)   --->   "%a_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %a) nounwind" [hls_macc.c:3]   --->   Operation 12 'read' 'a_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 13 [7/7] (2.11ns)   --->   "%mul_ln14 = mul nsw i32 %b_read, %a_read" [hls_macc.c:14]   --->   Operation 13 'mul' 'mul_ln14' <Predicate = true> <Delay = 2.11> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 2.11>
ST_2 : Operation 14 [6/7] (2.11ns)   --->   "%mul_ln14 = mul nsw i32 %b_read, %a_read" [hls_macc.c:14]   --->   Operation 14 'mul' 'mul_ln14' <Predicate = true> <Delay = 2.11> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 2.11>
ST_3 : Operation 15 [5/7] (2.11ns)   --->   "%mul_ln14 = mul nsw i32 %b_read, %a_read" [hls_macc.c:14]   --->   Operation 15 'mul' 'mul_ln14' <Predicate = true> <Delay = 2.11> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 2.11>
ST_4 : Operation 16 [4/7] (2.11ns)   --->   "%mul_ln14 = mul nsw i32 %b_read, %a_read" [hls_macc.c:14]   --->   Operation 16 'mul' 'mul_ln14' <Predicate = true> <Delay = 2.11> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 2.11>
ST_5 : Operation 17 [3/7] (2.11ns)   --->   "%mul_ln14 = mul nsw i32 %b_read, %a_read" [hls_macc.c:14]   --->   Operation 17 'mul' 'mul_ln14' <Predicate = true> <Delay = 2.11> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 2.11>
ST_6 : Operation 18 [2/7] (2.11ns)   --->   "%mul_ln14 = mul nsw i32 %b_read, %a_read" [hls_macc.c:14]   --->   Operation 18 'mul' 'mul_ln14' <Predicate = true> <Delay = 2.11> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 2.11>
ST_7 : Operation 19 [1/7] (2.11ns)   --->   "%mul_ln14 = mul nsw i32 %b_read, %a_read" [hls_macc.c:14]   --->   Operation 19 'mul' 'mul_ln14' <Predicate = true> <Delay = 2.11> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 6> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 2.55>
ST_8 : Operation 20 [1/1] (0.00ns)   --->   "%acc_reg_load = load i32* @acc_reg, align 4" [hls_macc.c:14]   --->   Operation 20 'load' 'acc_reg_load' <Predicate = (!accum_clr_read)> <Delay = 0.00>
ST_8 : Operation 21 [1/1] (0.00ns) (grouped into LUT with out node add_ln14)   --->   "%select_ln12 = select i1 %accum_clr_read, i32 0, i32 %acc_reg_load" [hls_macc.c:12]   --->   Operation 21 'select' 'select_ln12' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 22 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln14 = add nsw i32 %select_ln12, %mul_ln14" [hls_macc.c:14]   --->   Operation 22 'add' 'add_ln14' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 23 [1/1] (0.00ns)   --->   "store i32 %add_ln14, i32* @acc_reg, align 4" [hls_macc.c:13]   --->   Operation 23 'store' <Predicate = true> <Delay = 0.00>

State 9 <SV = 8> <Delay = 1.00>
ST_9 : Operation 24 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %a) nounwind, !map !7"   --->   Operation 24 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 25 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %b) nounwind, !map !13"   --->   Operation 25 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %accum) nounwind, !map !17"   --->   Operation 26 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1 %accum_clr) nounwind, !map !23"   --->   Operation 27 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 28 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([9 x i8]* @hls_macc_str) nounwind"   --->   Operation 28 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [20 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [hls_macc.c:5]   --->   Operation 29 'specinterface' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 30 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %a, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [20 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [hls_macc.c:6]   --->   Operation 30 'specinterface' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 31 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %b, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [20 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [hls_macc.c:7]   --->   Operation 31 'specinterface' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 32 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %accum, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [20 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [hls_macc.c:8]   --->   Operation 32 'specinterface' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 33 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i1 %accum_clr, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [20 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [hls_macc.c:9]   --->   Operation 33 'specinterface' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 34 [1/1] (1.00ns)   --->   "call void @_ssdm_op_Write.s_axilite.i32P(i32* %accum, i32 %add_ln14) nounwind" [hls_macc.c:15]   --->   Operation 34 'write' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_9 : Operation 35 [1/1] (0.00ns)   --->   "ret void" [hls_macc.c:16]   --->   Operation 35 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 4ns, clock uncertainty: 0.5ns.

 <State 1>: 3.12ns
The critical path consists of the following:
	s_axi read on port 'b' (hls_macc.c:3) [12]  (1 ns)
	'mul' operation ('mul_ln14', hls_macc.c:14) [21]  (2.12 ns)

 <State 2>: 2.12ns
The critical path consists of the following:
	'mul' operation ('mul_ln14', hls_macc.c:14) [21]  (2.12 ns)

 <State 3>: 2.12ns
The critical path consists of the following:
	'mul' operation ('mul_ln14', hls_macc.c:14) [21]  (2.12 ns)

 <State 4>: 2.12ns
The critical path consists of the following:
	'mul' operation ('mul_ln14', hls_macc.c:14) [21]  (2.12 ns)

 <State 5>: 2.12ns
The critical path consists of the following:
	'mul' operation ('mul_ln14', hls_macc.c:14) [21]  (2.12 ns)

 <State 6>: 2.12ns
The critical path consists of the following:
	'mul' operation ('mul_ln14', hls_macc.c:14) [21]  (2.12 ns)

 <State 7>: 2.12ns
The critical path consists of the following:
	'mul' operation ('mul_ln14', hls_macc.c:14) [21]  (2.12 ns)

 <State 8>: 2.55ns
The critical path consists of the following:
	'load' operation ('acc_reg_load', hls_macc.c:14) on static variable 'acc_reg' [19]  (0 ns)
	'select' operation ('select_ln12', hls_macc.c:12) [20]  (0 ns)
	'add' operation ('add_ln14', hls_macc.c:14) [22]  (2.55 ns)

 <State 9>: 1ns
The critical path consists of the following:
	s_axi write on port 'accum' (hls_macc.c:15) [23]  (1 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
