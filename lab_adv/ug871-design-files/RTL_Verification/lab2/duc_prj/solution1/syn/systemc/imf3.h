// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _imf3_HH_
#define _imf3_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "duc_mul_mul_18s_1bkb.h"
#include "imf3_c_5_0.h"
#include "imf3_shift_reg_p0.h"
#include "imf3_c_5_1.h"

namespace ap_rtl {

struct imf3 : public sc_module {
    // Port declarations 8
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<18> > x;
    sc_out< sc_lv<18> > ap_return;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    imf3(sc_module_name name);
    SC_HAS_PROCESS(imf3);

    ~imf3();

    sc_trace_file* mVcdFile;

    imf3_c_5_0* c_5_0_U;
    imf3_shift_reg_p0* shift_reg_p0_U;
    imf3_c_5_1* c_5_1_U;
    imf3_shift_reg_p0* shift_reg_p1_U;
    duc_mul_mul_18s_1bkb<1,4,18,18,36>* duc_mul_mul_18s_1bkb_U6;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<6> > i_2;
    sc_signal< sc_lv<18> > in_1;
    sc_signal< sc_lv<6> > j;
    sc_signal< sc_lv<3> > c_5_0_address0;
    sc_signal< sc_logic > c_5_0_ce0;
    sc_signal< sc_lv<18> > c_5_0_q0;
    sc_signal< sc_lv<1> > init_2;
    sc_signal< sc_lv<4> > shift_reg_p0_address0;
    sc_signal< sc_logic > shift_reg_p0_ce0;
    sc_signal< sc_logic > shift_reg_p0_we0;
    sc_signal< sc_lv<38> > shift_reg_p0_q0;
    sc_signal< sc_lv<3> > c_5_1_address0;
    sc_signal< sc_logic > c_5_1_ce0;
    sc_signal< sc_lv<1> > c_5_1_q0;
    sc_signal< sc_lv<4> > shift_reg_p1_address0;
    sc_signal< sc_logic > shift_reg_p1_ce0;
    sc_signal< sc_logic > shift_reg_p1_we0;
    sc_signal< sc_lv<38> > shift_reg_p1_q0;
    sc_signal< sc_lv<6> > i_2_load_reg_384;
    sc_signal< sc_lv<1> > icmp_ln23_fu_140_p2;
    sc_signal< sc_lv<1> > icmp_ln23_reg_391;
    sc_signal< sc_lv<18> > c_5_0_load_reg_411;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > c_5_1_load_reg_416;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<6> > inc_fu_169_p2;
    sc_signal< sc_lv<6> > inc_reg_431;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<6> > p_Val2_s_reg_437;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > ch_4_fu_178_p3;
    sc_signal< sc_lv<1> > ch_4_reg_443;
    sc_signal< sc_lv<1> > icmp_ln30_fu_186_p2;
    sc_signal< sc_lv<1> > icmp_ln30_reg_448;
    sc_signal< sc_lv<35> > sub_ln46_fu_216_p2;
    sc_signal< sc_lv<35> > sub_ln46_reg_465;
    sc_signal< sc_lv<38> > select_ln30_fu_231_p3;
    sc_signal< sc_lv<38> > select_ln30_reg_470;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<36> > grp_fu_372_p2;
    sc_signal< sc_lv<36> > m_reg_475;
    sc_signal< sc_lv<35> > trunc_ln30_fu_239_p1;
    sc_signal< sc_lv<35> > trunc_ln30_reg_480;
    sc_signal< sc_lv<35> > trunc_ln30_1_fu_243_p1;
    sc_signal< sc_lv<35> > trunc_ln30_1_reg_485;
    sc_signal< sc_lv<38> > select_ln30_1_fu_246_p3;
    sc_signal< sc_lv<38> > select_ln30_1_reg_490;
    sc_signal< sc_lv<35> > m_1_fu_254_p3;
    sc_signal< sc_lv<35> > m_1_reg_495;
    sc_signal< sc_lv<35> > trunc_ln31_fu_260_p1;
    sc_signal< sc_lv<35> > trunc_ln31_reg_501;
    sc_signal< sc_lv<38> > acc0_fu_267_p2;
    sc_signal< sc_lv<38> > acc0_reg_506;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<38> > acc1_fu_275_p2;
    sc_signal< sc_lv<38> > acc1_reg_511;
    sc_signal< sc_lv<18> > tmp_4_reg_516;
    sc_signal< sc_lv<18> > tmp_5_reg_521;
    sc_signal< sc_lv<18> > d_assign_reg_126;
    sc_signal< sc_lv<64> > zext_ln30_fu_156_p1;
    sc_signal< sc_lv<64> > zext_ln30_1_fu_198_p1;
    sc_signal< sc_lv<64> > zext_ln33_fu_314_p1;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<6> > inc_2_fu_360_p3;
    sc_signal< sc_lv<6> > select_ln40_fu_346_p3;
    sc_signal< sc_lv<1> > and_ln37_fu_330_p2;
    sc_signal< sc_lv<7> > tmp_3_fu_191_p3;
    sc_signal< sc_lv<35> > shl_ln_fu_208_p3;
    sc_signal< sc_lv<35> > sext_ln46_2_fu_204_p1;
    sc_signal< sc_lv<1> > or_ln30_fu_226_p2;
    sc_signal< sc_lv<38> > sext_ln47_fu_264_p1;
    sc_signal< sc_lv<38> > sext_ln47_1_fu_272_p1;
    sc_signal< sc_lv<35> > add_ln36_fu_280_p2;
    sc_signal< sc_lv<35> > add_ln36_1_fu_284_p2;
    sc_signal< sc_lv<7> > tmp_fu_308_p3;
    sc_signal< sc_lv<1> > icmp_ln37_fu_325_p2;
    sc_signal< sc_lv<6> > add_ln40_fu_341_p2;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<6> ap_const_lv6_5;
    static const sc_lv<17> ap_const_lv17_0;
    static const sc_lv<38> ap_const_lv38_0;
    static const sc_lv<35> ap_const_lv35_0;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_22;
    static const sc_lv<6> ap_const_lv6_F;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_acc0_fu_267_p2();
    void thread_acc1_fu_275_p2();
    void thread_add_ln36_1_fu_284_p2();
    void thread_add_ln36_fu_280_p2();
    void thread_add_ln40_fu_341_p2();
    void thread_and_ln37_fu_330_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_c_5_0_address0();
    void thread_c_5_0_ce0();
    void thread_c_5_1_address0();
    void thread_c_5_1_ce0();
    void thread_ch_4_fu_178_p3();
    void thread_icmp_ln23_fu_140_p2();
    void thread_icmp_ln30_fu_186_p2();
    void thread_icmp_ln37_fu_325_p2();
    void thread_inc_2_fu_360_p3();
    void thread_inc_fu_169_p2();
    void thread_m_1_fu_254_p3();
    void thread_or_ln30_fu_226_p2();
    void thread_select_ln30_1_fu_246_p3();
    void thread_select_ln30_fu_231_p3();
    void thread_select_ln40_fu_346_p3();
    void thread_sext_ln46_2_fu_204_p1();
    void thread_sext_ln47_1_fu_272_p1();
    void thread_sext_ln47_fu_264_p1();
    void thread_shift_reg_p0_address0();
    void thread_shift_reg_p0_ce0();
    void thread_shift_reg_p0_we0();
    void thread_shift_reg_p1_address0();
    void thread_shift_reg_p1_ce0();
    void thread_shift_reg_p1_we0();
    void thread_shl_ln_fu_208_p3();
    void thread_sub_ln46_fu_216_p2();
    void thread_tmp_3_fu_191_p3();
    void thread_tmp_fu_308_p3();
    void thread_trunc_ln30_1_fu_243_p1();
    void thread_trunc_ln30_fu_239_p1();
    void thread_trunc_ln31_fu_260_p1();
    void thread_zext_ln30_1_fu_198_p1();
    void thread_zext_ln30_fu_156_p1();
    void thread_zext_ln33_fu_314_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
