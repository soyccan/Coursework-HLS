// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _duc_HH_
#define _duc_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "imf3.h"
#include "mixer.h"
#include "imf2.h"
#include "duc_mul_mul_18s_1bkb.h"
#include "duc_c.h"
#include "duc_shift_reg_p.h"
#include "duc_c_2.h"
#include "duc_shift_reg_p_2.h"

namespace ap_rtl {

struct duc : public sc_module {
    // Port declarations 12
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<18> > din_i;
    sc_in< sc_lv<16> > freq;
    sc_out< sc_lv<18> > dout_i;
    sc_out< sc_logic > dout_i_ap_vld;
    sc_out< sc_lv<18> > dout_q;
    sc_out< sc_logic > dout_q_ap_vld;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    duc(sc_module_name name);
    SC_HAS_PROCESS(duc);

    ~duc();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    duc_c* c_U;
    duc_shift_reg_p* shift_reg_p_U;
    duc_c_2* c_2_U;
    duc_shift_reg_p_2* shift_reg_p_2_U;
    imf3* grp_imf3_fu_208;
    mixer* grp_mixer_fu_229;
    imf2* grp_imf2_fu_253;
    duc_mul_mul_18s_1bkb<1,2,18,18,36>* duc_mul_mul_18s_1bkb_U23;
    duc_mul_mul_18s_1bkb<1,2,18,18,36>* duc_mul_mul_18s_1bkb_U24;
    sc_signal< sc_lv<15> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<6> > i;
    sc_signal< sc_lv<18> > in_r;
    sc_signal< sc_lv<6> > c_address0;
    sc_signal< sc_logic > c_ce0;
    sc_signal< sc_lv<18> > c_q0;
    sc_signal< sc_lv<1> > init;
    sc_signal< sc_lv<1> > ch;
    sc_signal< sc_lv<7> > shift_reg_p_address0;
    sc_signal< sc_logic > shift_reg_p_ce0;
    sc_signal< sc_logic > shift_reg_p_we0;
    sc_signal< sc_lv<38> > shift_reg_p_q0;
    sc_signal< sc_lv<5> > i_4;
    sc_signal< sc_lv<18> > in_3;
    sc_signal< sc_lv<5> > c_2_address0;
    sc_signal< sc_logic > c_2_ce0;
    sc_signal< sc_lv<18> > c_2_q0;
    sc_signal< sc_lv<1> > init_4;
    sc_signal< sc_lv<1> > ch_3;
    sc_signal< sc_lv<6> > shift_reg_p_2_address0;
    sc_signal< sc_logic > shift_reg_p_2_ce0;
    sc_signal< sc_logic > shift_reg_p_2_we0;
    sc_signal< sc_lv<38> > shift_reg_p_2_q0;
    sc_signal< sc_lv<1> > cnt_1;
    sc_signal< sc_lv<6> > i_load_reg_647;
    sc_signal< sc_lv<18> > c_load_reg_663;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<6> > inc_fu_294_p2;
    sc_signal< sc_lv<6> > inc_reg_668;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > ch_load_reg_673;
    sc_signal< sc_lv<38> > shift_reg_p_load_reg_694;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<36> > grp_fu_628_p2;
    sc_signal< sc_lv<36> > m_reg_699;
    sc_signal< sc_lv<35> > trunc_ln18_fu_327_p1;
    sc_signal< sc_lv<35> > trunc_ln18_reg_704;
    sc_signal< sc_lv<1> > icmp_ln21_fu_334_p2;
    sc_signal< sc_lv<1> > icmp_ln21_reg_709;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<38> > acc_1_fu_382_p2;
    sc_signal< sc_lv<38> > acc_1_reg_714;
    sc_signal< sc_lv<35> > add_ln21_fu_388_p2;
    sc_signal< sc_lv<35> > add_ln21_reg_719;
    sc_signal< sc_lv<5> > i_4_load_reg_724;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<18> > c_2_load_reg_740;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<5> > inc_5_fu_463_p2;
    sc_signal< sc_lv<5> > inc_5_reg_745;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > ch_3_load_reg_750;
    sc_signal< sc_lv<38> > shift_reg_p_2_load_reg_771;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<36> > grp_fu_635_p2;
    sc_signal< sc_lv<36> > m_2_reg_776;
    sc_signal< sc_lv<35> > trunc_ln27_fu_496_p1;
    sc_signal< sc_lv<35> > trunc_ln27_reg_781;
    sc_signal< sc_lv<1> > icmp_ln28_fu_503_p2;
    sc_signal< sc_lv<1> > icmp_ln28_reg_786;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<38> > sum_fu_551_p2;
    sc_signal< sc_lv<38> > sum_reg_791;
    sc_signal< sc_lv<35> > add_ln27_1_fu_557_p2;
    sc_signal< sc_lv<35> > add_ln27_1_reg_796;
    sc_signal< sc_lv<18> > imf1_o_reg_801;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<18> > grp_imf2_fu_253_ap_return;
    sc_signal< sc_lv<18> > imf2_o_reg_806;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > grp_imf2_fu_253_ap_ready;
    sc_signal< sc_logic > grp_imf2_fu_253_ap_done;
    sc_signal< sc_lv<18> > grp_imf3_fu_208_ap_return;
    sc_signal< sc_lv<18> > imf3_o_reg_811;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > grp_imf3_fu_208_ap_ready;
    sc_signal< sc_logic > grp_imf3_fu_208_ap_done;
    sc_signal< sc_logic > grp_imf3_fu_208_ap_start;
    sc_signal< sc_logic > grp_imf3_fu_208_ap_idle;
    sc_signal< sc_logic > grp_mixer_fu_229_ap_start;
    sc_signal< sc_logic > grp_mixer_fu_229_ap_done;
    sc_signal< sc_logic > grp_mixer_fu_229_ap_idle;
    sc_signal< sc_logic > grp_mixer_fu_229_ap_ready;
    sc_signal< sc_lv<18> > grp_mixer_fu_229_Dout_I;
    sc_signal< sc_logic > grp_mixer_fu_229_Dout_I_ap_vld;
    sc_signal< sc_lv<18> > grp_mixer_fu_229_Dout_Q;
    sc_signal< sc_logic > grp_mixer_fu_229_Dout_Q_ap_vld;
    sc_signal< sc_logic > grp_imf2_fu_253_ap_start;
    sc_signal< sc_logic > grp_imf2_fu_253_ap_idle;
    sc_signal< sc_logic > grp_imf3_fu_208_ap_start_reg;
    sc_signal< sc_logic > grp_mixer_fu_229_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > grp_imf2_fu_253_ap_start_reg;
    sc_signal< sc_lv<64> > zext_ln21_fu_289_p1;
    sc_signal< sc_lv<64> > zext_ln21_1_fu_315_p1;
    sc_signal< sc_lv<64> > zext_ln23_fu_399_p1;
    sc_signal< sc_lv<64> > zext_ln28_fu_458_p1;
    sc_signal< sc_lv<64> > zext_ln28_1_fu_484_p1;
    sc_signal< sc_lv<64> > zext_ln30_fu_568_p1;
    sc_signal< sc_lv<6> > inc_4_fu_430_p3;
    sc_signal< sc_lv<1> > icmp_ln18_fu_277_p2;
    sc_signal< sc_lv<1> > xor_ln26_fu_410_p2;
    sc_signal< sc_lv<5> > inc_6_fu_616_p3;
    sc_signal< sc_lv<1> > icmp_ln22_fu_446_p2;
    sc_signal< sc_lv<1> > xor_ln33_fu_583_p2;
    sc_signal< sc_lv<1> > xor_ln34_fu_594_p2;
    sc_signal< sc_lv<7> > tmp_7_fu_307_p3;
    sc_signal< sc_lv<1> > icmp_ln21_1_fu_339_p2;
    sc_signal< sc_lv<1> > or_ln21_fu_350_p2;
    sc_signal< sc_lv<1> > xor_ln21_fu_344_p2;
    sc_signal< sc_lv<1> > and_ln21_fu_356_p2;
    sc_signal< sc_lv<1> > or_ln21_1_fu_362_p2;
    sc_signal< sc_lv<38> > select_ln21_fu_368_p3;
    sc_signal< sc_lv<38> > sext_ln17_fu_375_p1;
    sc_signal< sc_lv<35> > trunc_ln18_1_fu_378_p1;
    sc_signal< sc_lv<7> > tmp_fu_393_p3;
    sc_signal< sc_lv<6> > tmp_9_fu_476_p3;
    sc_signal< sc_lv<1> > icmp_ln28_1_fu_508_p2;
    sc_signal< sc_lv<1> > or_ln28_fu_519_p2;
    sc_signal< sc_lv<1> > xor_ln28_fu_513_p2;
    sc_signal< sc_lv<1> > and_ln28_fu_525_p2;
    sc_signal< sc_lv<1> > or_ln28_1_fu_531_p2;
    sc_signal< sc_lv<38> > select_ln28_fu_537_p3;
    sc_signal< sc_lv<38> > sext_ln27_fu_544_p1;
    sc_signal< sc_lv<35> > trunc_ln27_1_fu_547_p1;
    sc_signal< sc_lv<6> > tmp_8_fu_562_p3;
    sc_signal< sc_lv<15> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<15> ap_ST_fsm_state1;
    static const sc_lv<15> ap_ST_fsm_state2;
    static const sc_lv<15> ap_ST_fsm_state3;
    static const sc_lv<15> ap_ST_fsm_state4;
    static const sc_lv<15> ap_ST_fsm_state5;
    static const sc_lv<15> ap_ST_fsm_state6;
    static const sc_lv<15> ap_ST_fsm_state7;
    static const sc_lv<15> ap_ST_fsm_state8;
    static const sc_lv<15> ap_ST_fsm_state9;
    static const sc_lv<15> ap_ST_fsm_state10;
    static const sc_lv<15> ap_ST_fsm_state11;
    static const sc_lv<15> ap_ST_fsm_state12;
    static const sc_lv<15> ap_ST_fsm_state13;
    static const sc_lv<15> ap_ST_fsm_state14;
    static const sc_lv<15> ap_ST_fsm_state15;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<6> ap_const_lv6_2F;
    static const sc_lv<6> ap_const_lv6_17;
    static const sc_lv<38> ap_const_lv38_0;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_22;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_17;
    static const sc_lv<5> ap_const_lv5_B;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_acc_1_fu_382_p2();
    void thread_add_ln21_fu_388_p2();
    void thread_add_ln27_1_fu_557_p2();
    void thread_and_ln21_fu_356_p2();
    void thread_and_ln28_fu_525_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_c_2_address0();
    void thread_c_2_ce0();
    void thread_c_address0();
    void thread_c_ce0();
    void thread_dout_i();
    void thread_dout_i_ap_vld();
    void thread_dout_q();
    void thread_dout_q_ap_vld();
    void thread_grp_imf2_fu_253_ap_start();
    void thread_grp_imf3_fu_208_ap_start();
    void thread_grp_mixer_fu_229_ap_start();
    void thread_icmp_ln18_fu_277_p2();
    void thread_icmp_ln21_1_fu_339_p2();
    void thread_icmp_ln21_fu_334_p2();
    void thread_icmp_ln22_fu_446_p2();
    void thread_icmp_ln28_1_fu_508_p2();
    void thread_icmp_ln28_fu_503_p2();
    void thread_inc_4_fu_430_p3();
    void thread_inc_5_fu_463_p2();
    void thread_inc_6_fu_616_p3();
    void thread_inc_fu_294_p2();
    void thread_or_ln21_1_fu_362_p2();
    void thread_or_ln21_fu_350_p2();
    void thread_or_ln28_1_fu_531_p2();
    void thread_or_ln28_fu_519_p2();
    void thread_select_ln21_fu_368_p3();
    void thread_select_ln28_fu_537_p3();
    void thread_sext_ln17_fu_375_p1();
    void thread_sext_ln27_fu_544_p1();
    void thread_shift_reg_p_2_address0();
    void thread_shift_reg_p_2_ce0();
    void thread_shift_reg_p_2_we0();
    void thread_shift_reg_p_address0();
    void thread_shift_reg_p_ce0();
    void thread_shift_reg_p_we0();
    void thread_sum_fu_551_p2();
    void thread_tmp_7_fu_307_p3();
    void thread_tmp_8_fu_562_p3();
    void thread_tmp_9_fu_476_p3();
    void thread_tmp_fu_393_p3();
    void thread_trunc_ln18_1_fu_378_p1();
    void thread_trunc_ln18_fu_327_p1();
    void thread_trunc_ln27_1_fu_547_p1();
    void thread_trunc_ln27_fu_496_p1();
    void thread_xor_ln21_fu_344_p2();
    void thread_xor_ln26_fu_410_p2();
    void thread_xor_ln28_fu_513_p2();
    void thread_xor_ln33_fu_583_p2();
    void thread_xor_ln34_fu_594_p2();
    void thread_zext_ln21_1_fu_315_p1();
    void thread_zext_ln21_fu_289_p1();
    void thread_zext_ln23_fu_399_p1();
    void thread_zext_ln28_1_fu_484_p1();
    void thread_zext_ln28_fu_458_p1();
    void thread_zext_ln30_fu_568_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
