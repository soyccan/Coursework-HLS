// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "duc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic duc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic duc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<15> duc::ap_ST_fsm_state1 = "1";
const sc_lv<15> duc::ap_ST_fsm_state2 = "10";
const sc_lv<15> duc::ap_ST_fsm_state3 = "100";
const sc_lv<15> duc::ap_ST_fsm_state4 = "1000";
const sc_lv<15> duc::ap_ST_fsm_state5 = "10000";
const sc_lv<15> duc::ap_ST_fsm_state6 = "100000";
const sc_lv<15> duc::ap_ST_fsm_state7 = "1000000";
const sc_lv<15> duc::ap_ST_fsm_state8 = "10000000";
const sc_lv<15> duc::ap_ST_fsm_state9 = "100000000";
const sc_lv<15> duc::ap_ST_fsm_state10 = "1000000000";
const sc_lv<15> duc::ap_ST_fsm_state11 = "10000000000";
const sc_lv<15> duc::ap_ST_fsm_state12 = "100000000000";
const sc_lv<15> duc::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<15> duc::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<15> duc::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<32> duc::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<6> duc::ap_const_lv6_0 = "000000";
const sc_lv<1> duc::ap_const_lv1_1 = "1";
const sc_lv<1> duc::ap_const_lv1_0 = "0";
const sc_lv<5> duc::ap_const_lv5_0 = "00000";
const sc_lv<32> duc::ap_const_lv32_1 = "1";
const sc_lv<32> duc::ap_const_lv32_2 = "10";
const sc_lv<32> duc::ap_const_lv32_3 = "11";
const sc_lv<32> duc::ap_const_lv32_4 = "100";
const sc_lv<32> duc::ap_const_lv32_5 = "101";
const sc_lv<32> duc::ap_const_lv32_6 = "110";
const sc_lv<32> duc::ap_const_lv32_7 = "111";
const sc_lv<32> duc::ap_const_lv32_8 = "1000";
const sc_lv<32> duc::ap_const_lv32_9 = "1001";
const sc_lv<32> duc::ap_const_lv32_A = "1010";
const sc_lv<32> duc::ap_const_lv32_B = "1011";
const sc_lv<32> duc::ap_const_lv32_C = "1100";
const sc_lv<32> duc::ap_const_lv32_D = "1101";
const sc_lv<32> duc::ap_const_lv32_E = "1110";
const sc_lv<6> duc::ap_const_lv6_1 = "1";
const sc_lv<6> duc::ap_const_lv6_2F = "101111";
const sc_lv<6> duc::ap_const_lv6_17 = "10111";
const sc_lv<38> duc::ap_const_lv38_0 = "00000000000000000000000000000000000000";
const sc_lv<32> duc::ap_const_lv32_11 = "10001";
const sc_lv<32> duc::ap_const_lv32_22 = "100010";
const sc_lv<5> duc::ap_const_lv5_1 = "1";
const sc_lv<5> duc::ap_const_lv5_17 = "10111";
const sc_lv<5> duc::ap_const_lv5_B = "1011";
const bool duc::ap_const_boolean_1 = true;

duc::duc(sc_module_name name) : sc_module(name), mVcdFile(0) {
    c_U = new duc_c("c_U");
    c_U->clk(ap_clk);
    c_U->reset(ap_rst);
    c_U->address0(c_address0);
    c_U->ce0(c_ce0);
    c_U->q0(c_q0);
    shift_reg_p_U = new duc_shift_reg_p("shift_reg_p_U");
    shift_reg_p_U->clk(ap_clk);
    shift_reg_p_U->reset(ap_rst);
    shift_reg_p_U->address0(shift_reg_p_address0);
    shift_reg_p_U->ce0(shift_reg_p_ce0);
    shift_reg_p_U->we0(shift_reg_p_we0);
    shift_reg_p_U->d0(acc_1_reg_714);
    shift_reg_p_U->q0(shift_reg_p_q0);
    c_2_U = new duc_c_2("c_2_U");
    c_2_U->clk(ap_clk);
    c_2_U->reset(ap_rst);
    c_2_U->address0(c_2_address0);
    c_2_U->ce0(c_2_ce0);
    c_2_U->q0(c_2_q0);
    shift_reg_p_2_U = new duc_shift_reg_p_2("shift_reg_p_2_U");
    shift_reg_p_2_U->clk(ap_clk);
    shift_reg_p_2_U->reset(ap_rst);
    shift_reg_p_2_U->address0(shift_reg_p_2_address0);
    shift_reg_p_2_U->ce0(shift_reg_p_2_ce0);
    shift_reg_p_2_U->we0(shift_reg_p_2_we0);
    shift_reg_p_2_U->d0(sum_reg_791);
    shift_reg_p_2_U->q0(shift_reg_p_2_q0);
    grp_imf3_fu_208 = new imf3("grp_imf3_fu_208");
    grp_imf3_fu_208->ap_clk(ap_clk);
    grp_imf3_fu_208->ap_rst(ap_rst);
    grp_imf3_fu_208->ap_start(grp_imf3_fu_208_ap_start);
    grp_imf3_fu_208->ap_done(grp_imf3_fu_208_ap_done);
    grp_imf3_fu_208->ap_idle(grp_imf3_fu_208_ap_idle);
    grp_imf3_fu_208->ap_ready(grp_imf3_fu_208_ap_ready);
    grp_imf3_fu_208->x(imf2_o_reg_806);
    grp_imf3_fu_208->ap_return(grp_imf3_fu_208_ap_return);
    grp_mixer_fu_229 = new mixer("grp_mixer_fu_229");
    grp_mixer_fu_229->ap_clk(ap_clk);
    grp_mixer_fu_229->ap_rst(ap_rst);
    grp_mixer_fu_229->ap_start(grp_mixer_fu_229_ap_start);
    grp_mixer_fu_229->ap_done(grp_mixer_fu_229_ap_done);
    grp_mixer_fu_229->ap_idle(grp_mixer_fu_229_ap_idle);
    grp_mixer_fu_229->ap_ready(grp_mixer_fu_229_ap_ready);
    grp_mixer_fu_229->freq(freq);
    grp_mixer_fu_229->Din(imf3_o_reg_811);
    grp_mixer_fu_229->Dout_I(grp_mixer_fu_229_Dout_I);
    grp_mixer_fu_229->Dout_I_ap_vld(grp_mixer_fu_229_Dout_I_ap_vld);
    grp_mixer_fu_229->Dout_Q(grp_mixer_fu_229_Dout_Q);
    grp_mixer_fu_229->Dout_Q_ap_vld(grp_mixer_fu_229_Dout_Q_ap_vld);
    grp_imf2_fu_253 = new imf2("grp_imf2_fu_253");
    grp_imf2_fu_253->ap_clk(ap_clk);
    grp_imf2_fu_253->ap_rst(ap_rst);
    grp_imf2_fu_253->ap_start(grp_imf2_fu_253_ap_start);
    grp_imf2_fu_253->ap_done(grp_imf2_fu_253_ap_done);
    grp_imf2_fu_253->ap_idle(grp_imf2_fu_253_ap_idle);
    grp_imf2_fu_253->ap_ready(grp_imf2_fu_253_ap_ready);
    grp_imf2_fu_253->x(imf1_o_reg_801);
    grp_imf2_fu_253->ap_return(grp_imf2_fu_253_ap_return);
    duc_mul_mul_18s_1bkb_U23 = new duc_mul_mul_18s_1bkb<1,2,18,18,36>("duc_mul_mul_18s_1bkb_U23");
    duc_mul_mul_18s_1bkb_U23->clk(ap_clk);
    duc_mul_mul_18s_1bkb_U23->reset(ap_rst);
    duc_mul_mul_18s_1bkb_U23->din0(in_r);
    duc_mul_mul_18s_1bkb_U23->din1(c_load_reg_663);
    duc_mul_mul_18s_1bkb_U23->ce(ap_var_for_const0);
    duc_mul_mul_18s_1bkb_U23->dout(grp_fu_628_p2);
    duc_mul_mul_18s_1bkb_U24 = new duc_mul_mul_18s_1bkb<1,2,18,18,36>("duc_mul_mul_18s_1bkb_U24");
    duc_mul_mul_18s_1bkb_U24->clk(ap_clk);
    duc_mul_mul_18s_1bkb_U24->reset(ap_rst);
    duc_mul_mul_18s_1bkb_U24->din0(c_2_load_reg_740);
    duc_mul_mul_18s_1bkb_U24->din1(in_3);
    duc_mul_mul_18s_1bkb_U24->ce(ap_var_for_const0);
    duc_mul_mul_18s_1bkb_U24->dout(grp_fu_635_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_acc_1_fu_382_p2);
    sensitive << ( select_ln21_fu_368_p3 );
    sensitive << ( sext_ln17_fu_375_p1 );

    SC_METHOD(thread_add_ln21_fu_388_p2);
    sensitive << ( trunc_ln18_reg_704 );
    sensitive << ( trunc_ln18_1_fu_378_p1 );

    SC_METHOD(thread_add_ln27_1_fu_557_p2);
    sensitive << ( trunc_ln27_reg_781 );
    sensitive << ( trunc_ln27_1_fu_547_p1 );

    SC_METHOD(thread_and_ln21_fu_356_p2);
    sensitive << ( or_ln21_fu_350_p2 );
    sensitive << ( xor_ln21_fu_344_p2 );

    SC_METHOD(thread_and_ln28_fu_525_p2);
    sensitive << ( or_ln28_fu_519_p2 );
    sensitive << ( xor_ln28_fu_513_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( grp_mixer_fu_229_ap_done );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( grp_mixer_fu_229_ap_done );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_c_2_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln28_fu_458_p1 );

    SC_METHOD(thread_c_2_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_c_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( zext_ln21_fu_289_p1 );

    SC_METHOD(thread_c_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_dout_i);
    sensitive << ( grp_mixer_fu_229_Dout_I );
    sensitive << ( grp_mixer_fu_229_Dout_I_ap_vld );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_dout_i_ap_vld);
    sensitive << ( grp_mixer_fu_229_Dout_I_ap_vld );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_dout_q);
    sensitive << ( grp_mixer_fu_229_Dout_Q );
    sensitive << ( grp_mixer_fu_229_Dout_Q_ap_vld );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_dout_q_ap_vld);
    sensitive << ( grp_mixer_fu_229_Dout_Q_ap_vld );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_grp_imf2_fu_253_ap_start);
    sensitive << ( grp_imf2_fu_253_ap_start_reg );

    SC_METHOD(thread_grp_imf3_fu_208_ap_start);
    sensitive << ( grp_imf3_fu_208_ap_start_reg );

    SC_METHOD(thread_grp_mixer_fu_229_ap_start);
    sensitive << ( grp_mixer_fu_229_ap_start_reg );

    SC_METHOD(thread_icmp_ln18_fu_277_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( i );

    SC_METHOD(thread_icmp_ln21_1_fu_339_p2);
    sensitive << ( i_load_reg_647 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_icmp_ln21_fu_334_p2);
    sensitive << ( i_load_reg_647 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_icmp_ln22_fu_446_p2);
    sensitive << ( i_4 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_icmp_ln28_1_fu_508_p2);
    sensitive << ( i_4_load_reg_724 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_icmp_ln28_fu_503_p2);
    sensitive << ( i_4_load_reg_724 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_inc_4_fu_430_p3);
    sensitive << ( inc_reg_668 );
    sensitive << ( icmp_ln21_reg_709 );

    SC_METHOD(thread_inc_5_fu_463_p2);
    sensitive << ( i_4_load_reg_724 );

    SC_METHOD(thread_inc_6_fu_616_p3);
    sensitive << ( inc_5_reg_745 );
    sensitive << ( icmp_ln28_reg_786 );

    SC_METHOD(thread_inc_fu_294_p2);
    sensitive << ( i_load_reg_647 );

    SC_METHOD(thread_or_ln21_1_fu_362_p2);
    sensitive << ( init );
    sensitive << ( and_ln21_fu_356_p2 );

    SC_METHOD(thread_or_ln21_fu_350_p2);
    sensitive << ( icmp_ln21_fu_334_p2 );
    sensitive << ( icmp_ln21_1_fu_339_p2 );

    SC_METHOD(thread_or_ln28_1_fu_531_p2);
    sensitive << ( init_4 );
    sensitive << ( and_ln28_fu_525_p2 );

    SC_METHOD(thread_or_ln28_fu_519_p2);
    sensitive << ( icmp_ln28_fu_503_p2 );
    sensitive << ( icmp_ln28_1_fu_508_p2 );

    SC_METHOD(thread_select_ln21_fu_368_p3);
    sensitive << ( shift_reg_p_load_reg_694 );
    sensitive << ( or_ln21_1_fu_362_p2 );

    SC_METHOD(thread_select_ln28_fu_537_p3);
    sensitive << ( shift_reg_p_2_load_reg_771 );
    sensitive << ( or_ln28_1_fu_531_p2 );

    SC_METHOD(thread_sext_ln17_fu_375_p1);
    sensitive << ( m_reg_699 );

    SC_METHOD(thread_sext_ln27_fu_544_p1);
    sensitive << ( m_2_reg_776 );

    SC_METHOD(thread_shift_reg_p_2_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( zext_ln28_1_fu_484_p1 );
    sensitive << ( zext_ln30_fu_568_p1 );

    SC_METHOD(thread_shift_reg_p_2_ce0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_shift_reg_p_2_we0);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_shift_reg_p_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln21_1_fu_315_p1 );
    sensitive << ( zext_ln23_fu_399_p1 );

    SC_METHOD(thread_shift_reg_p_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_shift_reg_p_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sum_fu_551_p2);
    sensitive << ( select_ln28_fu_537_p3 );
    sensitive << ( sext_ln27_fu_544_p1 );

    SC_METHOD(thread_tmp_7_fu_307_p3);
    sensitive << ( ch );
    sensitive << ( inc_fu_294_p2 );

    SC_METHOD(thread_tmp_8_fu_562_p3);
    sensitive << ( i_4_load_reg_724 );
    sensitive << ( ch_3_load_reg_750 );

    SC_METHOD(thread_tmp_9_fu_476_p3);
    sensitive << ( ch_3 );
    sensitive << ( inc_5_fu_463_p2 );

    SC_METHOD(thread_tmp_fu_393_p3);
    sensitive << ( i_load_reg_647 );
    sensitive << ( ch_load_reg_673 );

    SC_METHOD(thread_trunc_ln18_1_fu_378_p1);
    sensitive << ( select_ln21_fu_368_p3 );

    SC_METHOD(thread_trunc_ln18_fu_327_p1);
    sensitive << ( grp_fu_628_p2 );

    SC_METHOD(thread_trunc_ln27_1_fu_547_p1);
    sensitive << ( select_ln28_fu_537_p3 );

    SC_METHOD(thread_trunc_ln27_fu_496_p1);
    sensitive << ( grp_fu_635_p2 );

    SC_METHOD(thread_xor_ln21_fu_344_p2);
    sensitive << ( init );

    SC_METHOD(thread_xor_ln26_fu_410_p2);
    sensitive << ( ch_load_reg_673 );

    SC_METHOD(thread_xor_ln28_fu_513_p2);
    sensitive << ( init_4 );

    SC_METHOD(thread_xor_ln33_fu_583_p2);
    sensitive << ( cnt_1 );
    sensitive << ( ch_3_load_reg_750 );

    SC_METHOD(thread_xor_ln34_fu_594_p2);
    sensitive << ( cnt_1 );

    SC_METHOD(thread_zext_ln21_1_fu_315_p1);
    sensitive << ( tmp_7_fu_307_p3 );

    SC_METHOD(thread_zext_ln21_fu_289_p1);
    sensitive << ( i );

    SC_METHOD(thread_zext_ln23_fu_399_p1);
    sensitive << ( tmp_fu_393_p3 );

    SC_METHOD(thread_zext_ln28_1_fu_484_p1);
    sensitive << ( tmp_9_fu_476_p3 );

    SC_METHOD(thread_zext_ln28_fu_458_p1);
    sensitive << ( i_4 );

    SC_METHOD(thread_zext_ln30_fu_568_p1);
    sensitive << ( tmp_8_fu_562_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( grp_imf2_fu_253_ap_done );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( grp_imf3_fu_208_ap_done );
    sensitive << ( grp_mixer_fu_229_ap_done );
    sensitive << ( ap_CS_fsm_state15 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000000000001";
    i = "000000";
    in_r = "000000000000000000";
    init = "1";
    ch = "0";
    i_4 = "00000";
    in_3 = "000000000000000000";
    init_4 = "1";
    ch_3 = "0";
    cnt_1 = "0";
    grp_imf3_fu_208_ap_start_reg = SC_LOGIC_0;
    grp_mixer_fu_229_ap_start_reg = SC_LOGIC_0;
    grp_imf2_fu_253_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "duc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, din_i, "(port)din_i");
    sc_trace(mVcdFile, freq, "(port)freq");
    sc_trace(mVcdFile, dout_i, "(port)dout_i");
    sc_trace(mVcdFile, dout_i_ap_vld, "(port)dout_i_ap_vld");
    sc_trace(mVcdFile, dout_q, "(port)dout_q");
    sc_trace(mVcdFile, dout_q_ap_vld, "(port)dout_q_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i, "i");
    sc_trace(mVcdFile, in_r, "in_r");
    sc_trace(mVcdFile, c_address0, "c_address0");
    sc_trace(mVcdFile, c_ce0, "c_ce0");
    sc_trace(mVcdFile, c_q0, "c_q0");
    sc_trace(mVcdFile, init, "init");
    sc_trace(mVcdFile, ch, "ch");
    sc_trace(mVcdFile, shift_reg_p_address0, "shift_reg_p_address0");
    sc_trace(mVcdFile, shift_reg_p_ce0, "shift_reg_p_ce0");
    sc_trace(mVcdFile, shift_reg_p_we0, "shift_reg_p_we0");
    sc_trace(mVcdFile, shift_reg_p_q0, "shift_reg_p_q0");
    sc_trace(mVcdFile, i_4, "i_4");
    sc_trace(mVcdFile, in_3, "in_3");
    sc_trace(mVcdFile, c_2_address0, "c_2_address0");
    sc_trace(mVcdFile, c_2_ce0, "c_2_ce0");
    sc_trace(mVcdFile, c_2_q0, "c_2_q0");
    sc_trace(mVcdFile, init_4, "init_4");
    sc_trace(mVcdFile, ch_3, "ch_3");
    sc_trace(mVcdFile, shift_reg_p_2_address0, "shift_reg_p_2_address0");
    sc_trace(mVcdFile, shift_reg_p_2_ce0, "shift_reg_p_2_ce0");
    sc_trace(mVcdFile, shift_reg_p_2_we0, "shift_reg_p_2_we0");
    sc_trace(mVcdFile, shift_reg_p_2_q0, "shift_reg_p_2_q0");
    sc_trace(mVcdFile, cnt_1, "cnt_1");
    sc_trace(mVcdFile, i_load_reg_647, "i_load_reg_647");
    sc_trace(mVcdFile, c_load_reg_663, "c_load_reg_663");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, inc_fu_294_p2, "inc_fu_294_p2");
    sc_trace(mVcdFile, inc_reg_668, "inc_reg_668");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ch_load_reg_673, "ch_load_reg_673");
    sc_trace(mVcdFile, shift_reg_p_load_reg_694, "shift_reg_p_load_reg_694");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, grp_fu_628_p2, "grp_fu_628_p2");
    sc_trace(mVcdFile, m_reg_699, "m_reg_699");
    sc_trace(mVcdFile, trunc_ln18_fu_327_p1, "trunc_ln18_fu_327_p1");
    sc_trace(mVcdFile, trunc_ln18_reg_704, "trunc_ln18_reg_704");
    sc_trace(mVcdFile, icmp_ln21_fu_334_p2, "icmp_ln21_fu_334_p2");
    sc_trace(mVcdFile, icmp_ln21_reg_709, "icmp_ln21_reg_709");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, acc_1_fu_382_p2, "acc_1_fu_382_p2");
    sc_trace(mVcdFile, acc_1_reg_714, "acc_1_reg_714");
    sc_trace(mVcdFile, add_ln21_fu_388_p2, "add_ln21_fu_388_p2");
    sc_trace(mVcdFile, add_ln21_reg_719, "add_ln21_reg_719");
    sc_trace(mVcdFile, i_4_load_reg_724, "i_4_load_reg_724");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, c_2_load_reg_740, "c_2_load_reg_740");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, inc_5_fu_463_p2, "inc_5_fu_463_p2");
    sc_trace(mVcdFile, inc_5_reg_745, "inc_5_reg_745");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ch_3_load_reg_750, "ch_3_load_reg_750");
    sc_trace(mVcdFile, shift_reg_p_2_load_reg_771, "shift_reg_p_2_load_reg_771");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, grp_fu_635_p2, "grp_fu_635_p2");
    sc_trace(mVcdFile, m_2_reg_776, "m_2_reg_776");
    sc_trace(mVcdFile, trunc_ln27_fu_496_p1, "trunc_ln27_fu_496_p1");
    sc_trace(mVcdFile, trunc_ln27_reg_781, "trunc_ln27_reg_781");
    sc_trace(mVcdFile, icmp_ln28_fu_503_p2, "icmp_ln28_fu_503_p2");
    sc_trace(mVcdFile, icmp_ln28_reg_786, "icmp_ln28_reg_786");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, sum_fu_551_p2, "sum_fu_551_p2");
    sc_trace(mVcdFile, sum_reg_791, "sum_reg_791");
    sc_trace(mVcdFile, add_ln27_1_fu_557_p2, "add_ln27_1_fu_557_p2");
    sc_trace(mVcdFile, add_ln27_1_reg_796, "add_ln27_1_reg_796");
    sc_trace(mVcdFile, imf1_o_reg_801, "imf1_o_reg_801");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_imf2_fu_253_ap_return, "grp_imf2_fu_253_ap_return");
    sc_trace(mVcdFile, imf2_o_reg_806, "imf2_o_reg_806");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, grp_imf2_fu_253_ap_ready, "grp_imf2_fu_253_ap_ready");
    sc_trace(mVcdFile, grp_imf2_fu_253_ap_done, "grp_imf2_fu_253_ap_done");
    sc_trace(mVcdFile, grp_imf3_fu_208_ap_return, "grp_imf3_fu_208_ap_return");
    sc_trace(mVcdFile, imf3_o_reg_811, "imf3_o_reg_811");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, grp_imf3_fu_208_ap_ready, "grp_imf3_fu_208_ap_ready");
    sc_trace(mVcdFile, grp_imf3_fu_208_ap_done, "grp_imf3_fu_208_ap_done");
    sc_trace(mVcdFile, grp_imf3_fu_208_ap_start, "grp_imf3_fu_208_ap_start");
    sc_trace(mVcdFile, grp_imf3_fu_208_ap_idle, "grp_imf3_fu_208_ap_idle");
    sc_trace(mVcdFile, grp_mixer_fu_229_ap_start, "grp_mixer_fu_229_ap_start");
    sc_trace(mVcdFile, grp_mixer_fu_229_ap_done, "grp_mixer_fu_229_ap_done");
    sc_trace(mVcdFile, grp_mixer_fu_229_ap_idle, "grp_mixer_fu_229_ap_idle");
    sc_trace(mVcdFile, grp_mixer_fu_229_ap_ready, "grp_mixer_fu_229_ap_ready");
    sc_trace(mVcdFile, grp_mixer_fu_229_Dout_I, "grp_mixer_fu_229_Dout_I");
    sc_trace(mVcdFile, grp_mixer_fu_229_Dout_I_ap_vld, "grp_mixer_fu_229_Dout_I_ap_vld");
    sc_trace(mVcdFile, grp_mixer_fu_229_Dout_Q, "grp_mixer_fu_229_Dout_Q");
    sc_trace(mVcdFile, grp_mixer_fu_229_Dout_Q_ap_vld, "grp_mixer_fu_229_Dout_Q_ap_vld");
    sc_trace(mVcdFile, grp_imf2_fu_253_ap_start, "grp_imf2_fu_253_ap_start");
    sc_trace(mVcdFile, grp_imf2_fu_253_ap_idle, "grp_imf2_fu_253_ap_idle");
    sc_trace(mVcdFile, grp_imf3_fu_208_ap_start_reg, "grp_imf3_fu_208_ap_start_reg");
    sc_trace(mVcdFile, grp_mixer_fu_229_ap_start_reg, "grp_mixer_fu_229_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, grp_imf2_fu_253_ap_start_reg, "grp_imf2_fu_253_ap_start_reg");
    sc_trace(mVcdFile, zext_ln21_fu_289_p1, "zext_ln21_fu_289_p1");
    sc_trace(mVcdFile, zext_ln21_1_fu_315_p1, "zext_ln21_1_fu_315_p1");
    sc_trace(mVcdFile, zext_ln23_fu_399_p1, "zext_ln23_fu_399_p1");
    sc_trace(mVcdFile, zext_ln28_fu_458_p1, "zext_ln28_fu_458_p1");
    sc_trace(mVcdFile, zext_ln28_1_fu_484_p1, "zext_ln28_1_fu_484_p1");
    sc_trace(mVcdFile, zext_ln30_fu_568_p1, "zext_ln30_fu_568_p1");
    sc_trace(mVcdFile, inc_4_fu_430_p3, "inc_4_fu_430_p3");
    sc_trace(mVcdFile, icmp_ln18_fu_277_p2, "icmp_ln18_fu_277_p2");
    sc_trace(mVcdFile, xor_ln26_fu_410_p2, "xor_ln26_fu_410_p2");
    sc_trace(mVcdFile, inc_6_fu_616_p3, "inc_6_fu_616_p3");
    sc_trace(mVcdFile, icmp_ln22_fu_446_p2, "icmp_ln22_fu_446_p2");
    sc_trace(mVcdFile, xor_ln33_fu_583_p2, "xor_ln33_fu_583_p2");
    sc_trace(mVcdFile, xor_ln34_fu_594_p2, "xor_ln34_fu_594_p2");
    sc_trace(mVcdFile, tmp_7_fu_307_p3, "tmp_7_fu_307_p3");
    sc_trace(mVcdFile, icmp_ln21_1_fu_339_p2, "icmp_ln21_1_fu_339_p2");
    sc_trace(mVcdFile, or_ln21_fu_350_p2, "or_ln21_fu_350_p2");
    sc_trace(mVcdFile, xor_ln21_fu_344_p2, "xor_ln21_fu_344_p2");
    sc_trace(mVcdFile, and_ln21_fu_356_p2, "and_ln21_fu_356_p2");
    sc_trace(mVcdFile, or_ln21_1_fu_362_p2, "or_ln21_1_fu_362_p2");
    sc_trace(mVcdFile, select_ln21_fu_368_p3, "select_ln21_fu_368_p3");
    sc_trace(mVcdFile, sext_ln17_fu_375_p1, "sext_ln17_fu_375_p1");
    sc_trace(mVcdFile, trunc_ln18_1_fu_378_p1, "trunc_ln18_1_fu_378_p1");
    sc_trace(mVcdFile, tmp_fu_393_p3, "tmp_fu_393_p3");
    sc_trace(mVcdFile, tmp_9_fu_476_p3, "tmp_9_fu_476_p3");
    sc_trace(mVcdFile, icmp_ln28_1_fu_508_p2, "icmp_ln28_1_fu_508_p2");
    sc_trace(mVcdFile, or_ln28_fu_519_p2, "or_ln28_fu_519_p2");
    sc_trace(mVcdFile, xor_ln28_fu_513_p2, "xor_ln28_fu_513_p2");
    sc_trace(mVcdFile, and_ln28_fu_525_p2, "and_ln28_fu_525_p2");
    sc_trace(mVcdFile, or_ln28_1_fu_531_p2, "or_ln28_1_fu_531_p2");
    sc_trace(mVcdFile, select_ln28_fu_537_p3, "select_ln28_fu_537_p3");
    sc_trace(mVcdFile, sext_ln27_fu_544_p1, "sext_ln27_fu_544_p1");
    sc_trace(mVcdFile, trunc_ln27_1_fu_547_p1, "trunc_ln27_1_fu_547_p1");
    sc_trace(mVcdFile, tmp_8_fu_562_p3, "tmp_8_fu_562_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("duc.hdltvin.dat");
    mHdltvoutHandle.open("duc.hdltvout.dat");
}

duc::~duc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete c_U;
    delete shift_reg_p_U;
    delete c_2_U;
    delete shift_reg_p_2_U;
    delete grp_imf3_fu_208;
    delete grp_mixer_fu_229;
    delete grp_imf2_fu_253;
    delete duc_mul_mul_18s_1bkb_U23;
    delete duc_mul_mul_18s_1bkb_U24;
}

void duc::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void duc::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_imf2_fu_253_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
            grp_imf2_fu_253_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_imf2_fu_253_ap_ready.read())) {
            grp_imf2_fu_253_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_imf3_fu_208_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
             esl_seteq<1,1,1>(grp_imf2_fu_253_ap_done.read(), ap_const_logic_1))) {
            grp_imf3_fu_208_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_imf3_fu_208_ap_ready.read())) {
            grp_imf3_fu_208_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_mixer_fu_229_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
            grp_mixer_fu_229_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_mixer_fu_229_ap_ready.read())) {
            grp_mixer_fu_229_ap_start_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        acc_1_reg_714 = acc_1_fu_382_p2.read();
        add_ln21_reg_719 = add_ln21_fu_388_p2.read();
        icmp_ln21_reg_709 = icmp_ln21_fu_334_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        add_ln27_1_reg_796 = add_ln27_1_fu_557_p2.read();
        icmp_ln28_reg_786 = icmp_ln28_fu_503_p2.read();
        sum_reg_791 = sum_fu_551_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        c_2_load_reg_740 = c_2_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        c_load_reg_663 = c_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln21_reg_709.read()))) {
        ch = xor_ln26_fu_410_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln28_reg_786.read()))) {
        ch_3 = xor_ln33_fu_583_p2.read();
        cnt_1 = xor_ln34_fu_594_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        ch_3_load_reg_750 = ch_3.read();
        inc_5_reg_745 = inc_5_fu_463_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        ch_load_reg_673 = ch.read();
        inc_reg_668 = inc_fu_294_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i = inc_4_fu_430_p3.read();
        i_4_load_reg_724 = i_4.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        i_4 = inc_6_fu_616_p3.read();
        imf1_o_reg_801 = add_ln27_1_reg_796.read().range(34, 17);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_load_reg_647 = i.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(grp_imf2_fu_253_ap_done.read(), ap_const_logic_1))) {
        imf2_o_reg_806 = grp_imf2_fu_253_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(grp_imf3_fu_208_ap_done.read(), ap_const_logic_1))) {
        imf3_o_reg_811 = grp_imf3_fu_208_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln22_fu_446_p2.read()))) {
        in_3 = add_ln21_reg_719.read().range(34, 17);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln18_fu_277_p2.read()))) {
        in_r = din_i.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln21_reg_709.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ch_load_reg_673.read()))) {
        init = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln28_reg_786.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ch_3_load_reg_750.read()))) {
        init_4 = ap_const_lv1_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        m_2_reg_776 = grp_fu_635_p2.read();
        shift_reg_p_2_load_reg_771 = shift_reg_p_2_q0.read();
        trunc_ln27_reg_781 = trunc_ln27_fu_496_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        m_reg_699 = grp_fu_628_p2.read();
        shift_reg_p_load_reg_694 = shift_reg_p_q0.read();
        trunc_ln18_reg_704 = trunc_ln18_fu_327_p1.read();
    }
}

void duc::thread_acc_1_fu_382_p2() {
    acc_1_fu_382_p2 = (!sext_ln17_fu_375_p1.read().is_01() || !select_ln21_fu_368_p3.read().is_01())? sc_lv<38>(): (sc_bigint<38>(sext_ln17_fu_375_p1.read()) + sc_biguint<38>(select_ln21_fu_368_p3.read()));
}

void duc::thread_add_ln21_fu_388_p2() {
    add_ln21_fu_388_p2 = (!trunc_ln18_1_fu_378_p1.read().is_01() || !trunc_ln18_reg_704.read().is_01())? sc_lv<35>(): (sc_biguint<35>(trunc_ln18_1_fu_378_p1.read()) + sc_biguint<35>(trunc_ln18_reg_704.read()));
}

void duc::thread_add_ln27_1_fu_557_p2() {
    add_ln27_1_fu_557_p2 = (!trunc_ln27_1_fu_547_p1.read().is_01() || !trunc_ln27_reg_781.read().is_01())? sc_lv<35>(): (sc_biguint<35>(trunc_ln27_1_fu_547_p1.read()) + sc_biguint<35>(trunc_ln27_reg_781.read()));
}

void duc::thread_and_ln21_fu_356_p2() {
    and_ln21_fu_356_p2 = (or_ln21_fu_350_p2.read() & xor_ln21_fu_344_p2.read());
}

void duc::thread_and_ln28_fu_525_p2() {
    and_ln28_fu_525_p2 = (or_ln28_fu_519_p2.read() & xor_ln28_fu_513_p2.read());
}

void duc::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void duc::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void duc::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void duc::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void duc::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void duc::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void duc::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void duc::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void duc::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void duc::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void duc::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void duc::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void duc::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void duc::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void duc::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void duc::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
         esl_seteq<1,1,1>(grp_mixer_fu_229_ap_done.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void duc::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void duc::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
         esl_seteq<1,1,1>(grp_mixer_fu_229_ap_done.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void duc::thread_c_2_address0() {
    c_2_address0 =  (sc_lv<5>) (zext_ln28_fu_458_p1.read());
}

void duc::thread_c_2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        c_2_ce0 = ap_const_logic_1;
    } else {
        c_2_ce0 = ap_const_logic_0;
    }
}

void duc::thread_c_address0() {
    c_address0 =  (sc_lv<6>) (zext_ln21_fu_289_p1.read());
}

void duc::thread_c_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        c_ce0 = ap_const_logic_1;
    } else {
        c_ce0 = ap_const_logic_0;
    }
}

void duc::thread_dout_i() {
    dout_i = grp_mixer_fu_229_Dout_I.read();
}

void duc::thread_dout_i_ap_vld() {
    dout_i_ap_vld = grp_mixer_fu_229_Dout_I_ap_vld.read();
}

void duc::thread_dout_q() {
    dout_q = grp_mixer_fu_229_Dout_Q.read();
}

void duc::thread_dout_q_ap_vld() {
    dout_q_ap_vld = grp_mixer_fu_229_Dout_Q_ap_vld.read();
}

void duc::thread_grp_imf2_fu_253_ap_start() {
    grp_imf2_fu_253_ap_start = grp_imf2_fu_253_ap_start_reg.read();
}

void duc::thread_grp_imf3_fu_208_ap_start() {
    grp_imf3_fu_208_ap_start = grp_imf3_fu_208_ap_start_reg.read();
}

void duc::thread_grp_mixer_fu_229_ap_start() {
    grp_mixer_fu_229_ap_start = grp_mixer_fu_229_ap_start_reg.read();
}

void duc::thread_icmp_ln18_fu_277_p2() {
    icmp_ln18_fu_277_p2 = (!i.read().is_01() || !ap_const_lv6_0.is_01())? sc_lv<1>(): sc_lv<1>(i.read() == ap_const_lv6_0);
}

void duc::thread_icmp_ln21_1_fu_339_p2() {
    icmp_ln21_1_fu_339_p2 = (!i_load_reg_647.read().is_01() || !ap_const_lv6_17.is_01())? sc_lv<1>(): sc_lv<1>(i_load_reg_647.read() == ap_const_lv6_17);
}

void duc::thread_icmp_ln21_fu_334_p2() {
    icmp_ln21_fu_334_p2 = (!i_load_reg_647.read().is_01() || !ap_const_lv6_2F.is_01())? sc_lv<1>(): sc_lv<1>(i_load_reg_647.read() == ap_const_lv6_2F);
}

void duc::thread_icmp_ln22_fu_446_p2() {
    icmp_ln22_fu_446_p2 = (!i_4.read().is_01() || !ap_const_lv5_0.is_01())? sc_lv<1>(): sc_lv<1>(i_4.read() == ap_const_lv5_0);
}

void duc::thread_icmp_ln28_1_fu_508_p2() {
    icmp_ln28_1_fu_508_p2 = (!i_4_load_reg_724.read().is_01() || !ap_const_lv5_B.is_01())? sc_lv<1>(): sc_lv<1>(i_4_load_reg_724.read() == ap_const_lv5_B);
}

void duc::thread_icmp_ln28_fu_503_p2() {
    icmp_ln28_fu_503_p2 = (!i_4_load_reg_724.read().is_01() || !ap_const_lv5_17.is_01())? sc_lv<1>(): sc_lv<1>(i_4_load_reg_724.read() == ap_const_lv5_17);
}

void duc::thread_inc_4_fu_430_p3() {
    inc_4_fu_430_p3 = (!icmp_ln21_reg_709.read()[0].is_01())? sc_lv<6>(): ((icmp_ln21_reg_709.read()[0].to_bool())? ap_const_lv6_0: inc_reg_668.read());
}

void duc::thread_inc_5_fu_463_p2() {
    inc_5_fu_463_p2 = (!ap_const_lv5_1.is_01() || !i_4_load_reg_724.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_1) + sc_biguint<5>(i_4_load_reg_724.read()));
}

void duc::thread_inc_6_fu_616_p3() {
    inc_6_fu_616_p3 = (!icmp_ln28_reg_786.read()[0].is_01())? sc_lv<5>(): ((icmp_ln28_reg_786.read()[0].to_bool())? ap_const_lv5_0: inc_5_reg_745.read());
}

void duc::thread_inc_fu_294_p2() {
    inc_fu_294_p2 = (!ap_const_lv6_1.is_01() || !i_load_reg_647.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1) + sc_biguint<6>(i_load_reg_647.read()));
}

void duc::thread_or_ln21_1_fu_362_p2() {
    or_ln21_1_fu_362_p2 = (and_ln21_fu_356_p2.read() | init.read());
}

void duc::thread_or_ln21_fu_350_p2() {
    or_ln21_fu_350_p2 = (icmp_ln21_fu_334_p2.read() | icmp_ln21_1_fu_339_p2.read());
}

void duc::thread_or_ln28_1_fu_531_p2() {
    or_ln28_1_fu_531_p2 = (and_ln28_fu_525_p2.read() | init_4.read());
}

void duc::thread_or_ln28_fu_519_p2() {
    or_ln28_fu_519_p2 = (icmp_ln28_fu_503_p2.read() | icmp_ln28_1_fu_508_p2.read());
}

void duc::thread_select_ln21_fu_368_p3() {
    select_ln21_fu_368_p3 = (!or_ln21_1_fu_362_p2.read()[0].is_01())? sc_lv<38>(): ((or_ln21_1_fu_362_p2.read()[0].to_bool())? ap_const_lv38_0: shift_reg_p_load_reg_694.read());
}

void duc::thread_select_ln28_fu_537_p3() {
    select_ln28_fu_537_p3 = (!or_ln28_1_fu_531_p2.read()[0].is_01())? sc_lv<38>(): ((or_ln28_1_fu_531_p2.read()[0].to_bool())? ap_const_lv38_0: shift_reg_p_2_load_reg_771.read());
}

void duc::thread_sext_ln17_fu_375_p1() {
    sext_ln17_fu_375_p1 = esl_sext<38,36>(m_reg_699.read());
}

void duc::thread_sext_ln27_fu_544_p1() {
    sext_ln27_fu_544_p1 = esl_sext<38,36>(m_2_reg_776.read());
}

void duc::thread_shift_reg_p_2_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        shift_reg_p_2_address0 =  (sc_lv<6>) (zext_ln30_fu_568_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        shift_reg_p_2_address0 =  (sc_lv<6>) (zext_ln28_1_fu_484_p1.read());
    } else {
        shift_reg_p_2_address0 = "XXXXXX";
    }
}

void duc::thread_shift_reg_p_2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        shift_reg_p_2_ce0 = ap_const_logic_1;
    } else {
        shift_reg_p_2_ce0 = ap_const_logic_0;
    }
}

void duc::thread_shift_reg_p_2_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        shift_reg_p_2_we0 = ap_const_logic_1;
    } else {
        shift_reg_p_2_we0 = ap_const_logic_0;
    }
}

void duc::thread_shift_reg_p_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        shift_reg_p_address0 =  (sc_lv<7>) (zext_ln23_fu_399_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        shift_reg_p_address0 =  (sc_lv<7>) (zext_ln21_1_fu_315_p1.read());
    } else {
        shift_reg_p_address0 =  (sc_lv<7>) ("XXXXXXX");
    }
}

void duc::thread_shift_reg_p_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        shift_reg_p_ce0 = ap_const_logic_1;
    } else {
        shift_reg_p_ce0 = ap_const_logic_0;
    }
}

void duc::thread_shift_reg_p_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        shift_reg_p_we0 = ap_const_logic_1;
    } else {
        shift_reg_p_we0 = ap_const_logic_0;
    }
}

void duc::thread_sum_fu_551_p2() {
    sum_fu_551_p2 = (!sext_ln27_fu_544_p1.read().is_01() || !select_ln28_fu_537_p3.read().is_01())? sc_lv<38>(): (sc_bigint<38>(sext_ln27_fu_544_p1.read()) + sc_biguint<38>(select_ln28_fu_537_p3.read()));
}

void duc::thread_tmp_7_fu_307_p3() {
    tmp_7_fu_307_p3 = esl_concat<6,1>(inc_fu_294_p2.read(), ch.read());
}

void duc::thread_tmp_8_fu_562_p3() {
    tmp_8_fu_562_p3 = esl_concat<5,1>(i_4_load_reg_724.read(), ch_3_load_reg_750.read());
}

void duc::thread_tmp_9_fu_476_p3() {
    tmp_9_fu_476_p3 = esl_concat<5,1>(inc_5_fu_463_p2.read(), ch_3.read());
}

void duc::thread_tmp_fu_393_p3() {
    tmp_fu_393_p3 = esl_concat<6,1>(i_load_reg_647.read(), ch_load_reg_673.read());
}

void duc::thread_trunc_ln18_1_fu_378_p1() {
    trunc_ln18_1_fu_378_p1 = select_ln21_fu_368_p3.read().range(35-1, 0);
}

void duc::thread_trunc_ln18_fu_327_p1() {
    trunc_ln18_fu_327_p1 = grp_fu_628_p2.read().range(35-1, 0);
}

void duc::thread_trunc_ln27_1_fu_547_p1() {
    trunc_ln27_1_fu_547_p1 = select_ln28_fu_537_p3.read().range(35-1, 0);
}

void duc::thread_trunc_ln27_fu_496_p1() {
    trunc_ln27_fu_496_p1 = grp_fu_635_p2.read().range(35-1, 0);
}

void duc::thread_xor_ln21_fu_344_p2() {
    xor_ln21_fu_344_p2 = (init.read() ^ ap_const_lv1_1);
}

void duc::thread_xor_ln26_fu_410_p2() {
    xor_ln26_fu_410_p2 = (ch_load_reg_673.read() ^ ap_const_lv1_1);
}

void duc::thread_xor_ln28_fu_513_p2() {
    xor_ln28_fu_513_p2 = (init_4.read() ^ ap_const_lv1_1);
}

void duc::thread_xor_ln33_fu_583_p2() {
    xor_ln33_fu_583_p2 = (ch_3_load_reg_750.read() ^ cnt_1.read());
}

void duc::thread_xor_ln34_fu_594_p2() {
    xor_ln34_fu_594_p2 = (cnt_1.read() ^ ap_const_lv1_1);
}

void duc::thread_zext_ln21_1_fu_315_p1() {
    zext_ln21_1_fu_315_p1 = esl_zext<64,7>(tmp_7_fu_307_p3.read());
}

void duc::thread_zext_ln21_fu_289_p1() {
    zext_ln21_fu_289_p1 = esl_zext<64,6>(i.read());
}

void duc::thread_zext_ln23_fu_399_p1() {
    zext_ln23_fu_399_p1 = esl_zext<64,7>(tmp_fu_393_p3.read());
}

void duc::thread_zext_ln28_1_fu_484_p1() {
    zext_ln28_1_fu_484_p1 = esl_zext<64,6>(tmp_9_fu_476_p3.read());
}

void duc::thread_zext_ln28_fu_458_p1() {
    zext_ln28_fu_458_p1 = esl_zext<64,5>(i_4.read());
}

void duc::thread_zext_ln30_fu_568_p1() {
    zext_ln30_fu_568_p1 = esl_zext<64,6>(tmp_8_fu_562_p3.read());
}

void duc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(grp_imf2_fu_253_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(grp_imf3_fu_208_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(grp_mixer_fu_229_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<15>) ("XXXXXXXXXXXXXXX");
            break;
    }
}

void duc::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"din_i\" :  \"" << din_i.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"freq\" :  \"" << freq.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout_i\" :  \"" << dout_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout_i_ap_vld\" :  \"" << dout_i_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout_q\" :  \"" << dout_q.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout_q_ap_vld\" :  \"" << dout_q_ap_vld.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

