// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "imf3.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic imf3::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic imf3::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> imf3::ap_ST_fsm_state1 = "1";
const sc_lv<5> imf3::ap_ST_fsm_state2 = "10";
const sc_lv<5> imf3::ap_ST_fsm_state3 = "100";
const sc_lv<5> imf3::ap_ST_fsm_state4 = "1000";
const sc_lv<5> imf3::ap_ST_fsm_state5 = "10000";
const sc_lv<32> imf3::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<6> imf3::ap_const_lv6_0 = "000000";
const sc_lv<18> imf3::ap_const_lv18_0 = "000000000000000000";
const sc_lv<1> imf3::ap_const_lv1_1 = "1";
const sc_lv<32> imf3::ap_const_lv32_1 = "1";
const sc_lv<32> imf3::ap_const_lv32_2 = "10";
const sc_lv<32> imf3::ap_const_lv32_3 = "11";
const sc_lv<1> imf3::ap_const_lv1_0 = "0";
const sc_lv<32> imf3::ap_const_lv32_4 = "100";
const sc_lv<6> imf3::ap_const_lv6_1 = "1";
const sc_lv<6> imf3::ap_const_lv6_5 = "101";
const sc_lv<17> imf3::ap_const_lv17_0 = "00000000000000000";
const sc_lv<35> imf3::ap_const_lv35_0 = "00000000000000000000000000000000000";
const sc_lv<38> imf3::ap_const_lv38_0 = "00000000000000000000000000000000000000";
const sc_lv<32> imf3::ap_const_lv32_11 = "10001";
const sc_lv<32> imf3::ap_const_lv32_22 = "100010";
const sc_lv<6> imf3::ap_const_lv6_F = "1111";
const bool imf3::ap_const_boolean_1 = true;

imf3::imf3(sc_module_name name) : sc_module(name), mVcdFile(0) {
    c_5_0_U = new imf3_c_5_0("c_5_0_U");
    c_5_0_U->clk(ap_clk);
    c_5_0_U->reset(ap_rst);
    c_5_0_U->address0(c_5_0_address0);
    c_5_0_U->ce0(c_5_0_ce0);
    c_5_0_U->q0(c_5_0_q0);
    shift_reg_p0_U = new imf3_shift_reg_p0("shift_reg_p0_U");
    shift_reg_p0_U->clk(ap_clk);
    shift_reg_p0_U->reset(ap_rst);
    shift_reg_p0_U->address0(shift_reg_p0_address0);
    shift_reg_p0_U->ce0(shift_reg_p0_ce0);
    shift_reg_p0_U->we0(shift_reg_p0_we0);
    shift_reg_p0_U->d0(shift_reg_p0_d0);
    shift_reg_p0_U->q0(shift_reg_p0_q0);
    c_5_1_U = new imf3_c_5_1("c_5_1_U");
    c_5_1_U->clk(ap_clk);
    c_5_1_U->reset(ap_rst);
    c_5_1_U->address0(c_5_1_address0);
    c_5_1_U->ce0(c_5_1_ce0);
    c_5_1_U->q0(c_5_1_q0);
    shift_reg_p1_U = new imf3_shift_reg_p0("shift_reg_p1_U");
    shift_reg_p1_U->clk(ap_clk);
    shift_reg_p1_U->reset(ap_rst);
    shift_reg_p1_U->address0(shift_reg_p1_address0);
    shift_reg_p1_U->ce0(shift_reg_p1_ce0);
    shift_reg_p1_U->we0(shift_reg_p1_we0);
    shift_reg_p1_U->d0(shift_reg_p1_d0);
    shift_reg_p1_U->q0(shift_reg_p1_q0);
    duc_mul_mul_18s_1bkb_U6 = new duc_mul_mul_18s_1bkb<1,2,18,18,36>("duc_mul_mul_18s_1bkb_U6");
    duc_mul_mul_18s_1bkb_U6->clk(ap_clk);
    duc_mul_mul_18s_1bkb_U6->reset(ap_rst);
    duc_mul_mul_18s_1bkb_U6->din0(c_5_0_load_reg_419);
    duc_mul_mul_18s_1bkb_U6->din1(d_assign_reg_126);
    duc_mul_mul_18s_1bkb_U6->ce(ap_var_for_const0);
    duc_mul_mul_18s_1bkb_U6->dout(grp_fu_380_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln36_1_fu_301_p2);
    sensitive << ( m_1_reg_492 );
    sensitive << ( trunc_ln31_fu_285_p1 );

    SC_METHOD(thread_add_ln36_fu_296_p2);
    sensitive << ( trunc_ln30_1_reg_482 );
    sensitive << ( trunc_ln30_fu_264_p1 );

    SC_METHOD(thread_add_ln40_fu_349_p2);
    sensitive << ( p_Val2_s_reg_434 );

    SC_METHOD(thread_and_ln37_fu_338_p2);
    sensitive << ( icmp_ln30_reg_465 );
    sensitive << ( icmp_ln37_fu_333_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( select_ln36_fu_326_p3 );
    sensitive << ( ap_return_preg );

    SC_METHOD(thread_c_5_0_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( zext_ln30_fu_156_p1 );

    SC_METHOD(thread_c_5_0_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_c_5_1_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( zext_ln30_fu_156_p1 );

    SC_METHOD(thread_c_5_1_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ch_4_fu_171_p3);
    sensitive << ( j );

    SC_METHOD(thread_icmp_ln23_fu_140_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( i_2 );

    SC_METHOD(thread_icmp_ln30_fu_200_p2);
    sensitive << ( i_2_load_reg_392 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_icmp_ln37_fu_333_p2);
    sensitive << ( p_Val2_s_reg_434 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_inc_2_fu_368_p3);
    sensitive << ( inc_reg_429 );
    sensitive << ( icmp_ln30_reg_465 );

    SC_METHOD(thread_inc_fu_162_p2);
    sensitive << ( i_2_load_reg_392 );

    SC_METHOD(thread_m_1_fu_226_p3);
    sensitive << ( c_5_1_load_reg_424 );
    sensitive << ( sub_ln46_fu_220_p2 );

    SC_METHOD(thread_or_ln30_fu_237_p2);
    sensitive << ( init_2 );
    sensitive << ( icmp_ln30_reg_465 );

    SC_METHOD(thread_select_ln30_1_fu_275_p3);
    sensitive << ( shift_reg_p1_load_reg_487 );
    sensitive << ( or_ln30_fu_237_p2 );

    SC_METHOD(thread_select_ln30_fu_254_p3);
    sensitive << ( shift_reg_p0_load_reg_472 );
    sensitive << ( or_ln30_fu_237_p2 );

    SC_METHOD(thread_select_ln36_fu_326_p3);
    sensitive << ( icmp_ln23_reg_399 );
    sensitive << ( tmp_4_fu_306_p4 );
    sensitive << ( tmp_5_fu_316_p4 );

    SC_METHOD(thread_select_ln40_fu_354_p3);
    sensitive << ( icmp_ln37_fu_333_p2 );
    sensitive << ( add_ln40_fu_349_p2 );

    SC_METHOD(thread_sext_ln46_2_fu_205_p1);
    sensitive << ( d_assign_reg_126 );

    SC_METHOD(thread_sext_ln47_1_fu_282_p1);
    sensitive << ( m_1_reg_492 );

    SC_METHOD(thread_sext_ln47_fu_261_p1);
    sensitive << ( m_reg_477 );

    SC_METHOD(thread_shift_reg_p0_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln30_1_fu_187_p1 );
    sensitive << ( zext_ln33_fu_248_p1 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_shift_reg_p0_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_shift_reg_p0_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( select_ln30_fu_254_p3 );
    sensitive << ( sext_ln47_fu_261_p1 );

    SC_METHOD(thread_shift_reg_p0_we0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_shift_reg_p1_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln30_1_fu_187_p1 );
    sensitive << ( zext_ln33_fu_248_p1 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_shift_reg_p1_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_shift_reg_p1_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( select_ln30_1_fu_275_p3 );
    sensitive << ( sext_ln47_1_fu_282_p1 );

    SC_METHOD(thread_shift_reg_p1_we0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_shl_ln_fu_212_p3);
    sensitive << ( d_assign_reg_126 );

    SC_METHOD(thread_sub_ln46_fu_220_p2);
    sensitive << ( shl_ln_fu_212_p3 );
    sensitive << ( sext_ln46_2_fu_205_p1 );

    SC_METHOD(thread_tmp_3_fu_179_p3);
    sensitive << ( inc_fu_162_p2 );
    sensitive << ( ch_4_fu_171_p3 );

    SC_METHOD(thread_tmp_4_fu_306_p4);
    sensitive << ( add_ln36_fu_296_p2 );

    SC_METHOD(thread_tmp_5_fu_316_p4);
    sensitive << ( add_ln36_1_fu_301_p2 );

    SC_METHOD(thread_tmp_fu_242_p3);
    sensitive << ( i_2_load_reg_392 );
    sensitive << ( ch_4_reg_440 );

    SC_METHOD(thread_trunc_ln30_1_fu_209_p1);
    sensitive << ( grp_fu_380_p2 );

    SC_METHOD(thread_trunc_ln30_fu_264_p1);
    sensitive << ( select_ln30_fu_254_p3 );

    SC_METHOD(thread_trunc_ln31_fu_285_p1);
    sensitive << ( select_ln30_1_fu_275_p3 );

    SC_METHOD(thread_zext_ln30_1_fu_187_p1);
    sensitive << ( tmp_3_fu_179_p3 );

    SC_METHOD(thread_zext_ln30_fu_156_p1);
    sensitive << ( i_2 );

    SC_METHOD(thread_zext_ln33_fu_248_p1);
    sensitive << ( tmp_fu_242_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00001";
    i_2 = "000000";
    in_1 = "000000000000000000";
    j = "000000";
    init_2 = "1";
    ap_return_preg = "000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "imf3_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, x, "(port)x");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_2, "i_2");
    sc_trace(mVcdFile, in_1, "in_1");
    sc_trace(mVcdFile, j, "j");
    sc_trace(mVcdFile, c_5_0_address0, "c_5_0_address0");
    sc_trace(mVcdFile, c_5_0_ce0, "c_5_0_ce0");
    sc_trace(mVcdFile, c_5_0_q0, "c_5_0_q0");
    sc_trace(mVcdFile, init_2, "init_2");
    sc_trace(mVcdFile, shift_reg_p0_address0, "shift_reg_p0_address0");
    sc_trace(mVcdFile, shift_reg_p0_ce0, "shift_reg_p0_ce0");
    sc_trace(mVcdFile, shift_reg_p0_we0, "shift_reg_p0_we0");
    sc_trace(mVcdFile, shift_reg_p0_d0, "shift_reg_p0_d0");
    sc_trace(mVcdFile, shift_reg_p0_q0, "shift_reg_p0_q0");
    sc_trace(mVcdFile, c_5_1_address0, "c_5_1_address0");
    sc_trace(mVcdFile, c_5_1_ce0, "c_5_1_ce0");
    sc_trace(mVcdFile, c_5_1_q0, "c_5_1_q0");
    sc_trace(mVcdFile, shift_reg_p1_address0, "shift_reg_p1_address0");
    sc_trace(mVcdFile, shift_reg_p1_ce0, "shift_reg_p1_ce0");
    sc_trace(mVcdFile, shift_reg_p1_we0, "shift_reg_p1_we0");
    sc_trace(mVcdFile, shift_reg_p1_d0, "shift_reg_p1_d0");
    sc_trace(mVcdFile, shift_reg_p1_q0, "shift_reg_p1_q0");
    sc_trace(mVcdFile, i_2_load_reg_392, "i_2_load_reg_392");
    sc_trace(mVcdFile, icmp_ln23_fu_140_p2, "icmp_ln23_fu_140_p2");
    sc_trace(mVcdFile, icmp_ln23_reg_399, "icmp_ln23_reg_399");
    sc_trace(mVcdFile, c_5_0_load_reg_419, "c_5_0_load_reg_419");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, c_5_1_load_reg_424, "c_5_1_load_reg_424");
    sc_trace(mVcdFile, inc_fu_162_p2, "inc_fu_162_p2");
    sc_trace(mVcdFile, inc_reg_429, "inc_reg_429");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, p_Val2_s_reg_434, "p_Val2_s_reg_434");
    sc_trace(mVcdFile, ch_4_fu_171_p3, "ch_4_fu_171_p3");
    sc_trace(mVcdFile, ch_4_reg_440, "ch_4_reg_440");
    sc_trace(mVcdFile, icmp_ln30_fu_200_p2, "icmp_ln30_fu_200_p2");
    sc_trace(mVcdFile, icmp_ln30_reg_465, "icmp_ln30_reg_465");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, shift_reg_p0_load_reg_472, "shift_reg_p0_load_reg_472");
    sc_trace(mVcdFile, grp_fu_380_p2, "grp_fu_380_p2");
    sc_trace(mVcdFile, m_reg_477, "m_reg_477");
    sc_trace(mVcdFile, trunc_ln30_1_fu_209_p1, "trunc_ln30_1_fu_209_p1");
    sc_trace(mVcdFile, trunc_ln30_1_reg_482, "trunc_ln30_1_reg_482");
    sc_trace(mVcdFile, shift_reg_p1_load_reg_487, "shift_reg_p1_load_reg_487");
    sc_trace(mVcdFile, m_1_fu_226_p3, "m_1_fu_226_p3");
    sc_trace(mVcdFile, m_1_reg_492, "m_1_reg_492");
    sc_trace(mVcdFile, d_assign_reg_126, "d_assign_reg_126");
    sc_trace(mVcdFile, zext_ln30_fu_156_p1, "zext_ln30_fu_156_p1");
    sc_trace(mVcdFile, zext_ln30_1_fu_187_p1, "zext_ln30_1_fu_187_p1");
    sc_trace(mVcdFile, zext_ln33_fu_248_p1, "zext_ln33_fu_248_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, inc_2_fu_368_p3, "inc_2_fu_368_p3");
    sc_trace(mVcdFile, select_ln40_fu_354_p3, "select_ln40_fu_354_p3");
    sc_trace(mVcdFile, and_ln37_fu_338_p2, "and_ln37_fu_338_p2");
    sc_trace(mVcdFile, tmp_3_fu_179_p3, "tmp_3_fu_179_p3");
    sc_trace(mVcdFile, shl_ln_fu_212_p3, "shl_ln_fu_212_p3");
    sc_trace(mVcdFile, sext_ln46_2_fu_205_p1, "sext_ln46_2_fu_205_p1");
    sc_trace(mVcdFile, sub_ln46_fu_220_p2, "sub_ln46_fu_220_p2");
    sc_trace(mVcdFile, tmp_fu_242_p3, "tmp_fu_242_p3");
    sc_trace(mVcdFile, or_ln30_fu_237_p2, "or_ln30_fu_237_p2");
    sc_trace(mVcdFile, select_ln30_fu_254_p3, "select_ln30_fu_254_p3");
    sc_trace(mVcdFile, sext_ln47_fu_261_p1, "sext_ln47_fu_261_p1");
    sc_trace(mVcdFile, select_ln30_1_fu_275_p3, "select_ln30_1_fu_275_p3");
    sc_trace(mVcdFile, sext_ln47_1_fu_282_p1, "sext_ln47_1_fu_282_p1");
    sc_trace(mVcdFile, trunc_ln30_fu_264_p1, "trunc_ln30_fu_264_p1");
    sc_trace(mVcdFile, trunc_ln31_fu_285_p1, "trunc_ln31_fu_285_p1");
    sc_trace(mVcdFile, add_ln36_fu_296_p2, "add_ln36_fu_296_p2");
    sc_trace(mVcdFile, add_ln36_1_fu_301_p2, "add_ln36_1_fu_301_p2");
    sc_trace(mVcdFile, tmp_4_fu_306_p4, "tmp_4_fu_306_p4");
    sc_trace(mVcdFile, tmp_5_fu_316_p4, "tmp_5_fu_316_p4");
    sc_trace(mVcdFile, icmp_ln37_fu_333_p2, "icmp_ln37_fu_333_p2");
    sc_trace(mVcdFile, add_ln40_fu_349_p2, "add_ln40_fu_349_p2");
    sc_trace(mVcdFile, select_ln36_fu_326_p3, "select_ln36_fu_326_p3");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

imf3::~imf3() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete c_5_0_U;
    delete shift_reg_p0_U;
    delete c_5_1_U;
    delete shift_reg_p1_U;
    delete duc_mul_mul_18s_1bkb_U6;
}

void imf3::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void imf3::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv18_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            ap_return_preg = select_ln36_fu_326_p3.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        if (esl_seteq<1,1,1>(icmp_ln23_fu_140_p2.read(), ap_const_lv1_0)) {
            d_assign_reg_126 = in_1.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln23_fu_140_p2.read())) {
            d_assign_reg_126 = x.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        c_5_0_load_reg_419 = c_5_0_q0.read();
        c_5_1_load_reg_424 = c_5_1_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        ch_4_reg_440 = j.read().range(3, 3);
        inc_reg_429 = inc_fu_162_p2.read();
        p_Val2_s_reg_434 = j.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_2 = inc_2_fu_368_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_2_load_reg_392 = i_2.read();
        icmp_ln23_reg_399 = icmp_ln23_fu_140_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        icmp_ln30_reg_465 = icmp_ln30_fu_200_p2.read();
        m_1_reg_492 = m_1_fu_226_p3.read();
        m_reg_477 = grp_fu_380_p2.read();
        shift_reg_p0_load_reg_472 = shift_reg_p0_q0.read();
        shift_reg_p1_load_reg_487 = shift_reg_p1_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln23_fu_140_p2.read()))) {
        in_1 = x.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, and_ln37_fu_338_p2.read()))) {
        init_2 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln30_reg_465.read()))) {
        j = select_ln40_fu_354_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln23_reg_399.read()))) {
        trunc_ln30_1_reg_482 = trunc_ln30_1_fu_209_p1.read();
    }
}

void imf3::thread_add_ln36_1_fu_301_p2() {
    add_ln36_1_fu_301_p2 = (!trunc_ln31_fu_285_p1.read().is_01() || !m_1_reg_492.read().is_01())? sc_lv<35>(): (sc_biguint<35>(trunc_ln31_fu_285_p1.read()) + sc_bigint<35>(m_1_reg_492.read()));
}

void imf3::thread_add_ln36_fu_296_p2() {
    add_ln36_fu_296_p2 = (!trunc_ln30_fu_264_p1.read().is_01() || !trunc_ln30_1_reg_482.read().is_01())? sc_lv<35>(): (sc_biguint<35>(trunc_ln30_fu_264_p1.read()) + sc_biguint<35>(trunc_ln30_1_reg_482.read()));
}

void imf3::thread_add_ln40_fu_349_p2() {
    add_ln40_fu_349_p2 = (!p_Val2_s_reg_434.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(p_Val2_s_reg_434.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void imf3::thread_and_ln37_fu_338_p2() {
    and_ln37_fu_338_p2 = (icmp_ln30_reg_465.read() & icmp_ln37_fu_333_p2.read());
}

void imf3::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void imf3::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void imf3::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void imf3::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void imf3::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void imf3::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void imf3::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void imf3::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void imf3::thread_ap_return() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ap_return = select_ln36_fu_326_p3.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void imf3::thread_c_5_0_address0() {
    c_5_0_address0 =  (sc_lv<3>) (zext_ln30_fu_156_p1.read());
}

void imf3::thread_c_5_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        c_5_0_ce0 = ap_const_logic_1;
    } else {
        c_5_0_ce0 = ap_const_logic_0;
    }
}

void imf3::thread_c_5_1_address0() {
    c_5_1_address0 =  (sc_lv<3>) (zext_ln30_fu_156_p1.read());
}

void imf3::thread_c_5_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        c_5_1_ce0 = ap_const_logic_1;
    } else {
        c_5_1_ce0 = ap_const_logic_0;
    }
}

void imf3::thread_ch_4_fu_171_p3() {
    ch_4_fu_171_p3 = j.read().range(3, 3);
}

void imf3::thread_icmp_ln23_fu_140_p2() {
    icmp_ln23_fu_140_p2 = (!i_2.read().is_01() || !ap_const_lv6_0.is_01())? sc_lv<1>(): sc_lv<1>(i_2.read() == ap_const_lv6_0);
}

void imf3::thread_icmp_ln30_fu_200_p2() {
    icmp_ln30_fu_200_p2 = (!i_2_load_reg_392.read().is_01() || !ap_const_lv6_5.is_01())? sc_lv<1>(): sc_lv<1>(i_2_load_reg_392.read() == ap_const_lv6_5);
}

void imf3::thread_icmp_ln37_fu_333_p2() {
    icmp_ln37_fu_333_p2 = (!p_Val2_s_reg_434.read().is_01() || !ap_const_lv6_F.is_01())? sc_lv<1>(): sc_lv<1>(p_Val2_s_reg_434.read() == ap_const_lv6_F);
}

void imf3::thread_inc_2_fu_368_p3() {
    inc_2_fu_368_p3 = (!icmp_ln30_reg_465.read()[0].is_01())? sc_lv<6>(): ((icmp_ln30_reg_465.read()[0].to_bool())? ap_const_lv6_0: inc_reg_429.read());
}

void imf3::thread_inc_fu_162_p2() {
    inc_fu_162_p2 = (!ap_const_lv6_1.is_01() || !i_2_load_reg_392.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1) + sc_biguint<6>(i_2_load_reg_392.read()));
}

void imf3::thread_m_1_fu_226_p3() {
    m_1_fu_226_p3 = (!c_5_1_load_reg_424.read()[0].is_01())? sc_lv<35>(): ((c_5_1_load_reg_424.read()[0].to_bool())? sub_ln46_fu_220_p2.read(): ap_const_lv35_0);
}

void imf3::thread_or_ln30_fu_237_p2() {
    or_ln30_fu_237_p2 = (init_2.read() | icmp_ln30_reg_465.read());
}

void imf3::thread_select_ln30_1_fu_275_p3() {
    select_ln30_1_fu_275_p3 = (!or_ln30_fu_237_p2.read()[0].is_01())? sc_lv<38>(): ((or_ln30_fu_237_p2.read()[0].to_bool())? ap_const_lv38_0: shift_reg_p1_load_reg_487.read());
}

void imf3::thread_select_ln30_fu_254_p3() {
    select_ln30_fu_254_p3 = (!or_ln30_fu_237_p2.read()[0].is_01())? sc_lv<38>(): ((or_ln30_fu_237_p2.read()[0].to_bool())? ap_const_lv38_0: shift_reg_p0_load_reg_472.read());
}

void imf3::thread_select_ln36_fu_326_p3() {
    select_ln36_fu_326_p3 = (!icmp_ln23_reg_399.read()[0].is_01())? sc_lv<18>(): ((icmp_ln23_reg_399.read()[0].to_bool())? tmp_4_fu_306_p4.read(): tmp_5_fu_316_p4.read());
}

void imf3::thread_select_ln40_fu_354_p3() {
    select_ln40_fu_354_p3 = (!icmp_ln37_fu_333_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln37_fu_333_p2.read()[0].to_bool())? ap_const_lv6_0: add_ln40_fu_349_p2.read());
}

void imf3::thread_sext_ln46_2_fu_205_p1() {
    sext_ln46_2_fu_205_p1 = esl_sext<35,18>(d_assign_reg_126.read());
}

void imf3::thread_sext_ln47_1_fu_282_p1() {
    sext_ln47_1_fu_282_p1 = esl_sext<38,35>(m_1_reg_492.read());
}

void imf3::thread_sext_ln47_fu_261_p1() {
    sext_ln47_fu_261_p1 = esl_sext<38,36>(m_reg_477.read());
}

void imf3::thread_shift_reg_p0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        shift_reg_p0_address0 =  (sc_lv<4>) (zext_ln33_fu_248_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        shift_reg_p0_address0 =  (sc_lv<4>) (zext_ln30_1_fu_187_p1.read());
    } else {
        shift_reg_p0_address0 = "XXXX";
    }
}

void imf3::thread_shift_reg_p0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        shift_reg_p0_ce0 = ap_const_logic_1;
    } else {
        shift_reg_p0_ce0 = ap_const_logic_0;
    }
}

void imf3::thread_shift_reg_p0_d0() {
    shift_reg_p0_d0 = (!sext_ln47_fu_261_p1.read().is_01() || !select_ln30_fu_254_p3.read().is_01())? sc_lv<38>(): (sc_bigint<38>(sext_ln47_fu_261_p1.read()) + sc_biguint<38>(select_ln30_fu_254_p3.read()));
}

void imf3::thread_shift_reg_p0_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        shift_reg_p0_we0 = ap_const_logic_1;
    } else {
        shift_reg_p0_we0 = ap_const_logic_0;
    }
}

void imf3::thread_shift_reg_p1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        shift_reg_p1_address0 =  (sc_lv<4>) (zext_ln33_fu_248_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        shift_reg_p1_address0 =  (sc_lv<4>) (zext_ln30_1_fu_187_p1.read());
    } else {
        shift_reg_p1_address0 = "XXXX";
    }
}

void imf3::thread_shift_reg_p1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        shift_reg_p1_ce0 = ap_const_logic_1;
    } else {
        shift_reg_p1_ce0 = ap_const_logic_0;
    }
}

void imf3::thread_shift_reg_p1_d0() {
    shift_reg_p1_d0 = (!sext_ln47_1_fu_282_p1.read().is_01() || !select_ln30_1_fu_275_p3.read().is_01())? sc_lv<38>(): (sc_bigint<38>(sext_ln47_1_fu_282_p1.read()) + sc_biguint<38>(select_ln30_1_fu_275_p3.read()));
}

void imf3::thread_shift_reg_p1_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        shift_reg_p1_we0 = ap_const_logic_1;
    } else {
        shift_reg_p1_we0 = ap_const_logic_0;
    }
}

void imf3::thread_shl_ln_fu_212_p3() {
    shl_ln_fu_212_p3 = esl_concat<18,17>(d_assign_reg_126.read(), ap_const_lv17_0);
}

void imf3::thread_sub_ln46_fu_220_p2() {
    sub_ln46_fu_220_p2 = (!shl_ln_fu_212_p3.read().is_01() || !sext_ln46_2_fu_205_p1.read().is_01())? sc_lv<35>(): (sc_biguint<35>(shl_ln_fu_212_p3.read()) - sc_bigint<35>(sext_ln46_2_fu_205_p1.read()));
}

void imf3::thread_tmp_3_fu_179_p3() {
    tmp_3_fu_179_p3 = esl_concat<6,1>(inc_fu_162_p2.read(), ch_4_fu_171_p3.read());
}

void imf3::thread_tmp_4_fu_306_p4() {
    tmp_4_fu_306_p4 = add_ln36_fu_296_p2.read().range(34, 17);
}

void imf3::thread_tmp_5_fu_316_p4() {
    tmp_5_fu_316_p4 = add_ln36_1_fu_301_p2.read().range(34, 17);
}

void imf3::thread_tmp_fu_242_p3() {
    tmp_fu_242_p3 = esl_concat<6,1>(i_2_load_reg_392.read(), ch_4_reg_440.read());
}

void imf3::thread_trunc_ln30_1_fu_209_p1() {
    trunc_ln30_1_fu_209_p1 = grp_fu_380_p2.read().range(35-1, 0);
}

void imf3::thread_trunc_ln30_fu_264_p1() {
    trunc_ln30_fu_264_p1 = select_ln30_fu_254_p3.read().range(35-1, 0);
}

void imf3::thread_trunc_ln31_fu_285_p1() {
    trunc_ln31_fu_285_p1 = select_ln30_1_fu_275_p3.read().range(35-1, 0);
}

void imf3::thread_zext_ln30_1_fu_187_p1() {
    zext_ln30_1_fu_187_p1 = esl_zext<64,7>(tmp_3_fu_179_p3.read());
}

void imf3::thread_zext_ln30_fu_156_p1() {
    zext_ln30_fu_156_p1 = esl_zext<64,6>(i_2.read());
}

void imf3::thread_zext_ln33_fu_248_p1() {
    zext_ln33_fu_248_p1 = esl_zext<64,7>(tmp_fu_242_p3.read());
}

void imf3::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<5>) ("XXXXX");
            break;
    }
}

}

