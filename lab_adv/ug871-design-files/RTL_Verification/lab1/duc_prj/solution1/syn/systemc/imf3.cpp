// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "imf3.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic imf3::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic imf3::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> imf3::ap_ST_fsm_state1 = "1";
const sc_lv<8> imf3::ap_ST_fsm_state2 = "10";
const sc_lv<8> imf3::ap_ST_fsm_state3 = "100";
const sc_lv<8> imf3::ap_ST_fsm_state4 = "1000";
const sc_lv<8> imf3::ap_ST_fsm_state5 = "10000";
const sc_lv<8> imf3::ap_ST_fsm_state6 = "100000";
const sc_lv<8> imf3::ap_ST_fsm_state7 = "1000000";
const sc_lv<8> imf3::ap_ST_fsm_state8 = "10000000";
const sc_lv<32> imf3::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<6> imf3::ap_const_lv6_0 = "000000";
const sc_lv<1> imf3::ap_const_lv1_1 = "1";
const sc_lv<32> imf3::ap_const_lv32_1 = "1";
const sc_lv<32> imf3::ap_const_lv32_2 = "10";
const sc_lv<32> imf3::ap_const_lv32_3 = "11";
const sc_lv<32> imf3::ap_const_lv32_4 = "100";
const sc_lv<32> imf3::ap_const_lv32_5 = "101";
const sc_lv<1> imf3::ap_const_lv1_0 = "0";
const sc_lv<32> imf3::ap_const_lv32_6 = "110";
const sc_lv<32> imf3::ap_const_lv32_7 = "111";
const sc_lv<6> imf3::ap_const_lv6_1 = "1";
const sc_lv<6> imf3::ap_const_lv6_5 = "101";
const sc_lv<17> imf3::ap_const_lv17_0 = "00000000000000000";
const sc_lv<38> imf3::ap_const_lv38_0 = "00000000000000000000000000000000000000";
const sc_lv<35> imf3::ap_const_lv35_0 = "00000000000000000000000000000000000";
const sc_lv<32> imf3::ap_const_lv32_11 = "10001";
const sc_lv<32> imf3::ap_const_lv32_22 = "100010";
const sc_lv<6> imf3::ap_const_lv6_F = "1111";
const bool imf3::ap_const_boolean_1 = true;

imf3::imf3(sc_module_name name) : sc_module(name), mVcdFile(0) {
    c_5_0_U = new imf3_c_5_0("c_5_0_U");
    c_5_0_U->clk(ap_clk);
    c_5_0_U->reset(ap_rst);
    c_5_0_U->address0(c_5_0_address0);
    c_5_0_U->ce0(c_5_0_ce0);
    c_5_0_U->q0(c_5_0_q0);
    shift_reg_p0_U = new imf3_shift_reg_p0("shift_reg_p0_U");
    shift_reg_p0_U->clk(ap_clk);
    shift_reg_p0_U->reset(ap_rst);
    shift_reg_p0_U->address0(shift_reg_p0_address0);
    shift_reg_p0_U->ce0(shift_reg_p0_ce0);
    shift_reg_p0_U->we0(shift_reg_p0_we0);
    shift_reg_p0_U->d0(acc0_reg_506);
    shift_reg_p0_U->q0(shift_reg_p0_q0);
    c_5_1_U = new imf3_c_5_1("c_5_1_U");
    c_5_1_U->clk(ap_clk);
    c_5_1_U->reset(ap_rst);
    c_5_1_U->address0(c_5_1_address0);
    c_5_1_U->ce0(c_5_1_ce0);
    c_5_1_U->q0(c_5_1_q0);
    shift_reg_p1_U = new imf3_shift_reg_p0("shift_reg_p1_U");
    shift_reg_p1_U->clk(ap_clk);
    shift_reg_p1_U->reset(ap_rst);
    shift_reg_p1_U->address0(shift_reg_p1_address0);
    shift_reg_p1_U->ce0(shift_reg_p1_ce0);
    shift_reg_p1_U->we0(shift_reg_p1_we0);
    shift_reg_p1_U->d0(acc1_reg_511);
    shift_reg_p1_U->q0(shift_reg_p1_q0);
    duc_mul_mul_18s_1bkb_U6 = new duc_mul_mul_18s_1bkb<1,4,18,18,36>("duc_mul_mul_18s_1bkb_U6");
    duc_mul_mul_18s_1bkb_U6->clk(ap_clk);
    duc_mul_mul_18s_1bkb_U6->reset(ap_rst);
    duc_mul_mul_18s_1bkb_U6->din0(c_5_0_load_reg_411);
    duc_mul_mul_18s_1bkb_U6->din1(d_assign_reg_126);
    duc_mul_mul_18s_1bkb_U6->ce(ap_var_for_const0);
    duc_mul_mul_18s_1bkb_U6->dout(grp_fu_372_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_acc0_fu_267_p2);
    sensitive << ( select_ln30_reg_470 );
    sensitive << ( sext_ln47_fu_264_p1 );

    SC_METHOD(thread_acc1_fu_275_p2);
    sensitive << ( select_ln30_1_reg_490 );
    sensitive << ( sext_ln47_1_fu_272_p1 );

    SC_METHOD(thread_add_ln36_1_fu_284_p2);
    sensitive << ( m_1_reg_495 );
    sensitive << ( trunc_ln31_reg_501 );

    SC_METHOD(thread_add_ln36_fu_280_p2);
    sensitive << ( trunc_ln30_reg_480 );
    sensitive << ( trunc_ln30_1_reg_485 );

    SC_METHOD(thread_add_ln40_fu_341_p2);
    sensitive << ( p_Val2_s_reg_437 );

    SC_METHOD(thread_and_ln37_fu_330_p2);
    sensitive << ( icmp_ln30_reg_448 );
    sensitive << ( icmp_ln37_fu_325_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ap_return);
    sensitive << ( icmp_ln23_reg_391 );
    sensitive << ( tmp_4_reg_516 );
    sensitive << ( tmp_5_reg_521 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_c_5_0_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( zext_ln30_fu_156_p1 );

    SC_METHOD(thread_c_5_0_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_c_5_1_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( zext_ln30_fu_156_p1 );

    SC_METHOD(thread_c_5_1_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ch_4_fu_178_p3);
    sensitive << ( j );

    SC_METHOD(thread_icmp_ln23_fu_140_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( i_2 );

    SC_METHOD(thread_icmp_ln30_fu_186_p2);
    sensitive << ( i_2_load_reg_384 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_icmp_ln37_fu_325_p2);
    sensitive << ( p_Val2_s_reg_437 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_inc_2_fu_360_p3);
    sensitive << ( inc_reg_431 );
    sensitive << ( icmp_ln30_reg_448 );

    SC_METHOD(thread_inc_fu_169_p2);
    sensitive << ( i_2_load_reg_384 );

    SC_METHOD(thread_m_1_fu_254_p3);
    sensitive << ( c_5_1_load_reg_416 );
    sensitive << ( sub_ln46_reg_465 );

    SC_METHOD(thread_or_ln30_fu_226_p2);
    sensitive << ( init_2 );
    sensitive << ( icmp_ln30_reg_448 );

    SC_METHOD(thread_select_ln30_1_fu_246_p3);
    sensitive << ( shift_reg_p1_q0 );
    sensitive << ( or_ln30_fu_226_p2 );

    SC_METHOD(thread_select_ln30_fu_231_p3);
    sensitive << ( shift_reg_p0_q0 );
    sensitive << ( or_ln30_fu_226_p2 );

    SC_METHOD(thread_select_ln40_fu_346_p3);
    sensitive << ( icmp_ln37_fu_325_p2 );
    sensitive << ( add_ln40_fu_341_p2 );

    SC_METHOD(thread_sext_ln46_2_fu_204_p1);
    sensitive << ( d_assign_reg_126 );

    SC_METHOD(thread_sext_ln47_1_fu_272_p1);
    sensitive << ( m_1_reg_495 );

    SC_METHOD(thread_sext_ln47_fu_264_p1);
    sensitive << ( m_reg_475 );

    SC_METHOD(thread_shift_reg_p0_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln30_1_fu_198_p1 );
    sensitive << ( zext_ln33_fu_314_p1 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_shift_reg_p0_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_shift_reg_p0_we0);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_shift_reg_p1_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln30_1_fu_198_p1 );
    sensitive << ( zext_ln33_fu_314_p1 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_shift_reg_p1_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_shift_reg_p1_we0);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_shl_ln_fu_208_p3);
    sensitive << ( d_assign_reg_126 );

    SC_METHOD(thread_sub_ln46_fu_216_p2);
    sensitive << ( shl_ln_fu_208_p3 );
    sensitive << ( sext_ln46_2_fu_204_p1 );

    SC_METHOD(thread_tmp_3_fu_191_p3);
    sensitive << ( inc_reg_431 );
    sensitive << ( ch_4_fu_178_p3 );

    SC_METHOD(thread_tmp_fu_308_p3);
    sensitive << ( i_2_load_reg_384 );
    sensitive << ( ch_4_reg_443 );

    SC_METHOD(thread_trunc_ln30_1_fu_243_p1);
    sensitive << ( grp_fu_372_p2 );

    SC_METHOD(thread_trunc_ln30_fu_239_p1);
    sensitive << ( select_ln30_fu_231_p3 );

    SC_METHOD(thread_trunc_ln31_fu_260_p1);
    sensitive << ( select_ln30_1_fu_246_p3 );

    SC_METHOD(thread_zext_ln30_1_fu_198_p1);
    sensitive << ( tmp_3_fu_191_p3 );

    SC_METHOD(thread_zext_ln30_fu_156_p1);
    sensitive << ( i_2 );

    SC_METHOD(thread_zext_ln33_fu_314_p1);
    sensitive << ( tmp_fu_308_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000001";
    i_2 = "000000";
    in_1 = "000000000000000000";
    j = "000000";
    init_2 = "1";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "imf3_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, x, "(port)x");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_2, "i_2");
    sc_trace(mVcdFile, in_1, "in_1");
    sc_trace(mVcdFile, j, "j");
    sc_trace(mVcdFile, c_5_0_address0, "c_5_0_address0");
    sc_trace(mVcdFile, c_5_0_ce0, "c_5_0_ce0");
    sc_trace(mVcdFile, c_5_0_q0, "c_5_0_q0");
    sc_trace(mVcdFile, init_2, "init_2");
    sc_trace(mVcdFile, shift_reg_p0_address0, "shift_reg_p0_address0");
    sc_trace(mVcdFile, shift_reg_p0_ce0, "shift_reg_p0_ce0");
    sc_trace(mVcdFile, shift_reg_p0_we0, "shift_reg_p0_we0");
    sc_trace(mVcdFile, shift_reg_p0_q0, "shift_reg_p0_q0");
    sc_trace(mVcdFile, c_5_1_address0, "c_5_1_address0");
    sc_trace(mVcdFile, c_5_1_ce0, "c_5_1_ce0");
    sc_trace(mVcdFile, c_5_1_q0, "c_5_1_q0");
    sc_trace(mVcdFile, shift_reg_p1_address0, "shift_reg_p1_address0");
    sc_trace(mVcdFile, shift_reg_p1_ce0, "shift_reg_p1_ce0");
    sc_trace(mVcdFile, shift_reg_p1_we0, "shift_reg_p1_we0");
    sc_trace(mVcdFile, shift_reg_p1_q0, "shift_reg_p1_q0");
    sc_trace(mVcdFile, i_2_load_reg_384, "i_2_load_reg_384");
    sc_trace(mVcdFile, icmp_ln23_fu_140_p2, "icmp_ln23_fu_140_p2");
    sc_trace(mVcdFile, icmp_ln23_reg_391, "icmp_ln23_reg_391");
    sc_trace(mVcdFile, c_5_0_load_reg_411, "c_5_0_load_reg_411");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, c_5_1_load_reg_416, "c_5_1_load_reg_416");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, inc_fu_169_p2, "inc_fu_169_p2");
    sc_trace(mVcdFile, inc_reg_431, "inc_reg_431");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, p_Val2_s_reg_437, "p_Val2_s_reg_437");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ch_4_fu_178_p3, "ch_4_fu_178_p3");
    sc_trace(mVcdFile, ch_4_reg_443, "ch_4_reg_443");
    sc_trace(mVcdFile, icmp_ln30_fu_186_p2, "icmp_ln30_fu_186_p2");
    sc_trace(mVcdFile, icmp_ln30_reg_448, "icmp_ln30_reg_448");
    sc_trace(mVcdFile, sub_ln46_fu_216_p2, "sub_ln46_fu_216_p2");
    sc_trace(mVcdFile, sub_ln46_reg_465, "sub_ln46_reg_465");
    sc_trace(mVcdFile, select_ln30_fu_231_p3, "select_ln30_fu_231_p3");
    sc_trace(mVcdFile, select_ln30_reg_470, "select_ln30_reg_470");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_fu_372_p2, "grp_fu_372_p2");
    sc_trace(mVcdFile, m_reg_475, "m_reg_475");
    sc_trace(mVcdFile, trunc_ln30_fu_239_p1, "trunc_ln30_fu_239_p1");
    sc_trace(mVcdFile, trunc_ln30_reg_480, "trunc_ln30_reg_480");
    sc_trace(mVcdFile, trunc_ln30_1_fu_243_p1, "trunc_ln30_1_fu_243_p1");
    sc_trace(mVcdFile, trunc_ln30_1_reg_485, "trunc_ln30_1_reg_485");
    sc_trace(mVcdFile, select_ln30_1_fu_246_p3, "select_ln30_1_fu_246_p3");
    sc_trace(mVcdFile, select_ln30_1_reg_490, "select_ln30_1_reg_490");
    sc_trace(mVcdFile, m_1_fu_254_p3, "m_1_fu_254_p3");
    sc_trace(mVcdFile, m_1_reg_495, "m_1_reg_495");
    sc_trace(mVcdFile, trunc_ln31_fu_260_p1, "trunc_ln31_fu_260_p1");
    sc_trace(mVcdFile, trunc_ln31_reg_501, "trunc_ln31_reg_501");
    sc_trace(mVcdFile, acc0_fu_267_p2, "acc0_fu_267_p2");
    sc_trace(mVcdFile, acc0_reg_506, "acc0_reg_506");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, acc1_fu_275_p2, "acc1_fu_275_p2");
    sc_trace(mVcdFile, acc1_reg_511, "acc1_reg_511");
    sc_trace(mVcdFile, tmp_4_reg_516, "tmp_4_reg_516");
    sc_trace(mVcdFile, tmp_5_reg_521, "tmp_5_reg_521");
    sc_trace(mVcdFile, d_assign_reg_126, "d_assign_reg_126");
    sc_trace(mVcdFile, zext_ln30_fu_156_p1, "zext_ln30_fu_156_p1");
    sc_trace(mVcdFile, zext_ln30_1_fu_198_p1, "zext_ln30_1_fu_198_p1");
    sc_trace(mVcdFile, zext_ln33_fu_314_p1, "zext_ln33_fu_314_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, inc_2_fu_360_p3, "inc_2_fu_360_p3");
    sc_trace(mVcdFile, select_ln40_fu_346_p3, "select_ln40_fu_346_p3");
    sc_trace(mVcdFile, and_ln37_fu_330_p2, "and_ln37_fu_330_p2");
    sc_trace(mVcdFile, tmp_3_fu_191_p3, "tmp_3_fu_191_p3");
    sc_trace(mVcdFile, shl_ln_fu_208_p3, "shl_ln_fu_208_p3");
    sc_trace(mVcdFile, sext_ln46_2_fu_204_p1, "sext_ln46_2_fu_204_p1");
    sc_trace(mVcdFile, or_ln30_fu_226_p2, "or_ln30_fu_226_p2");
    sc_trace(mVcdFile, sext_ln47_fu_264_p1, "sext_ln47_fu_264_p1");
    sc_trace(mVcdFile, sext_ln47_1_fu_272_p1, "sext_ln47_1_fu_272_p1");
    sc_trace(mVcdFile, add_ln36_fu_280_p2, "add_ln36_fu_280_p2");
    sc_trace(mVcdFile, add_ln36_1_fu_284_p2, "add_ln36_1_fu_284_p2");
    sc_trace(mVcdFile, tmp_fu_308_p3, "tmp_fu_308_p3");
    sc_trace(mVcdFile, icmp_ln37_fu_325_p2, "icmp_ln37_fu_325_p2");
    sc_trace(mVcdFile, add_ln40_fu_341_p2, "add_ln40_fu_341_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

imf3::~imf3() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete c_5_0_U;
    delete shift_reg_p0_U;
    delete c_5_1_U;
    delete shift_reg_p1_U;
    delete duc_mul_mul_18s_1bkb_U6;
}

void imf3::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void imf3::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        if (esl_seteq<1,1,1>(icmp_ln23_fu_140_p2.read(), ap_const_lv1_0)) {
            d_assign_reg_126 = in_1.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln23_fu_140_p2.read())) {
            d_assign_reg_126 = x.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        acc0_reg_506 = acc0_fu_267_p2.read();
        acc1_reg_511 = acc1_fu_275_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        c_5_0_load_reg_411 = c_5_0_q0.read();
        c_5_1_load_reg_416 = c_5_1_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ch_4_reg_443 = j.read().range(3, 3);
        icmp_ln30_reg_448 = icmp_ln30_fu_186_p2.read();
        p_Val2_s_reg_437 = j.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        i_2 = inc_2_fu_360_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_2_load_reg_384 = i_2.read();
        icmp_ln23_reg_391 = icmp_ln23_fu_140_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln23_fu_140_p2.read()))) {
        in_1 = x.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        inc_reg_431 = inc_fu_169_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, and_ln37_fu_330_p2.read()))) {
        init_2 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln30_reg_448.read()))) {
        j = select_ln40_fu_346_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        m_1_reg_495 = m_1_fu_254_p3.read();
        m_reg_475 = grp_fu_372_p2.read();
        select_ln30_1_reg_490 = select_ln30_1_fu_246_p3.read();
        select_ln30_reg_470 = select_ln30_fu_231_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, c_5_1_load_reg_416.read()))) {
        sub_ln46_reg_465 = sub_ln46_fu_216_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln23_reg_391.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        tmp_4_reg_516 = add_ln36_fu_280_p2.read().range(34, 17);
    }
    if ((esl_seteq<1,1,1>(icmp_ln23_reg_391.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        tmp_5_reg_521 = add_ln36_1_fu_284_p2.read().range(34, 17);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln23_reg_391.read()))) {
        trunc_ln30_1_reg_485 = trunc_ln30_1_fu_243_p1.read();
        trunc_ln30_reg_480 = trunc_ln30_fu_239_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(icmp_ln23_reg_391.read(), ap_const_lv1_0))) {
        trunc_ln31_reg_501 = trunc_ln31_fu_260_p1.read();
    }
}

void imf3::thread_acc0_fu_267_p2() {
    acc0_fu_267_p2 = (!sext_ln47_fu_264_p1.read().is_01() || !select_ln30_reg_470.read().is_01())? sc_lv<38>(): (sc_bigint<38>(sext_ln47_fu_264_p1.read()) + sc_biguint<38>(select_ln30_reg_470.read()));
}

void imf3::thread_acc1_fu_275_p2() {
    acc1_fu_275_p2 = (!sext_ln47_1_fu_272_p1.read().is_01() || !select_ln30_1_reg_490.read().is_01())? sc_lv<38>(): (sc_bigint<38>(sext_ln47_1_fu_272_p1.read()) + sc_biguint<38>(select_ln30_1_reg_490.read()));
}

void imf3::thread_add_ln36_1_fu_284_p2() {
    add_ln36_1_fu_284_p2 = (!trunc_ln31_reg_501.read().is_01() || !m_1_reg_495.read().is_01())? sc_lv<35>(): (sc_biguint<35>(trunc_ln31_reg_501.read()) + sc_bigint<35>(m_1_reg_495.read()));
}

void imf3::thread_add_ln36_fu_280_p2() {
    add_ln36_fu_280_p2 = (!trunc_ln30_reg_480.read().is_01() || !trunc_ln30_1_reg_485.read().is_01())? sc_lv<35>(): (sc_biguint<35>(trunc_ln30_reg_480.read()) + sc_biguint<35>(trunc_ln30_1_reg_485.read()));
}

void imf3::thread_add_ln40_fu_341_p2() {
    add_ln40_fu_341_p2 = (!p_Val2_s_reg_437.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(p_Val2_s_reg_437.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void imf3::thread_and_ln37_fu_330_p2() {
    and_ln37_fu_330_p2 = (icmp_ln30_reg_448.read() & icmp_ln37_fu_325_p2.read());
}

void imf3::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void imf3::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void imf3::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void imf3::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void imf3::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void imf3::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void imf3::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void imf3::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void imf3::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void imf3::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void imf3::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void imf3::thread_ap_return() {
    ap_return = (!icmp_ln23_reg_391.read()[0].is_01())? sc_lv<18>(): ((icmp_ln23_reg_391.read()[0].to_bool())? tmp_4_reg_516.read(): tmp_5_reg_521.read());
}

void imf3::thread_c_5_0_address0() {
    c_5_0_address0 =  (sc_lv<3>) (zext_ln30_fu_156_p1.read());
}

void imf3::thread_c_5_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        c_5_0_ce0 = ap_const_logic_1;
    } else {
        c_5_0_ce0 = ap_const_logic_0;
    }
}

void imf3::thread_c_5_1_address0() {
    c_5_1_address0 =  (sc_lv<3>) (zext_ln30_fu_156_p1.read());
}

void imf3::thread_c_5_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        c_5_1_ce0 = ap_const_logic_1;
    } else {
        c_5_1_ce0 = ap_const_logic_0;
    }
}

void imf3::thread_ch_4_fu_178_p3() {
    ch_4_fu_178_p3 = j.read().range(3, 3);
}

void imf3::thread_icmp_ln23_fu_140_p2() {
    icmp_ln23_fu_140_p2 = (!i_2.read().is_01() || !ap_const_lv6_0.is_01())? sc_lv<1>(): sc_lv<1>(i_2.read() == ap_const_lv6_0);
}

void imf3::thread_icmp_ln30_fu_186_p2() {
    icmp_ln30_fu_186_p2 = (!i_2_load_reg_384.read().is_01() || !ap_const_lv6_5.is_01())? sc_lv<1>(): sc_lv<1>(i_2_load_reg_384.read() == ap_const_lv6_5);
}

void imf3::thread_icmp_ln37_fu_325_p2() {
    icmp_ln37_fu_325_p2 = (!p_Val2_s_reg_437.read().is_01() || !ap_const_lv6_F.is_01())? sc_lv<1>(): sc_lv<1>(p_Val2_s_reg_437.read() == ap_const_lv6_F);
}

void imf3::thread_inc_2_fu_360_p3() {
    inc_2_fu_360_p3 = (!icmp_ln30_reg_448.read()[0].is_01())? sc_lv<6>(): ((icmp_ln30_reg_448.read()[0].to_bool())? ap_const_lv6_0: inc_reg_431.read());
}

void imf3::thread_inc_fu_169_p2() {
    inc_fu_169_p2 = (!ap_const_lv6_1.is_01() || !i_2_load_reg_384.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1) + sc_biguint<6>(i_2_load_reg_384.read()));
}

void imf3::thread_m_1_fu_254_p3() {
    m_1_fu_254_p3 = (!c_5_1_load_reg_416.read()[0].is_01())? sc_lv<35>(): ((c_5_1_load_reg_416.read()[0].to_bool())? sub_ln46_reg_465.read(): ap_const_lv35_0);
}

void imf3::thread_or_ln30_fu_226_p2() {
    or_ln30_fu_226_p2 = (init_2.read() | icmp_ln30_reg_448.read());
}

void imf3::thread_select_ln30_1_fu_246_p3() {
    select_ln30_1_fu_246_p3 = (!or_ln30_fu_226_p2.read()[0].is_01())? sc_lv<38>(): ((or_ln30_fu_226_p2.read()[0].to_bool())? ap_const_lv38_0: shift_reg_p1_q0.read());
}

void imf3::thread_select_ln30_fu_231_p3() {
    select_ln30_fu_231_p3 = (!or_ln30_fu_226_p2.read()[0].is_01())? sc_lv<38>(): ((or_ln30_fu_226_p2.read()[0].to_bool())? ap_const_lv38_0: shift_reg_p0_q0.read());
}

void imf3::thread_select_ln40_fu_346_p3() {
    select_ln40_fu_346_p3 = (!icmp_ln37_fu_325_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln37_fu_325_p2.read()[0].to_bool())? ap_const_lv6_0: add_ln40_fu_341_p2.read());
}

void imf3::thread_sext_ln46_2_fu_204_p1() {
    sext_ln46_2_fu_204_p1 = esl_sext<35,18>(d_assign_reg_126.read());
}

void imf3::thread_sext_ln47_1_fu_272_p1() {
    sext_ln47_1_fu_272_p1 = esl_sext<38,35>(m_1_reg_495.read());
}

void imf3::thread_sext_ln47_fu_264_p1() {
    sext_ln47_fu_264_p1 = esl_sext<38,36>(m_reg_475.read());
}

void imf3::thread_shift_reg_p0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        shift_reg_p0_address0 =  (sc_lv<4>) (zext_ln33_fu_314_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        shift_reg_p0_address0 =  (sc_lv<4>) (zext_ln30_1_fu_198_p1.read());
    } else {
        shift_reg_p0_address0 = "XXXX";
    }
}

void imf3::thread_shift_reg_p0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        shift_reg_p0_ce0 = ap_const_logic_1;
    } else {
        shift_reg_p0_ce0 = ap_const_logic_0;
    }
}

void imf3::thread_shift_reg_p0_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        shift_reg_p0_we0 = ap_const_logic_1;
    } else {
        shift_reg_p0_we0 = ap_const_logic_0;
    }
}

void imf3::thread_shift_reg_p1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        shift_reg_p1_address0 =  (sc_lv<4>) (zext_ln33_fu_314_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        shift_reg_p1_address0 =  (sc_lv<4>) (zext_ln30_1_fu_198_p1.read());
    } else {
        shift_reg_p1_address0 = "XXXX";
    }
}

void imf3::thread_shift_reg_p1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        shift_reg_p1_ce0 = ap_const_logic_1;
    } else {
        shift_reg_p1_ce0 = ap_const_logic_0;
    }
}

void imf3::thread_shift_reg_p1_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        shift_reg_p1_we0 = ap_const_logic_1;
    } else {
        shift_reg_p1_we0 = ap_const_logic_0;
    }
}

void imf3::thread_shl_ln_fu_208_p3() {
    shl_ln_fu_208_p3 = esl_concat<18,17>(d_assign_reg_126.read(), ap_const_lv17_0);
}

void imf3::thread_sub_ln46_fu_216_p2() {
    sub_ln46_fu_216_p2 = (!shl_ln_fu_208_p3.read().is_01() || !sext_ln46_2_fu_204_p1.read().is_01())? sc_lv<35>(): (sc_biguint<35>(shl_ln_fu_208_p3.read()) - sc_bigint<35>(sext_ln46_2_fu_204_p1.read()));
}

void imf3::thread_tmp_3_fu_191_p3() {
    tmp_3_fu_191_p3 = esl_concat<6,1>(inc_reg_431.read(), ch_4_fu_178_p3.read());
}

void imf3::thread_tmp_fu_308_p3() {
    tmp_fu_308_p3 = esl_concat<6,1>(i_2_load_reg_384.read(), ch_4_reg_443.read());
}

void imf3::thread_trunc_ln30_1_fu_243_p1() {
    trunc_ln30_1_fu_243_p1 = grp_fu_372_p2.read().range(35-1, 0);
}

void imf3::thread_trunc_ln30_fu_239_p1() {
    trunc_ln30_fu_239_p1 = select_ln30_fu_231_p3.read().range(35-1, 0);
}

void imf3::thread_trunc_ln31_fu_260_p1() {
    trunc_ln31_fu_260_p1 = select_ln30_1_fu_246_p3.read().range(35-1, 0);
}

void imf3::thread_zext_ln30_1_fu_198_p1() {
    zext_ln30_1_fu_198_p1 = esl_zext<64,7>(tmp_3_fu_191_p3.read());
}

void imf3::thread_zext_ln30_fu_156_p1() {
    zext_ln30_fu_156_p1 = esl_zext<64,6>(i_2.read());
}

void imf3::thread_zext_ln33_fu_314_p1() {
    zext_ln33_fu_314_p1 = esl_zext<64,7>(tmp_fu_308_p3.read());
}

void imf3::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<8>) ("XXXXXXXX");
            break;
    }
}

}

