// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _fir_HH_
#define _fir_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct fir : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<32> > y;
    sc_out< sc_logic > y_ap_vld;
    sc_out< sc_lv<4> > c_address0;
    sc_out< sc_logic > c_ce0;
    sc_in< sc_lv<32> > c_q0;
    sc_in< sc_lv<32> > x;
    sc_in< sc_logic > x_ap_vld;


    // Module declarations
    fir(sc_module_name name);
    SC_HAS_PROCESS(fir);

    ~fir();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<12> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > x_preg;
    sc_signal< sc_lv<32> > x_in_sig;
    sc_signal< sc_logic > x_ap_vld_preg;
    sc_signal< sc_logic > x_ap_vld_in_sig;
    sc_signal< sc_lv<32> > shift_reg_9;
    sc_signal< sc_lv<32> > shift_reg_8;
    sc_signal< sc_lv<32> > shift_reg_7;
    sc_signal< sc_lv<32> > shift_reg_6;
    sc_signal< sc_lv<32> > shift_reg_5;
    sc_signal< sc_lv<32> > shift_reg_4;
    sc_signal< sc_lv<32> > shift_reg_3;
    sc_signal< sc_lv<32> > shift_reg_2;
    sc_signal< sc_lv<32> > shift_reg_1;
    sc_signal< sc_lv<32> > shift_reg_0;
    sc_signal< sc_logic > x_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<32> > reg_189;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<32> > reg_193;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > add_ln74_fu_223_p2;
    sc_signal< sc_lv<32> > add_ln74_reg_435;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > add_ln74_2_fu_283_p2;
    sc_signal< sc_lv<32> > add_ln74_2_reg_455;
    sc_signal< sc_lv<32> > mul_ln74_5_fu_299_p2;
    sc_signal< sc_lv<32> > mul_ln74_5_reg_470;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > add_ln74_4_fu_337_p2;
    sc_signal< sc_lv<32> > add_ln74_4_reg_480;
    sc_signal< sc_lv<32> > mul_ln74_fu_201_p0;
    sc_signal< sc_lv<32> > mul_ln74_1_fu_217_p0;
    sc_signal< sc_lv<32> > mul_ln74_1_fu_217_p1;
    sc_signal< sc_lv<32> > mul_ln74_fu_201_p2;
    sc_signal< sc_lv<32> > mul_ln74_1_fu_217_p2;
    sc_signal< sc_lv<32> > mul_ln74_2_fu_239_p0;
    sc_signal< sc_lv<32> > mul_ln74_3_fu_255_p0;
    sc_signal< sc_lv<32> > mul_ln74_4_fu_271_p0;
    sc_signal< sc_lv<32> > mul_ln74_4_fu_271_p1;
    sc_signal< sc_lv<32> > mul_ln74_3_fu_255_p2;
    sc_signal< sc_lv<32> > mul_ln74_4_fu_271_p2;
    sc_signal< sc_lv<32> > add_ln74_1_fu_277_p2;
    sc_signal< sc_lv<32> > mul_ln74_2_fu_239_p2;
    sc_signal< sc_lv<32> > mul_ln74_5_fu_299_p0;
    sc_signal< sc_lv<32> > mul_ln74_6_fu_315_p0;
    sc_signal< sc_lv<32> > mul_ln74_7_fu_331_p0;
    sc_signal< sc_lv<32> > mul_ln74_7_fu_331_p1;
    sc_signal< sc_lv<32> > mul_ln74_6_fu_315_p2;
    sc_signal< sc_lv<32> > mul_ln74_7_fu_331_p2;
    sc_signal< sc_lv<32> > mul_ln74_8_fu_353_p0;
    sc_signal< sc_lv<32> > mul_ln74_9_fu_369_p0;
    sc_signal< sc_lv<32> > mul_ln74_10_fu_381_p0;
    sc_signal< sc_lv<32> > mul_ln74_10_fu_381_p1;
    sc_signal< sc_lv<32> > mul_ln74_9_fu_369_p2;
    sc_signal< sc_lv<32> > mul_ln74_10_fu_381_p2;
    sc_signal< sc_lv<32> > add_ln74_6_fu_395_p2;
    sc_signal< sc_lv<32> > mul_ln74_8_fu_353_p2;
    sc_signal< sc_lv<32> > add_ln74_7_fu_401_p2;
    sc_signal< sc_lv<32> > add_ln74_5_fu_391_p2;
    sc_signal< sc_lv<32> > add_ln74_8_fu_407_p2;
    sc_signal< sc_lv<32> > add_ln74_3_fu_387_p2;
    sc_signal< sc_lv<12> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<12> ap_ST_fsm_state1;
    static const sc_lv<12> ap_ST_fsm_state2;
    static const sc_lv<12> ap_ST_fsm_state3;
    static const sc_lv<12> ap_ST_fsm_state4;
    static const sc_lv<12> ap_ST_fsm_state5;
    static const sc_lv<12> ap_ST_fsm_state6;
    static const sc_lv<12> ap_ST_fsm_state7;
    static const sc_lv<12> ap_ST_fsm_state8;
    static const sc_lv<12> ap_ST_fsm_state9;
    static const sc_lv<12> ap_ST_fsm_state10;
    static const sc_lv<12> ap_ST_fsm_state11;
    static const sc_lv<12> ap_ST_fsm_state12;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<64> ap_const_lv64_A;
    static const sc_lv<64> ap_const_lv64_9;
    static const sc_lv<64> ap_const_lv64_8;
    static const sc_lv<64> ap_const_lv64_7;
    static const sc_lv<64> ap_const_lv64_6;
    static const sc_lv<64> ap_const_lv64_5;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln74_1_fu_277_p2();
    void thread_add_ln74_2_fu_283_p2();
    void thread_add_ln74_3_fu_387_p2();
    void thread_add_ln74_4_fu_337_p2();
    void thread_add_ln74_5_fu_391_p2();
    void thread_add_ln74_6_fu_395_p2();
    void thread_add_ln74_7_fu_401_p2();
    void thread_add_ln74_8_fu_407_p2();
    void thread_add_ln74_fu_223_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_c_address0();
    void thread_c_ce0();
    void thread_mul_ln74_10_fu_381_p0();
    void thread_mul_ln74_10_fu_381_p1();
    void thread_mul_ln74_10_fu_381_p2();
    void thread_mul_ln74_1_fu_217_p0();
    void thread_mul_ln74_1_fu_217_p1();
    void thread_mul_ln74_1_fu_217_p2();
    void thread_mul_ln74_2_fu_239_p0();
    void thread_mul_ln74_2_fu_239_p2();
    void thread_mul_ln74_3_fu_255_p0();
    void thread_mul_ln74_3_fu_255_p2();
    void thread_mul_ln74_4_fu_271_p0();
    void thread_mul_ln74_4_fu_271_p1();
    void thread_mul_ln74_4_fu_271_p2();
    void thread_mul_ln74_5_fu_299_p0();
    void thread_mul_ln74_5_fu_299_p2();
    void thread_mul_ln74_6_fu_315_p0();
    void thread_mul_ln74_6_fu_315_p2();
    void thread_mul_ln74_7_fu_331_p0();
    void thread_mul_ln74_7_fu_331_p1();
    void thread_mul_ln74_7_fu_331_p2();
    void thread_mul_ln74_8_fu_353_p0();
    void thread_mul_ln74_8_fu_353_p2();
    void thread_mul_ln74_9_fu_369_p0();
    void thread_mul_ln74_9_fu_369_p2();
    void thread_mul_ln74_fu_201_p0();
    void thread_mul_ln74_fu_201_p2();
    void thread_x_ap_vld_in_sig();
    void thread_x_blk_n();
    void thread_x_in_sig();
    void thread_y();
    void thread_y_ap_vld();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
