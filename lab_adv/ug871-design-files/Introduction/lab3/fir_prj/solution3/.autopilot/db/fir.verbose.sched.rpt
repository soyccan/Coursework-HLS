

================================================================
== Vivado HLS Report for 'fir'
================================================================
* Date:           Sat Oct 12 10:09:08 2019

* Version:        2019.1.3 (Build 2642998 on Wed Sep 04 10:25:22 MDT 2019)
* Project:        fir_prj
* Solution:       solution3
* Product family: virtexuplus
* Target device:  xcvu9p-flgb2104-1-e


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     7.918|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   11|   11|   11|   11|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 12
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.29>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%c_addr = getelementptr [11 x i32]* %c, i64 0, i64 10" [fir.c:74]   --->   Operation 13 'getelementptr' 'c_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [2/2] (1.29ns)   --->   "%c_load = load i32* %c_addr, align 4" [fir.c:74]   --->   Operation 14 'load' 'c_load' <Predicate = true> <Delay = 1.29> <Core = "RAM_1P_BRAM">   --->   Core 46 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 11> <RAM>

State 2 <SV = 1> <Delay = 1.29>
ST_2 : Operation 15 [1/2] (1.29ns)   --->   "%c_load = load i32* %c_addr, align 4" [fir.c:74]   --->   Operation 15 'load' 'c_load' <Predicate = true> <Delay = 1.29> <Core = "RAM_1P_BRAM">   --->   Core 46 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 11> <RAM>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%c_addr_1 = getelementptr [11 x i32]* %c, i64 0, i64 9" [fir.c:74]   --->   Operation 16 'getelementptr' 'c_addr_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [2/2] (1.29ns)   --->   "%c_load_1 = load i32* %c_addr_1, align 4" [fir.c:74]   --->   Operation 17 'load' 'c_load_1' <Predicate = true> <Delay = 1.29> <Core = "RAM_1P_BRAM">   --->   Core 46 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 11> <RAM>

State 3 <SV = 2> <Delay = 6.33>
ST_3 : Operation 18 [1/1] (0.00ns)   --->   "%shift_reg_9_load = load i32* @shift_reg_9, align 4" [fir.c:71]   --->   Operation 18 'load' 'shift_reg_9_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 19 [1/1] (3.90ns)   --->   "%mul_ln74 = mul nsw i32 %shift_reg_9_load, %c_load" [fir.c:74]   --->   Operation 19 'mul' 'mul_ln74' <Predicate = true> <Delay = 3.90> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.90> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 20 [1/1] (0.00ns)   --->   "%shift_reg_8_load = load i32* @shift_reg_8, align 16" [fir.c:71]   --->   Operation 20 'load' 'shift_reg_8_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 21 [1/1] (0.00ns)   --->   "store i32 %shift_reg_8_load, i32* @shift_reg_9, align 4" [fir.c:71]   --->   Operation 21 'store' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 22 [1/2] (1.29ns)   --->   "%c_load_1 = load i32* %c_addr_1, align 4" [fir.c:74]   --->   Operation 22 'load' 'c_load_1' <Predicate = true> <Delay = 1.29> <Core = "RAM_1P_BRAM">   --->   Core 46 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 11> <RAM>
ST_3 : Operation 23 [1/1] (3.90ns)   --->   "%mul_ln74_1 = mul nsw i32 %shift_reg_8_load, %c_load_1" [fir.c:74]   --->   Operation 23 'mul' 'mul_ln74_1' <Predicate = true> <Delay = 3.90> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.90> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 24 [1/1] (0.00ns)   --->   "%c_addr_2 = getelementptr [11 x i32]* %c, i64 0, i64 8" [fir.c:74]   --->   Operation 24 'getelementptr' 'c_addr_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 25 [2/2] (1.29ns)   --->   "%c_load_2 = load i32* %c_addr_2, align 4" [fir.c:74]   --->   Operation 25 'load' 'c_load_2' <Predicate = true> <Delay = 1.29> <Core = "RAM_1P_BRAM">   --->   Core 46 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 11> <RAM>
ST_3 : Operation 26 [1/1] (1.14ns)   --->   "%add_ln74 = add i32 %mul_ln74, %mul_ln74_1" [fir.c:74]   --->   Operation 26 'add' 'add_ln74' <Predicate = true> <Delay = 1.14> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 1.29>
ST_4 : Operation 27 [1/2] (1.29ns)   --->   "%c_load_2 = load i32* %c_addr_2, align 4" [fir.c:74]   --->   Operation 27 'load' 'c_load_2' <Predicate = true> <Delay = 1.29> <Core = "RAM_1P_BRAM">   --->   Core 46 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 11> <RAM>
ST_4 : Operation 28 [1/1] (0.00ns)   --->   "%c_addr_3 = getelementptr [11 x i32]* %c, i64 0, i64 7" [fir.c:74]   --->   Operation 28 'getelementptr' 'c_addr_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 29 [2/2] (1.29ns)   --->   "%c_load_3 = load i32* %c_addr_3, align 4" [fir.c:74]   --->   Operation 29 'load' 'c_load_3' <Predicate = true> <Delay = 1.29> <Core = "RAM_1P_BRAM">   --->   Core 46 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 11> <RAM>

State 5 <SV = 4> <Delay = 1.29>
ST_5 : Operation 30 [1/2] (1.29ns)   --->   "%c_load_3 = load i32* %c_addr_3, align 4" [fir.c:74]   --->   Operation 30 'load' 'c_load_3' <Predicate = true> <Delay = 1.29> <Core = "RAM_1P_BRAM">   --->   Core 46 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 11> <RAM>
ST_5 : Operation 31 [1/1] (0.00ns)   --->   "%c_addr_4 = getelementptr [11 x i32]* %c, i64 0, i64 6" [fir.c:74]   --->   Operation 31 'getelementptr' 'c_addr_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 32 [2/2] (1.29ns)   --->   "%c_load_4 = load i32* %c_addr_4, align 4" [fir.c:74]   --->   Operation 32 'load' 'c_load_4' <Predicate = true> <Delay = 1.29> <Core = "RAM_1P_BRAM">   --->   Core 46 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 11> <RAM>

State 6 <SV = 5> <Delay = 6.10>
ST_6 : Operation 33 [1/1] (0.00ns)   --->   "%shift_reg_7_load = load i32* @shift_reg_7, align 4" [fir.c:71]   --->   Operation 33 'load' 'shift_reg_7_load' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 34 [1/1] (0.00ns)   --->   "store i32 %shift_reg_7_load, i32* @shift_reg_8, align 16" [fir.c:71]   --->   Operation 34 'store' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 35 [1/1] (3.90ns)   --->   "%mul_ln74_2 = mul nsw i32 %shift_reg_7_load, %c_load_2" [fir.c:74]   --->   Operation 35 'mul' 'mul_ln74_2' <Predicate = true> <Delay = 3.90> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.90> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 36 [1/1] (0.00ns)   --->   "%shift_reg_6_load = load i32* @shift_reg_6, align 8" [fir.c:71]   --->   Operation 36 'load' 'shift_reg_6_load' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 37 [1/1] (0.00ns)   --->   "store i32 %shift_reg_6_load, i32* @shift_reg_7, align 4" [fir.c:71]   --->   Operation 37 'store' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 38 [1/1] (3.90ns)   --->   "%mul_ln74_3 = mul nsw i32 %shift_reg_6_load, %c_load_3" [fir.c:74]   --->   Operation 38 'mul' 'mul_ln74_3' <Predicate = true> <Delay = 3.90> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.90> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 39 [1/1] (0.00ns)   --->   "%shift_reg_5_load = load i32* @shift_reg_5, align 4" [fir.c:71]   --->   Operation 39 'load' 'shift_reg_5_load' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 40 [1/1] (0.00ns)   --->   "store i32 %shift_reg_5_load, i32* @shift_reg_6, align 8" [fir.c:71]   --->   Operation 40 'store' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 41 [1/2] (1.29ns)   --->   "%c_load_4 = load i32* %c_addr_4, align 4" [fir.c:74]   --->   Operation 41 'load' 'c_load_4' <Predicate = true> <Delay = 1.29> <Core = "RAM_1P_BRAM">   --->   Core 46 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 11> <RAM>
ST_6 : Operation 42 [1/1] (3.90ns)   --->   "%mul_ln74_4 = mul nsw i32 %shift_reg_5_load, %c_load_4" [fir.c:74]   --->   Operation 42 'mul' 'mul_ln74_4' <Predicate = true> <Delay = 3.90> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.90> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 43 [1/1] (0.00ns)   --->   "%c_addr_5 = getelementptr [11 x i32]* %c, i64 0, i64 5" [fir.c:74]   --->   Operation 43 'getelementptr' 'c_addr_5' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 44 [2/2] (1.29ns)   --->   "%c_load_5 = load i32* %c_addr_5, align 4" [fir.c:74]   --->   Operation 44 'load' 'c_load_5' <Predicate = true> <Delay = 1.29> <Core = "RAM_1P_BRAM">   --->   Core 46 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 11> <RAM>
ST_6 : Operation 45 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_1 = add i32 %mul_ln74_3, %mul_ln74_4" [fir.c:74]   --->   Operation 45 'add' 'add_ln74_1' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 46 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln74_2 = add i32 %add_ln74_1, %mul_ln74_2" [fir.c:74]   --->   Operation 46 'add' 'add_ln74_2' <Predicate = true> <Delay = 0.90> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 7 <SV = 6> <Delay = 1.29>
ST_7 : Operation 47 [1/2] (1.29ns)   --->   "%c_load_5 = load i32* %c_addr_5, align 4" [fir.c:74]   --->   Operation 47 'load' 'c_load_5' <Predicate = true> <Delay = 1.29> <Core = "RAM_1P_BRAM">   --->   Core 46 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 11> <RAM>
ST_7 : Operation 48 [1/1] (0.00ns)   --->   "%c_addr_6 = getelementptr [11 x i32]* %c, i64 0, i64 4" [fir.c:74]   --->   Operation 48 'getelementptr' 'c_addr_6' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 49 [2/2] (1.29ns)   --->   "%c_load_6 = load i32* %c_addr_6, align 4" [fir.c:74]   --->   Operation 49 'load' 'c_load_6' <Predicate = true> <Delay = 1.29> <Core = "RAM_1P_BRAM">   --->   Core 46 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 11> <RAM>

State 8 <SV = 7> <Delay = 1.29>
ST_8 : Operation 50 [1/2] (1.29ns)   --->   "%c_load_6 = load i32* %c_addr_6, align 4" [fir.c:74]   --->   Operation 50 'load' 'c_load_6' <Predicate = true> <Delay = 1.29> <Core = "RAM_1P_BRAM">   --->   Core 46 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 11> <RAM>
ST_8 : Operation 51 [1/1] (0.00ns)   --->   "%c_addr_7 = getelementptr [11 x i32]* %c, i64 0, i64 3" [fir.c:74]   --->   Operation 51 'getelementptr' 'c_addr_7' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 52 [2/2] (1.29ns)   --->   "%c_load_7 = load i32* %c_addr_7, align 4" [fir.c:74]   --->   Operation 52 'load' 'c_load_7' <Predicate = true> <Delay = 1.29> <Core = "RAM_1P_BRAM">   --->   Core 46 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 11> <RAM>

State 9 <SV = 8> <Delay = 6.33>
ST_9 : Operation 53 [1/1] (0.00ns)   --->   "%shift_reg_4_load = load i32* @shift_reg_4, align 16" [fir.c:71]   --->   Operation 53 'load' 'shift_reg_4_load' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 54 [1/1] (0.00ns)   --->   "store i32 %shift_reg_4_load, i32* @shift_reg_5, align 4" [fir.c:71]   --->   Operation 54 'store' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 55 [1/1] (3.90ns)   --->   "%mul_ln74_5 = mul nsw i32 %shift_reg_4_load, %c_load_5" [fir.c:74]   --->   Operation 55 'mul' 'mul_ln74_5' <Predicate = true> <Delay = 3.90> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.90> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 56 [1/1] (0.00ns)   --->   "%shift_reg_3_load = load i32* @shift_reg_3, align 4" [fir.c:71]   --->   Operation 56 'load' 'shift_reg_3_load' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 57 [1/1] (0.00ns)   --->   "store i32 %shift_reg_3_load, i32* @shift_reg_4, align 16" [fir.c:71]   --->   Operation 57 'store' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 58 [1/1] (3.90ns)   --->   "%mul_ln74_6 = mul nsw i32 %shift_reg_3_load, %c_load_6" [fir.c:74]   --->   Operation 58 'mul' 'mul_ln74_6' <Predicate = true> <Delay = 3.90> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.90> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 59 [1/1] (0.00ns)   --->   "%shift_reg_2_load = load i32* @shift_reg_2, align 8" [fir.c:71]   --->   Operation 59 'load' 'shift_reg_2_load' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 60 [1/1] (0.00ns)   --->   "store i32 %shift_reg_2_load, i32* @shift_reg_3, align 4" [fir.c:71]   --->   Operation 60 'store' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 61 [1/2] (1.29ns)   --->   "%c_load_7 = load i32* %c_addr_7, align 4" [fir.c:74]   --->   Operation 61 'load' 'c_load_7' <Predicate = true> <Delay = 1.29> <Core = "RAM_1P_BRAM">   --->   Core 46 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 11> <RAM>
ST_9 : Operation 62 [1/1] (3.90ns)   --->   "%mul_ln74_7 = mul nsw i32 %shift_reg_2_load, %c_load_7" [fir.c:74]   --->   Operation 62 'mul' 'mul_ln74_7' <Predicate = true> <Delay = 3.90> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.90> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 63 [1/1] (0.00ns)   --->   "%c_addr_8 = getelementptr [11 x i32]* %c, i64 0, i64 2" [fir.c:74]   --->   Operation 63 'getelementptr' 'c_addr_8' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 64 [2/2] (1.29ns)   --->   "%c_load_8 = load i32* %c_addr_8, align 4" [fir.c:74]   --->   Operation 64 'load' 'c_load_8' <Predicate = true> <Delay = 1.29> <Core = "RAM_1P_BRAM">   --->   Core 46 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 11> <RAM>
ST_9 : Operation 65 [1/1] (1.14ns)   --->   "%add_ln74_4 = add i32 %mul_ln74_6, %mul_ln74_7" [fir.c:74]   --->   Operation 65 'add' 'add_ln74_4' <Predicate = true> <Delay = 1.14> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 1.29>
ST_10 : Operation 66 [1/2] (1.29ns)   --->   "%c_load_8 = load i32* %c_addr_8, align 4" [fir.c:74]   --->   Operation 66 'load' 'c_load_8' <Predicate = true> <Delay = 1.29> <Core = "RAM_1P_BRAM">   --->   Core 46 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 11> <RAM>
ST_10 : Operation 67 [1/1] (0.00ns)   --->   "%c_addr_9 = getelementptr [11 x i32]* %c, i64 0, i64 1" [fir.c:74]   --->   Operation 67 'getelementptr' 'c_addr_9' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 68 [2/2] (1.29ns)   --->   "%c_load_9 = load i32* %c_addr_9, align 4" [fir.c:74]   --->   Operation 68 'load' 'c_load_9' <Predicate = true> <Delay = 1.29> <Core = "RAM_1P_BRAM">   --->   Core 46 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 11> <RAM>

State 11 <SV = 10> <Delay = 1.29>
ST_11 : Operation 69 [1/2] (1.29ns)   --->   "%c_load_9 = load i32* %c_addr_9, align 4" [fir.c:74]   --->   Operation 69 'load' 'c_load_9' <Predicate = true> <Delay = 1.29> <Core = "RAM_1P_BRAM">   --->   Core 46 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 11> <RAM>
ST_11 : Operation 70 [1/1] (0.00ns)   --->   "%c_addr_10 = getelementptr [11 x i32]* %c, i64 0, i64 0" [fir.c:74]   --->   Operation 70 'getelementptr' 'c_addr_10' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 71 [2/2] (1.29ns)   --->   "%c_load_10 = load i32* %c_addr_10, align 4" [fir.c:74]   --->   Operation 71 'load' 'c_load_10' <Predicate = true> <Delay = 1.29> <Core = "RAM_1P_BRAM">   --->   Core 46 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 11> <RAM>

State 12 <SV = 11> <Delay = 7.91>
ST_12 : Operation 72 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %y) nounwind, !map !7"   --->   Operation 72 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 73 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([11 x i32]* %c) nounwind, !map !13"   --->   Operation 73 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 74 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %x) nounwind, !map !19"   --->   Operation 74 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 75 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([4 x i8]* @fir_str) nounwind"   --->   Operation 75 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 76 [1/1] (0.00ns)   --->   "%x_read = call i32 @_ssdm_op_Read.ap_vld.i32(i32 %x) nounwind" [fir.c:49]   --->   Operation 76 'read' 'x_read' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 77 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %y, [7 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [fir.c:53]   --->   Operation 77 'specinterface' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 78 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %x, [7 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [fir.c:54]   --->   Operation 78 'specinterface' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 79 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([11 x i32]* %c, [1 x i8]* @p_str1, [12 x i8]* @p_str2, [1 x i8]* @p_str1, i32 -1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [fir.c:55]   --->   Operation 79 'specmemcore' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 80 [1/1] (0.00ns)   --->   "%shift_reg_1_load = load i32* @shift_reg_1, align 4" [fir.c:71]   --->   Operation 80 'load' 'shift_reg_1_load' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 81 [1/1] (0.00ns)   --->   "store i32 %shift_reg_1_load, i32* @shift_reg_2, align 8" [fir.c:71]   --->   Operation 81 'store' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 82 [1/1] (3.90ns)   --->   "%mul_ln74_8 = mul nsw i32 %shift_reg_1_load, %c_load_8" [fir.c:74]   --->   Operation 82 'mul' 'mul_ln74_8' <Predicate = true> <Delay = 3.90> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.90> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 83 [1/1] (0.00ns)   --->   "%shift_reg_0_load = load i32* @shift_reg_0, align 16" [fir.c:71]   --->   Operation 83 'load' 'shift_reg_0_load' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 84 [1/1] (0.00ns)   --->   "store i32 %shift_reg_0_load, i32* @shift_reg_1, align 4" [fir.c:71]   --->   Operation 84 'store' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 85 [1/1] (3.90ns)   --->   "%mul_ln74_9 = mul nsw i32 %shift_reg_0_load, %c_load_9" [fir.c:74]   --->   Operation 85 'mul' 'mul_ln74_9' <Predicate = true> <Delay = 3.90> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.90> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 86 [1/1] (0.00ns)   --->   "store i32 %x_read, i32* @shift_reg_0, align 16" [fir.c:68]   --->   Operation 86 'store' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 87 [1/2] (1.29ns)   --->   "%c_load_10 = load i32* %c_addr_10, align 4" [fir.c:74]   --->   Operation 87 'load' 'c_load_10' <Predicate = true> <Delay = 1.29> <Core = "RAM_1P_BRAM">   --->   Core 46 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 11> <RAM>
ST_12 : Operation 88 [1/1] (3.90ns)   --->   "%mul_ln74_10 = mul nsw i32 %c_load_10, %x_read" [fir.c:74]   --->   Operation 88 'mul' 'mul_ln74_10' <Predicate = true> <Delay = 3.90> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.90> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 89 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_3 = add i32 %add_ln74_2, %add_ln74" [fir.c:74]   --->   Operation 89 'add' 'add_ln74_3' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_12 : Operation 90 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_5 = add i32 %add_ln74_4, %mul_ln74_5" [fir.c:74]   --->   Operation 90 'add' 'add_ln74_5' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_12 : Operation 91 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_6 = add i32 %mul_ln74_9, %mul_ln74_10" [fir.c:74]   --->   Operation 91 'add' 'add_ln74_6' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_12 : Operation 92 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln74_7 = add i32 %add_ln74_6, %mul_ln74_8" [fir.c:74]   --->   Operation 92 'add' 'add_ln74_7' <Predicate = true> <Delay = 0.90> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_12 : Operation 93 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln74_8 = add i32 %add_ln74_7, %add_ln74_5" [fir.c:74]   --->   Operation 93 'add' 'add_ln74_8' <Predicate = true> <Delay = 0.90> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_12 : Operation 94 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln74_9 = add nsw i32 %add_ln74_8, %add_ln74_3" [fir.c:74]   --->   Operation 94 'add' 'add_ln74_9' <Predicate = true> <Delay = 0.90> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_12 : Operation 95 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_vld.i32P(i32* %y, i32 %add_ln74_9) nounwind" [fir.c:76]   --->   Operation 95 'write' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 96 [1/1] (0.00ns)   --->   "ret void" [fir.c:77]   --->   Operation 96 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.3ns
The critical path consists of the following:
	'getelementptr' operation ('c_addr', fir.c:74) [23]  (0 ns)
	'load' operation ('c_load', fir.c:74) on array 'c' [24]  (1.3 ns)

 <State 2>: 1.3ns
The critical path consists of the following:
	'load' operation ('c_load', fir.c:74) on array 'c' [24]  (1.3 ns)

 <State 3>: 6.34ns
The critical path consists of the following:
	'load' operation ('c_load_1', fir.c:74) on array 'c' [29]  (1.3 ns)
	'mul' operation ('mul_ln74_1', fir.c:74) [30]  (3.9 ns)
	'add' operation ('add_ln74', fir.c:74) [75]  (1.14 ns)

 <State 4>: 1.3ns
The critical path consists of the following:
	'load' operation ('c_load_2', fir.c:74) on array 'c' [34]  (1.3 ns)

 <State 5>: 1.3ns
The critical path consists of the following:
	'load' operation ('c_load_3', fir.c:74) on array 'c' [39]  (1.3 ns)

 <State 6>: 6.1ns
The critical path consists of the following:
	'load' operation ('c_load_4', fir.c:74) on array 'c' [44]  (1.3 ns)
	'mul' operation ('mul_ln74_4', fir.c:74) [45]  (3.9 ns)
	'add' operation ('add_ln74_1', fir.c:74) [76]  (0 ns)
	'add' operation ('add_ln74_2', fir.c:74) [77]  (0.907 ns)

 <State 7>: 1.3ns
The critical path consists of the following:
	'load' operation ('c_load_5', fir.c:74) on array 'c' [49]  (1.3 ns)

 <State 8>: 1.3ns
The critical path consists of the following:
	'load' operation ('c_load_6', fir.c:74) on array 'c' [54]  (1.3 ns)

 <State 9>: 6.34ns
The critical path consists of the following:
	'load' operation ('c_load_7', fir.c:74) on array 'c' [59]  (1.3 ns)
	'mul' operation ('mul_ln74_7', fir.c:74) [60]  (3.9 ns)
	'add' operation ('add_ln74_4', fir.c:74) [79]  (1.14 ns)

 <State 10>: 1.3ns
The critical path consists of the following:
	'load' operation ('c_load_8', fir.c:74) on array 'c' [64]  (1.3 ns)

 <State 11>: 1.3ns
The critical path consists of the following:
	'load' operation ('c_load_9', fir.c:74) on array 'c' [69]  (1.3 ns)

 <State 12>: 7.92ns
The critical path consists of the following:
	'load' operation ('c_load_10', fir.c:74) on array 'c' [73]  (1.3 ns)
	'mul' operation ('mul_ln74_10', fir.c:74) [74]  (3.9 ns)
	'add' operation ('add_ln74_6', fir.c:74) [81]  (0 ns)
	'add' operation ('add_ln74_7', fir.c:74) [82]  (0.907 ns)
	'add' operation ('add_ln74_8', fir.c:74) [83]  (0.907 ns)
	'add' operation ('add_ln74_9', fir.c:74) [84]  (0.907 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
