

================================================================
== Vivado HLS Report for 'matrixmul'
================================================================
* Date:           Tue Feb 11 18:23:39 2020

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        matrixmul_prj
* Solution:       solution6
* Product family: virtexuplus
* Target device:  xcvu9p-flgb2104-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 13.33 ns | 7.566 ns |   1.67 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+----------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline |
    |   min   |   max   |    min    |    max    | min | max |   Type   |
    +---------+---------+-----------+-----------+-----+-----+----------+
    |        5|        5| 66.665 ns | 66.665 ns |    5|    5| function |
    +---------+---------+-----------+-----------+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 5, depth = 6


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 1
  Pipeline-0 : II = 5, D = 6, States = { 1 2 3 4 5 6 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.73>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%a_addr = getelementptr [3 x i24]* %a, i64 0, i64 0" [matrixmul.cpp:60]   --->   Operation 7 'getelementptr' 'a_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [2/2] (0.73ns)   --->   "%a_load = load i24* %a_addr, align 4" [matrixmul.cpp:60]   --->   Operation 8 'load' 'a_load' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9> <RAM>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%b_addr = getelementptr [3 x i24]* %b, i64 0, i64 0" [matrixmul.cpp:60]   --->   Operation 9 'getelementptr' 'b_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [2/2] (0.73ns)   --->   "%b_load = load i24* %b_addr, align 4" [matrixmul.cpp:60]   --->   Operation 10 'load' 'b_load' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9> <RAM>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%b_addr_1 = getelementptr [3 x i24]* %b, i64 0, i64 1" [matrixmul.cpp:60]   --->   Operation 11 'getelementptr' 'b_addr_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [2/2] (0.73ns)   --->   "%b_load_1 = load i24* %b_addr_1, align 4" [matrixmul.cpp:60]   --->   Operation 12 'load' 'b_load_1' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9> <RAM>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%a_addr_1 = getelementptr [3 x i24]* %a, i64 0, i64 1" [matrixmul.cpp:60]   --->   Operation 13 'getelementptr' 'a_addr_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [2/2] (0.73ns)   --->   "%a_load_1 = load i24* %a_addr_1, align 4" [matrixmul.cpp:60]   --->   Operation 14 'load' 'a_load_1' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9> <RAM>

State 2 <SV = 1> <Delay = 7.56>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%res_addr = getelementptr [9 x i16]* %res, i64 0, i64 0" [matrixmul.cpp:57]   --->   Operation 15 'getelementptr' 'res_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%res_addr_1 = getelementptr [9 x i16]* %res, i64 0, i64 1" [matrixmul.cpp:57]   --->   Operation 16 'getelementptr' 'res_addr_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/2] (0.73ns)   --->   "%a_load = load i24* %a_addr, align 4" [matrixmul.cpp:60]   --->   Operation 17 'load' 'a_load' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9> <RAM>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%trunc_ln60 = trunc i24 %a_load to i8" [matrixmul.cpp:60]   --->   Operation 18 'trunc' 'trunc_ln60' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%sext_ln60 = sext i8 %trunc_ln60 to i16" [matrixmul.cpp:60]   --->   Operation 19 'sext' 'sext_ln60' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/2] (0.73ns)   --->   "%b_load = load i24* %b_addr, align 4" [matrixmul.cpp:60]   --->   Operation 20 'load' 'b_load' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9> <RAM>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%trunc_ln60_1 = trunc i24 %b_load to i8" [matrixmul.cpp:60]   --->   Operation 21 'trunc' 'trunc_ln60_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%sext_ln60_1 = sext i8 %trunc_ln60_1 to i16" [matrixmul.cpp:60]   --->   Operation 22 'sext' 'sext_ln60_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.63ns) (grouped into DSP with root node add_ln60)   --->   "%mul_ln60 = mul i16 %sext_ln60_1, %sext_ln60" [matrixmul.cpp:60]   --->   Operation 23 'mul' 'mul_ln60' <Predicate = true> <Delay = 0.63> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%tmp_2 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %a_load, i32 8, i32 15)" [matrixmul.cpp:60]   --->   Operation 24 'partselect' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%sext_ln60_2 = sext i8 %tmp_2 to i16" [matrixmul.cpp:60]   --->   Operation 25 'sext' 'sext_ln60_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%tmp_3 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %b_load, i32 8, i32 15)" [matrixmul.cpp:60]   --->   Operation 26 'partselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%sext_ln60_3 = sext i8 %tmp_3 to i16" [matrixmul.cpp:60]   --->   Operation 27 'sext' 'sext_ln60_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.63ns) (grouped into DSP with root node add_ln60_1)   --->   "%mul_ln60_1 = mul i16 %sext_ln60_3, %sext_ln60_2" [matrixmul.cpp:60]   --->   Operation 28 'mul' 'mul_ln60_1' <Predicate = true> <Delay = 0.63> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%tmp_4 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %a_load, i32 16, i32 23)" [matrixmul.cpp:60]   --->   Operation 29 'partselect' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%sext_ln60_4 = sext i8 %tmp_4 to i16" [matrixmul.cpp:60]   --->   Operation 30 'sext' 'sext_ln60_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%tmp_5 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %b_load, i32 16, i32 23)" [matrixmul.cpp:60]   --->   Operation 31 'partselect' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%sext_ln60_5 = sext i8 %tmp_5 to i16" [matrixmul.cpp:60]   --->   Operation 32 'sext' 'sext_ln60_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (1.69ns)   --->   "%mul_ln60_2 = mul i16 %sext_ln60_5, %sext_ln60_4" [matrixmul.cpp:60]   --->   Operation 33 'mul' 'mul_ln60_2' <Predicate = true> <Delay = 1.69> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 1.69> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (2.20ns) (root node of the DSP)   --->   "%add_ln60 = add i16 %mul_ln60_2, %mul_ln60" [matrixmul.cpp:60]   --->   Operation 34 'add' 'add_ln60' <Predicate = true> <Delay = 2.20> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 35 [1/1] (2.20ns) (root node of the DSP)   --->   "%add_ln60_1 = add i16 %mul_ln60_1, %add_ln60" [matrixmul.cpp:60]   --->   Operation 35 'add' 'add_ln60_1' <Predicate = true> <Delay = 2.20> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 36 [1/1] (0.73ns)   --->   "store i16 %add_ln60_1, i16* %res_addr, align 2" [matrixmul.cpp:60]   --->   Operation 36 'store' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9> <RAM>
ST_2 : Operation 37 [1/2] (0.73ns)   --->   "%b_load_1 = load i24* %b_addr_1, align 4" [matrixmul.cpp:60]   --->   Operation 37 'load' 'b_load_1' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9> <RAM>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%trunc_ln60_2 = trunc i24 %b_load_1 to i8" [matrixmul.cpp:60]   --->   Operation 38 'trunc' 'trunc_ln60_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%sext_ln60_6 = sext i8 %trunc_ln60_2 to i16" [matrixmul.cpp:60]   --->   Operation 39 'sext' 'sext_ln60_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.63ns) (grouped into DSP with root node add_ln60_2)   --->   "%mul_ln60_3 = mul i16 %sext_ln60_6, %sext_ln60" [matrixmul.cpp:60]   --->   Operation 40 'mul' 'mul_ln60_3' <Predicate = true> <Delay = 0.63> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%tmp_7 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %b_load_1, i32 8, i32 15)" [matrixmul.cpp:60]   --->   Operation 41 'partselect' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%sext_ln60_7 = sext i8 %tmp_7 to i16" [matrixmul.cpp:60]   --->   Operation 42 'sext' 'sext_ln60_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.63ns) (grouped into DSP with root node add_ln60_3)   --->   "%mul_ln60_4 = mul i16 %sext_ln60_7, %sext_ln60_2" [matrixmul.cpp:60]   --->   Operation 43 'mul' 'mul_ln60_4' <Predicate = true> <Delay = 0.63> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%tmp_8 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %b_load_1, i32 16, i32 23)" [matrixmul.cpp:60]   --->   Operation 44 'partselect' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%sext_ln60_8 = sext i8 %tmp_8 to i16" [matrixmul.cpp:60]   --->   Operation 45 'sext' 'sext_ln60_8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (1.69ns)   --->   "%mul_ln60_5 = mul i16 %sext_ln60_8, %sext_ln60_4" [matrixmul.cpp:60]   --->   Operation 46 'mul' 'mul_ln60_5' <Predicate = true> <Delay = 1.69> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 1.69> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (2.20ns) (root node of the DSP)   --->   "%add_ln60_2 = add i16 %mul_ln60_5, %mul_ln60_3" [matrixmul.cpp:60]   --->   Operation 47 'add' 'add_ln60_2' <Predicate = true> <Delay = 2.20> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 48 [1/1] (2.20ns) (root node of the DSP)   --->   "%add_ln60_3 = add i16 %mul_ln60_4, %add_ln60_2" [matrixmul.cpp:60]   --->   Operation 48 'add' 'add_ln60_3' <Predicate = true> <Delay = 2.20> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 49 [1/1] (0.73ns)   --->   "store i16 %add_ln60_3, i16* %res_addr_1, align 2" [matrixmul.cpp:60]   --->   Operation 49 'store' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9> <RAM>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%b_addr_2 = getelementptr [3 x i24]* %b, i64 0, i64 2" [matrixmul.cpp:60]   --->   Operation 50 'getelementptr' 'b_addr_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 51 [2/2] (0.73ns)   --->   "%b_load_2 = load i24* %b_addr_2, align 4" [matrixmul.cpp:60]   --->   Operation 51 'load' 'b_load_2' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9> <RAM>
ST_2 : Operation 52 [1/2] (0.73ns)   --->   "%a_load_1 = load i24* %a_addr_1, align 4" [matrixmul.cpp:60]   --->   Operation 52 'load' 'a_load_1' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9> <RAM>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%trunc_ln60_4 = trunc i24 %a_load_1 to i8" [matrixmul.cpp:60]   --->   Operation 53 'trunc' 'trunc_ln60_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%tmp_6 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %a_load_1, i32 8, i32 15)" [matrixmul.cpp:60]   --->   Operation 54 'partselect' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%tmp_9 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %a_load_1, i32 16, i32 23)" [matrixmul.cpp:60]   --->   Operation 55 'partselect' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%a_addr_2 = getelementptr [3 x i24]* %a, i64 0, i64 2" [matrixmul.cpp:60]   --->   Operation 56 'getelementptr' 'a_addr_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 57 [2/2] (0.73ns)   --->   "%a_load_2 = load i24* %a_addr_2, align 4" [matrixmul.cpp:60]   --->   Operation 57 'load' 'a_load_2' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9> <RAM>

State 3 <SV = 2> <Delay = 7.56>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%res_addr_2 = getelementptr [9 x i16]* %res, i64 0, i64 2" [matrixmul.cpp:57]   --->   Operation 58 'getelementptr' 'res_addr_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%res_addr_3 = getelementptr [9 x i16]* %res, i64 0, i64 3" [matrixmul.cpp:57]   --->   Operation 59 'getelementptr' 'res_addr_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 60 [1/2] (0.73ns)   --->   "%b_load_2 = load i24* %b_addr_2, align 4" [matrixmul.cpp:60]   --->   Operation 60 'load' 'b_load_2' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9> <RAM>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%trunc_ln60_3 = trunc i24 %b_load_2 to i8" [matrixmul.cpp:60]   --->   Operation 61 'trunc' 'trunc_ln60_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%sext_ln60_9 = sext i8 %trunc_ln60_3 to i16" [matrixmul.cpp:60]   --->   Operation 62 'sext' 'sext_ln60_9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (0.63ns) (grouped into DSP with root node add_ln60_4)   --->   "%mul_ln60_6 = mul i16 %sext_ln60_9, %sext_ln60" [matrixmul.cpp:60]   --->   Operation 63 'mul' 'mul_ln60_6' <Predicate = true> <Delay = 0.63> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%tmp_s = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %b_load_2, i32 8, i32 15)" [matrixmul.cpp:60]   --->   Operation 64 'partselect' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%sext_ln60_10 = sext i8 %tmp_s to i16" [matrixmul.cpp:60]   --->   Operation 65 'sext' 'sext_ln60_10' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (0.63ns) (grouped into DSP with root node add_ln60_5)   --->   "%mul_ln60_7 = mul i16 %sext_ln60_10, %sext_ln60_2" [matrixmul.cpp:60]   --->   Operation 66 'mul' 'mul_ln60_7' <Predicate = true> <Delay = 0.63> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "%tmp_1 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %b_load_2, i32 16, i32 23)" [matrixmul.cpp:60]   --->   Operation 67 'partselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%sext_ln60_11 = sext i8 %tmp_1 to i16" [matrixmul.cpp:60]   --->   Operation 68 'sext' 'sext_ln60_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 69 [1/1] (1.69ns)   --->   "%mul_ln60_8 = mul i16 %sext_ln60_11, %sext_ln60_4" [matrixmul.cpp:60]   --->   Operation 69 'mul' 'mul_ln60_8' <Predicate = true> <Delay = 1.69> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 1.69> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 70 [1/1] (2.20ns) (root node of the DSP)   --->   "%add_ln60_4 = add i16 %mul_ln60_8, %mul_ln60_6" [matrixmul.cpp:60]   --->   Operation 70 'add' 'add_ln60_4' <Predicate = true> <Delay = 2.20> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 71 [1/1] (2.20ns) (root node of the DSP)   --->   "%add_ln60_5 = add i16 %mul_ln60_7, %add_ln60_4" [matrixmul.cpp:60]   --->   Operation 71 'add' 'add_ln60_5' <Predicate = true> <Delay = 2.20> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 72 [1/1] (0.73ns)   --->   "store i16 %add_ln60_5, i16* %res_addr_2, align 2" [matrixmul.cpp:60]   --->   Operation 72 'store' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9> <RAM>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%sext_ln60_12 = sext i8 %trunc_ln60_4 to i16" [matrixmul.cpp:60]   --->   Operation 73 'sext' 'sext_ln60_12' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 74 [1/1] (0.63ns) (grouped into DSP with root node add_ln60_6)   --->   "%mul_ln60_9 = mul i16 %sext_ln60_1, %sext_ln60_12" [matrixmul.cpp:60]   --->   Operation 74 'mul' 'mul_ln60_9' <Predicate = true> <Delay = 0.63> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 75 [1/1] (0.00ns)   --->   "%sext_ln60_13 = sext i8 %tmp_6 to i16" [matrixmul.cpp:60]   --->   Operation 75 'sext' 'sext_ln60_13' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 76 [1/1] (0.63ns) (grouped into DSP with root node add_ln60_7)   --->   "%mul_ln60_10 = mul i16 %sext_ln60_3, %sext_ln60_13" [matrixmul.cpp:60]   --->   Operation 76 'mul' 'mul_ln60_10' <Predicate = true> <Delay = 0.63> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 77 [1/1] (0.00ns)   --->   "%sext_ln60_14 = sext i8 %tmp_9 to i16" [matrixmul.cpp:60]   --->   Operation 77 'sext' 'sext_ln60_14' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 78 [1/1] (1.69ns)   --->   "%mul_ln60_11 = mul i16 %sext_ln60_5, %sext_ln60_14" [matrixmul.cpp:60]   --->   Operation 78 'mul' 'mul_ln60_11' <Predicate = true> <Delay = 1.69> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 1.69> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 79 [1/1] (2.20ns) (root node of the DSP)   --->   "%add_ln60_6 = add i16 %mul_ln60_11, %mul_ln60_9" [matrixmul.cpp:60]   --->   Operation 79 'add' 'add_ln60_6' <Predicate = true> <Delay = 2.20> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 80 [1/1] (2.20ns) (root node of the DSP)   --->   "%add_ln60_7 = add i16 %mul_ln60_10, %add_ln60_6" [matrixmul.cpp:60]   --->   Operation 80 'add' 'add_ln60_7' <Predicate = true> <Delay = 2.20> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 81 [1/1] (0.73ns)   --->   "store i16 %add_ln60_7, i16* %res_addr_3, align 2" [matrixmul.cpp:60]   --->   Operation 81 'store' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9> <RAM>
ST_3 : Operation 82 [1/2] (0.73ns)   --->   "%a_load_2 = load i24* %a_addr_2, align 4" [matrixmul.cpp:60]   --->   Operation 82 'load' 'a_load_2' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9> <RAM>
ST_3 : Operation 83 [1/1] (0.00ns)   --->   "%trunc_ln60_5 = trunc i24 %a_load_2 to i8" [matrixmul.cpp:60]   --->   Operation 83 'trunc' 'trunc_ln60_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "%tmp_10 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %a_load_2, i32 8, i32 15)" [matrixmul.cpp:60]   --->   Operation 84 'partselect' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 85 [1/1] (0.00ns)   --->   "%tmp_11 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %a_load_2, i32 16, i32 23)" [matrixmul.cpp:60]   --->   Operation 85 'partselect' 'tmp_11' <Predicate = true> <Delay = 0.00>

State 4 <SV = 3> <Delay = 6.83>
ST_4 : Operation 86 [1/1] (0.00ns)   --->   "%res_addr_4 = getelementptr [9 x i16]* %res, i64 0, i64 4" [matrixmul.cpp:57]   --->   Operation 86 'getelementptr' 'res_addr_4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 87 [1/1] (0.00ns)   --->   "%res_addr_5 = getelementptr [9 x i16]* %res, i64 0, i64 5" [matrixmul.cpp:57]   --->   Operation 87 'getelementptr' 'res_addr_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 88 [1/1] (0.63ns) (grouped into DSP with root node add_ln60_8)   --->   "%mul_ln60_12 = mul i16 %sext_ln60_6, %sext_ln60_12" [matrixmul.cpp:60]   --->   Operation 88 'mul' 'mul_ln60_12' <Predicate = true> <Delay = 0.63> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 89 [1/1] (0.63ns) (grouped into DSP with root node add_ln60_9)   --->   "%mul_ln60_13 = mul i16 %sext_ln60_7, %sext_ln60_13" [matrixmul.cpp:60]   --->   Operation 89 'mul' 'mul_ln60_13' <Predicate = true> <Delay = 0.63> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 90 [1/1] (1.69ns)   --->   "%mul_ln60_14 = mul i16 %sext_ln60_8, %sext_ln60_14" [matrixmul.cpp:60]   --->   Operation 90 'mul' 'mul_ln60_14' <Predicate = true> <Delay = 1.69> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 1.69> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 91 [1/1] (2.20ns) (root node of the DSP)   --->   "%add_ln60_8 = add i16 %mul_ln60_14, %mul_ln60_12" [matrixmul.cpp:60]   --->   Operation 91 'add' 'add_ln60_8' <Predicate = true> <Delay = 2.20> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 92 [1/1] (2.20ns) (root node of the DSP)   --->   "%add_ln60_9 = add i16 %mul_ln60_13, %add_ln60_8" [matrixmul.cpp:60]   --->   Operation 92 'add' 'add_ln60_9' <Predicate = true> <Delay = 2.20> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 93 [1/1] (0.73ns)   --->   "store i16 %add_ln60_9, i16* %res_addr_4, align 2" [matrixmul.cpp:60]   --->   Operation 93 'store' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9> <RAM>
ST_4 : Operation 94 [1/1] (0.63ns) (grouped into DSP with root node add_ln60_10)   --->   "%mul_ln60_15 = mul i16 %sext_ln60_9, %sext_ln60_12" [matrixmul.cpp:60]   --->   Operation 94 'mul' 'mul_ln60_15' <Predicate = true> <Delay = 0.63> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 95 [1/1] (0.63ns) (grouped into DSP with root node add_ln60_11)   --->   "%mul_ln60_16 = mul i16 %sext_ln60_10, %sext_ln60_13" [matrixmul.cpp:60]   --->   Operation 95 'mul' 'mul_ln60_16' <Predicate = true> <Delay = 0.63> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 96 [1/1] (1.69ns)   --->   "%mul_ln60_17 = mul i16 %sext_ln60_11, %sext_ln60_14" [matrixmul.cpp:60]   --->   Operation 96 'mul' 'mul_ln60_17' <Predicate = true> <Delay = 1.69> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 1.69> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 97 [1/1] (2.20ns) (root node of the DSP)   --->   "%add_ln60_10 = add i16 %mul_ln60_17, %mul_ln60_15" [matrixmul.cpp:60]   --->   Operation 97 'add' 'add_ln60_10' <Predicate = true> <Delay = 2.20> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 98 [1/1] (2.20ns) (root node of the DSP)   --->   "%add_ln60_11 = add i16 %mul_ln60_16, %add_ln60_10" [matrixmul.cpp:60]   --->   Operation 98 'add' 'add_ln60_11' <Predicate = true> <Delay = 2.20> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 99 [1/1] (0.73ns)   --->   "store i16 %add_ln60_11, i16* %res_addr_5, align 2" [matrixmul.cpp:60]   --->   Operation 99 'store' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9> <RAM>

State 5 <SV = 4> <Delay = 6.83>
ST_5 : Operation 100 [1/1] (0.00ns)   --->   "%res_addr_6 = getelementptr [9 x i16]* %res, i64 0, i64 6" [matrixmul.cpp:57]   --->   Operation 100 'getelementptr' 'res_addr_6' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 101 [1/1] (0.00ns)   --->   "%res_addr_7 = getelementptr [9 x i16]* %res, i64 0, i64 7" [matrixmul.cpp:57]   --->   Operation 101 'getelementptr' 'res_addr_7' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 102 [1/1] (0.00ns)   --->   "%sext_ln60_15 = sext i8 %trunc_ln60_5 to i16" [matrixmul.cpp:60]   --->   Operation 102 'sext' 'sext_ln60_15' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 103 [1/1] (0.63ns) (grouped into DSP with root node add_ln60_12)   --->   "%mul_ln60_18 = mul i16 %sext_ln60_1, %sext_ln60_15" [matrixmul.cpp:60]   --->   Operation 103 'mul' 'mul_ln60_18' <Predicate = true> <Delay = 0.63> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 104 [1/1] (0.00ns)   --->   "%sext_ln60_16 = sext i8 %tmp_10 to i16" [matrixmul.cpp:60]   --->   Operation 104 'sext' 'sext_ln60_16' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 105 [1/1] (0.63ns) (grouped into DSP with root node add_ln60_13)   --->   "%mul_ln60_19 = mul i16 %sext_ln60_3, %sext_ln60_16" [matrixmul.cpp:60]   --->   Operation 105 'mul' 'mul_ln60_19' <Predicate = true> <Delay = 0.63> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 106 [1/1] (0.00ns)   --->   "%sext_ln60_17 = sext i8 %tmp_11 to i16" [matrixmul.cpp:60]   --->   Operation 106 'sext' 'sext_ln60_17' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 107 [1/1] (1.69ns)   --->   "%mul_ln60_20 = mul i16 %sext_ln60_5, %sext_ln60_17" [matrixmul.cpp:60]   --->   Operation 107 'mul' 'mul_ln60_20' <Predicate = true> <Delay = 1.69> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 1.69> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 108 [1/1] (2.20ns) (root node of the DSP)   --->   "%add_ln60_12 = add i16 %mul_ln60_20, %mul_ln60_18" [matrixmul.cpp:60]   --->   Operation 108 'add' 'add_ln60_12' <Predicate = true> <Delay = 2.20> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 109 [1/1] (2.20ns) (root node of the DSP)   --->   "%add_ln60_13 = add i16 %mul_ln60_19, %add_ln60_12" [matrixmul.cpp:60]   --->   Operation 109 'add' 'add_ln60_13' <Predicate = true> <Delay = 2.20> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 110 [1/1] (0.73ns)   --->   "store i16 %add_ln60_13, i16* %res_addr_6, align 2" [matrixmul.cpp:60]   --->   Operation 110 'store' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9> <RAM>
ST_5 : Operation 111 [1/1] (0.63ns) (grouped into DSP with root node add_ln60_14)   --->   "%mul_ln60_21 = mul i16 %sext_ln60_6, %sext_ln60_15" [matrixmul.cpp:60]   --->   Operation 111 'mul' 'mul_ln60_21' <Predicate = true> <Delay = 0.63> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 112 [1/1] (0.63ns) (grouped into DSP with root node add_ln60_15)   --->   "%mul_ln60_22 = mul i16 %sext_ln60_7, %sext_ln60_16" [matrixmul.cpp:60]   --->   Operation 112 'mul' 'mul_ln60_22' <Predicate = true> <Delay = 0.63> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 113 [1/1] (1.69ns)   --->   "%mul_ln60_23 = mul i16 %sext_ln60_8, %sext_ln60_17" [matrixmul.cpp:60]   --->   Operation 113 'mul' 'mul_ln60_23' <Predicate = true> <Delay = 1.69> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 1.69> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 114 [1/1] (2.20ns) (root node of the DSP)   --->   "%add_ln60_14 = add i16 %mul_ln60_23, %mul_ln60_21" [matrixmul.cpp:60]   --->   Operation 114 'add' 'add_ln60_14' <Predicate = true> <Delay = 2.20> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 115 [1/1] (2.20ns) (root node of the DSP)   --->   "%add_ln60_15 = add i16 %mul_ln60_22, %add_ln60_14" [matrixmul.cpp:60]   --->   Operation 115 'add' 'add_ln60_15' <Predicate = true> <Delay = 2.20> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 116 [1/1] (0.73ns)   --->   "store i16 %add_ln60_15, i16* %res_addr_7, align 2" [matrixmul.cpp:60]   --->   Operation 116 'store' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9> <RAM>

State 6 <SV = 5> <Delay = 6.83>
ST_6 : Operation 117 [1/1] (0.00ns)   --->   "%res_addr_8 = getelementptr [9 x i16]* %res, i64 0, i64 8" [matrixmul.cpp:57]   --->   Operation 117 'getelementptr' 'res_addr_8' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 118 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([3 x i24]* %b), !map !7"   --->   Operation 118 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 119 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([3 x i24]* %a), !map !24"   --->   Operation 119 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 120 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([9 x i16]* %res), !map !37"   --->   Operation 120 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 121 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([10 x i8]* @matrixmul_str) nounwind"   --->   Operation 121 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 122 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [matrixmul.cpp:53]   --->   Operation 122 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 123 [1/1] (0.63ns) (grouped into DSP with root node add_ln60_16)   --->   "%mul_ln60_24 = mul i16 %sext_ln60_9, %sext_ln60_15" [matrixmul.cpp:60]   --->   Operation 123 'mul' 'mul_ln60_24' <Predicate = true> <Delay = 0.63> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 124 [1/1] (0.63ns) (grouped into DSP with root node add_ln60_17)   --->   "%mul_ln60_25 = mul i16 %sext_ln60_10, %sext_ln60_16" [matrixmul.cpp:60]   --->   Operation 124 'mul' 'mul_ln60_25' <Predicate = true> <Delay = 0.63> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 125 [1/1] (1.69ns)   --->   "%mul_ln60_26 = mul i16 %sext_ln60_11, %sext_ln60_17" [matrixmul.cpp:60]   --->   Operation 125 'mul' 'mul_ln60_26' <Predicate = true> <Delay = 1.69> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 1.69> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 126 [1/1] (2.20ns) (root node of the DSP)   --->   "%add_ln60_16 = add i16 %mul_ln60_26, %mul_ln60_24" [matrixmul.cpp:60]   --->   Operation 126 'add' 'add_ln60_16' <Predicate = true> <Delay = 2.20> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 127 [1/1] (2.20ns) (root node of the DSP)   --->   "%add_ln60_17 = add i16 %mul_ln60_25, %add_ln60_16" [matrixmul.cpp:60]   --->   Operation 127 'add' 'add_ln60_17' <Predicate = true> <Delay = 2.20> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 128 [1/1] (0.73ns)   --->   "store i16 %add_ln60_17, i16* %res_addr_8, align 2" [matrixmul.cpp:60]   --->   Operation 128 'store' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9> <RAM>
ST_6 : Operation 129 [1/1] (0.00ns)   --->   "ret void" [matrixmul.cpp:65]   --->   Operation 129 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 13.3ns, clock uncertainty: 1.67ns.

 <State 1>: 0.73ns
The critical path consists of the following:
	'getelementptr' operation ('a_addr', matrixmul.cpp:60) [18]  (0 ns)
	'load' operation ('a_load', matrixmul.cpp:60) on array 'a' [19]  (0.73 ns)

 <State 2>: 7.57ns
The critical path consists of the following:
	'load' operation ('a_load', matrixmul.cpp:60) on array 'a' [19]  (0.73 ns)
	'mul' operation ('mul_ln60_2', matrixmul.cpp:60) [36]  (1.69 ns)
	'add' operation of DSP[37] ('add_ln60', matrixmul.cpp:60) [37]  (2.21 ns)
	'add' operation of DSP[38] ('add_ln60_1', matrixmul.cpp:60) [38]  (2.21 ns)
	'store' operation ('store_ln60', matrixmul.cpp:60) of variable 'add_ln60_1', matrixmul.cpp:60 on array 'res' [39]  (0.73 ns)

 <State 3>: 7.57ns
The critical path consists of the following:
	'load' operation ('b_load_2', matrixmul.cpp:60) on array 'b' [55]  (0.73 ns)
	'mul' operation ('mul_ln60_8', matrixmul.cpp:60) [64]  (1.69 ns)
	'add' operation of DSP[65] ('add_ln60_4', matrixmul.cpp:60) [65]  (2.21 ns)
	'add' operation of DSP[66] ('add_ln60_5', matrixmul.cpp:60) [66]  (2.21 ns)
	'store' operation ('store_ln60', matrixmul.cpp:60) of variable 'add_ln60_5', matrixmul.cpp:60 on array 'res' [67]  (0.73 ns)

 <State 4>: 6.84ns
The critical path consists of the following:
	'mul' operation ('mul_ln60_14', matrixmul.cpp:60) [84]  (1.69 ns)
	'add' operation of DSP[85] ('add_ln60_8', matrixmul.cpp:60) [85]  (2.21 ns)
	'add' operation of DSP[86] ('add_ln60_9', matrixmul.cpp:60) [86]  (2.21 ns)
	'store' operation ('store_ln60', matrixmul.cpp:60) of variable 'add_ln60_9', matrixmul.cpp:60 on array 'res' [87]  (0.73 ns)

 <State 5>: 6.84ns
The critical path consists of the following:
	'mul' operation ('mul_ln60_20', matrixmul.cpp:60) [104]  (1.69 ns)
	'add' operation of DSP[105] ('add_ln60_12', matrixmul.cpp:60) [105]  (2.21 ns)
	'add' operation of DSP[106] ('add_ln60_13', matrixmul.cpp:60) [106]  (2.21 ns)
	'store' operation ('store_ln60', matrixmul.cpp:60) of variable 'add_ln60_13', matrixmul.cpp:60 on array 'res' [107]  (0.73 ns)

 <State 6>: 6.84ns
The critical path consists of the following:
	'mul' operation ('mul_ln60_26', matrixmul.cpp:60) [116]  (1.69 ns)
	'add' operation of DSP[117] ('add_ln60_16', matrixmul.cpp:60) [117]  (2.21 ns)
	'add' operation of DSP[118] ('add_ln60_17', matrixmul.cpp:60) [118]  (2.21 ns)
	'store' operation ('store_ln60', matrixmul.cpp:60) of variable 'add_ln60_17', matrixmul.cpp:60 on array 'res' [119]  (0.73 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
