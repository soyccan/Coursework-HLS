// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _shift_reg_HH_
#define _shift_reg_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "shift_reg_shift_rbkb.h"
#include "shift_reg_Sreg_Arcud.h"

namespace ap_rtl {

struct shift_reg : public sc_module {
    // Port declarations 56
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > din0;
    sc_in< sc_lv<32> > din1;
    sc_in< sc_lv<8> > load_data_0;
    sc_in< sc_lv<8> > load_data_1;
    sc_in< sc_lv<8> > load_data_2;
    sc_in< sc_lv<8> > load_data_3;
    sc_in< sc_lv<8> > load_data_4;
    sc_in< sc_lv<8> > load_data_5;
    sc_in< sc_lv<8> > load_data_6;
    sc_in< sc_lv<8> > load_data_7;
    sc_in< sc_lv<8> > load_data_8;
    sc_in< sc_lv<8> > load_data_9;
    sc_in< sc_lv<8> > load_data_10;
    sc_in< sc_lv<8> > load_data_11;
    sc_out< sc_lv<8> > dout0_0;
    sc_out< sc_logic > dout0_0_ap_vld;
    sc_out< sc_lv<8> > dout0_1;
    sc_out< sc_logic > dout0_1_ap_vld;
    sc_out< sc_lv<8> > dout0_2;
    sc_out< sc_logic > dout0_2_ap_vld;
    sc_out< sc_lv<8> > dout0_3;
    sc_out< sc_logic > dout0_3_ap_vld;
    sc_out< sc_lv<8> > dout0_4;
    sc_out< sc_logic > dout0_4_ap_vld;
    sc_out< sc_lv<8> > dout0_5;
    sc_out< sc_logic > dout0_5_ap_vld;
    sc_out< sc_lv<8> > dout0_6;
    sc_out< sc_logic > dout0_6_ap_vld;
    sc_out< sc_lv<8> > dout0_7;
    sc_out< sc_logic > dout0_7_ap_vld;
    sc_out< sc_lv<8> > dout0_8;
    sc_out< sc_logic > dout0_8_ap_vld;
    sc_out< sc_lv<8> > dout0_9;
    sc_out< sc_logic > dout0_9_ap_vld;
    sc_out< sc_lv<8> > dout0_10;
    sc_out< sc_logic > dout0_10_ap_vld;
    sc_out< sc_lv<8> > dout0_11;
    sc_out< sc_logic > dout0_11_ap_vld;
    sc_out< sc_lv<32> > dout1_0;
    sc_out< sc_logic > dout1_0_ap_vld;
    sc_out< sc_lv<32> > dout1_1;
    sc_out< sc_logic > dout1_1_ap_vld;
    sc_out< sc_lv<32> > dout1_2;
    sc_out< sc_logic > dout1_2_ap_vld;
    sc_out< sc_lv<32> > dout1_3;
    sc_out< sc_logic > dout1_3_ap_vld;
    sc_in< sc_logic > srst;
    sc_in< sc_logic > load;
    sc_in< sc_logic > en;
    sc_in< sc_lv<3> > select_V;


    // Module declarations
    shift_reg(sc_module_name name);
    SC_HAS_PROCESS(shift_reg);

    ~shift_reg();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    shift_reg_shift_rbkb* shift_reg0_regs_U;
    shift_reg_Sreg_Arcud* Sreg_Array_U;
    sc_signal< sc_lv<25> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > regs_5_10;
    sc_signal< sc_lv<8> > regs_5_9;
    sc_signal< sc_lv<8> > regs_5_8;
    sc_signal< sc_lv<8> > regs_5_7;
    sc_signal< sc_lv<8> > regs_5_6;
    sc_signal< sc_lv<8> > regs_5_5;
    sc_signal< sc_lv<8> > regs_5_4;
    sc_signal< sc_lv<8> > regs_5_3;
    sc_signal< sc_lv<8> > regs_5_2;
    sc_signal< sc_lv<8> > regs_5_1;
    sc_signal< sc_lv<8> > regs_5_0;
    sc_signal< sc_lv<8> > regs_6_10;
    sc_signal< sc_lv<8> > regs_6_9;
    sc_signal< sc_lv<8> > regs_6_8;
    sc_signal< sc_lv<8> > regs_6_7;
    sc_signal< sc_lv<8> > regs_6_6;
    sc_signal< sc_lv<8> > regs_6_5;
    sc_signal< sc_lv<8> > regs_6_4;
    sc_signal< sc_lv<8> > regs_6_3;
    sc_signal< sc_lv<8> > regs_6_2;
    sc_signal< sc_lv<8> > regs_6_1;
    sc_signal< sc_lv<8> > regs_6_0;
    sc_signal< sc_lv<8> > regs_6_11;
    sc_signal< sc_lv<8> > regs_7_10;
    sc_signal< sc_lv<8> > regs_7_9;
    sc_signal< sc_lv<8> > regs_7_8;
    sc_signal< sc_lv<8> > regs_7_7;
    sc_signal< sc_lv<8> > regs_7_6;
    sc_signal< sc_lv<8> > regs_7_5;
    sc_signal< sc_lv<8> > regs_7_4;
    sc_signal< sc_lv<8> > regs_7_3;
    sc_signal< sc_lv<8> > regs_7_2;
    sc_signal< sc_lv<8> > regs_7_1;
    sc_signal< sc_lv<8> > regs_7_0;
    sc_signal< sc_lv<8> > regs_8_10;
    sc_signal< sc_lv<8> > regs_8_9;
    sc_signal< sc_lv<8> > regs_8_8;
    sc_signal< sc_lv<8> > regs_8_7;
    sc_signal< sc_lv<8> > regs_8_6;
    sc_signal< sc_lv<8> > regs_8_5;
    sc_signal< sc_lv<8> > regs_8_4;
    sc_signal< sc_lv<8> > regs_8_3;
    sc_signal< sc_lv<8> > regs_8_2;
    sc_signal< sc_lv<8> > regs_8_1;
    sc_signal< sc_lv<8> > regs_8_0;
    sc_signal< sc_lv<8> > shift_reg1_regs_2;
    sc_signal< sc_lv<8> > shift_reg1_regs_3;
    sc_signal< sc_lv<8> > shift_reg1_regs_1;
    sc_signal< sc_lv<8> > shift_reg1_regs_0;
    sc_signal< sc_lv<8> > regs_9_6;
    sc_signal< sc_lv<8> > regs_9_5;
    sc_signal< sc_lv<8> > regs_9_4;
    sc_signal< sc_lv<8> > regs_9_3;
    sc_signal< sc_lv<8> > regs_9_2;
    sc_signal< sc_lv<8> > regs_9_1;
    sc_signal< sc_lv<8> > regs_9_0;
    sc_signal< sc_lv<32> > regs_2;
    sc_signal< sc_lv<32> > regs_1;
    sc_signal< sc_lv<32> > regs_0;
    sc_signal< sc_lv<3> > shift_reg0_regs_address0;
    sc_signal< sc_logic > shift_reg0_regs_ce0;
    sc_signal< sc_logic > shift_reg0_regs_we0;
    sc_signal< sc_lv<8> > shift_reg0_regs_d0;
    sc_signal< sc_lv<8> > shift_reg0_regs_q0;
    sc_signal< sc_lv<3> > shift_reg0_regs_address1;
    sc_signal< sc_logic > shift_reg0_regs_ce1;
    sc_signal< sc_logic > shift_reg0_regs_we1;
    sc_signal< sc_lv<8> > shift_reg0_regs_d1;
    sc_signal< sc_lv<8> > shift_reg0_regs_q1;
    sc_signal< sc_lv<4> > Sreg_Array_address0;
    sc_signal< sc_logic > Sreg_Array_ce0;
    sc_signal< sc_logic > Sreg_Array_we0;
    sc_signal< sc_lv<32> > Sreg_Array_q0;
    sc_signal< sc_lv<3> > select_V_read_read_fu_270_p2;
    sc_signal< sc_lv<1> > en_read_read_fu_276_p2;
    sc_signal< sc_lv<8> > shift_reg0_regs_load_7_reg_1915;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<8> > select_ln44_14_fu_1640_p3;
    sc_signal< sc_lv<8> > select_ln44_14_reg_1921;
    sc_signal< sc_lv<1> > or_ln44_fu_1647_p2;
    sc_signal< sc_lv<1> > or_ln44_reg_1926;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<8> > select_ln44_3_fu_1657_p3;
    sc_signal< sc_lv<8> > select_ln44_3_reg_1935;
    sc_signal< sc_lv<8> > select_ln44_5_fu_1671_p3;
    sc_signal< sc_lv<8> > select_ln44_5_reg_1940;
    sc_signal< sc_lv<8> > select_ln44_7_fu_1685_p3;
    sc_signal< sc_lv<8> > select_ln44_7_reg_1945;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<8> > select_ln44_9_fu_1698_p3;
    sc_signal< sc_lv<8> > select_ln44_9_reg_1950;
    sc_signal< sc_lv<8> > select_ln44_11_fu_1711_p3;
    sc_signal< sc_lv<8> > select_ln44_11_reg_1955;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<8> > select_ln44_13_fu_1724_p3;
    sc_signal< sc_lv<8> > select_ln44_13_reg_1960;
    sc_signal< sc_lv<8> > select_ln44_1_fu_1737_p3;
    sc_signal< sc_lv<8> > select_ln44_1_reg_1965;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<8> > dout0_7_write_assig_reg_523;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<8> > dout_10_write_assig_reg_533;
    sc_signal< sc_lv<8> > dout_9_write_assign_4_reg_543;
    sc_signal< sc_lv<8> > dout_8_write_assign_4_reg_553;
    sc_signal< sc_lv<8> > dout_7_write_assign_4_reg_563;
    sc_signal< sc_lv<8> > dout_6_write_assign_4_reg_573;
    sc_signal< sc_lv<8> > dout_5_write_assign_4_reg_583;
    sc_signal< sc_lv<8> > dout_4_write_assign_4_reg_593;
    sc_signal< sc_lv<8> > dout_3_write_assign_5_reg_603;
    sc_signal< sc_lv<8> > dout_2_write_assign_5_reg_613;
    sc_signal< sc_lv<8> > dout_1_write_assign_5_reg_623;
    sc_signal< sc_lv<8> > dout_0_write_assign_3_reg_633;
    sc_signal< sc_logic > ap_CS_fsm_state25;
    sc_signal< sc_lv<8> > select_ln13_1_fu_907_p3;
    sc_signal< sc_lv<8> > select_ln13_2_fu_926_p3;
    sc_signal< sc_lv<8> > select_ln13_3_fu_945_p3;
    sc_signal< sc_lv<8> > select_ln13_4_fu_964_p3;
    sc_signal< sc_lv<8> > select_ln13_5_fu_983_p3;
    sc_signal< sc_lv<8> > select_ln13_6_fu_1002_p3;
    sc_signal< sc_lv<8> > select_ln13_7_fu_1021_p3;
    sc_signal< sc_lv<8> > select_ln13_8_fu_1040_p3;
    sc_signal< sc_lv<8> > select_ln13_9_fu_1059_p3;
    sc_signal< sc_lv<8> > select_ln13_10_fu_1078_p3;
    sc_signal< sc_lv<8> > select_ln13_11_fu_1093_p3;
    sc_signal< sc_lv<8> > select_ln10_1_fu_689_p3;
    sc_signal< sc_lv<8> > select_ln10_2_fu_708_p3;
    sc_signal< sc_lv<8> > select_ln10_3_fu_727_p3;
    sc_signal< sc_lv<8> > select_ln10_4_fu_746_p3;
    sc_signal< sc_lv<8> > select_ln10_5_fu_765_p3;
    sc_signal< sc_lv<8> > select_ln10_6_fu_784_p3;
    sc_signal< sc_lv<8> > select_ln10_7_fu_803_p3;
    sc_signal< sc_lv<8> > select_ln10_8_fu_822_p3;
    sc_signal< sc_lv<8> > select_ln10_9_fu_841_p3;
    sc_signal< sc_lv<8> > select_ln10_10_fu_860_p3;
    sc_signal< sc_lv<8> > select_ln10_11_fu_875_p3;
    sc_signal< sc_logic > ap_CS_fsm_state24;
    sc_signal< sc_lv<8> > trunc_ln23_fu_1465_p1;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_lv<8> > trunc_ln23_1_fu_1480_p1;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<8> > trunc_ln23_2_fu_1495_p1;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<8> > trunc_ln23_3_fu_1510_p1;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_lv<8> > trunc_ln23_4_fu_1525_p1;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<8> > trunc_ln23_5_fu_1540_p1;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<8> > trunc_ln23_6_fu_1555_p1;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<8> > trunc_ln23_7_fu_1570_p1;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<8> > trunc_ln23_8_fu_1585_p1;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<8> > trunc_ln23_9_fu_1600_p1;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<8> > trunc_ln23_10_fu_1615_p1;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<8> > select_ln10_fu_676_p3;
    sc_signal< sc_lv<8> > select_ln13_fu_894_p3;
    sc_signal< sc_lv<8> > trunc_ln23_11_fu_1630_p1;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<32> > sext_ln18_fu_658_p1;
    sc_signal< sc_lv<8> > sext_ln18_fu_658_p0;
    sc_signal< sc_lv<1> > select_ln10_fu_676_p0;
    sc_signal< sc_lv<1> > select_ln10_1_fu_689_p0;
    sc_signal< sc_lv<1> > select_ln10_2_fu_708_p0;
    sc_signal< sc_lv<1> > select_ln10_3_fu_727_p0;
    sc_signal< sc_lv<1> > select_ln10_4_fu_746_p0;
    sc_signal< sc_lv<1> > select_ln10_5_fu_765_p0;
    sc_signal< sc_lv<1> > select_ln10_6_fu_784_p0;
    sc_signal< sc_lv<1> > select_ln10_7_fu_803_p0;
    sc_signal< sc_lv<1> > select_ln10_8_fu_822_p0;
    sc_signal< sc_lv<1> > select_ln10_9_fu_841_p0;
    sc_signal< sc_lv<1> > select_ln10_10_fu_860_p0;
    sc_signal< sc_lv<1> > select_ln10_11_fu_875_p0;
    sc_signal< sc_lv<8> > select_ln10_11_fu_875_p2;
    sc_signal< sc_lv<1> > select_ln13_fu_894_p0;
    sc_signal< sc_lv<1> > select_ln13_1_fu_907_p0;
    sc_signal< sc_lv<1> > select_ln13_2_fu_926_p0;
    sc_signal< sc_lv<1> > select_ln13_3_fu_945_p0;
    sc_signal< sc_lv<1> > select_ln13_4_fu_964_p0;
    sc_signal< sc_lv<1> > select_ln13_5_fu_983_p0;
    sc_signal< sc_lv<1> > select_ln13_6_fu_1002_p0;
    sc_signal< sc_lv<1> > select_ln13_7_fu_1021_p0;
    sc_signal< sc_lv<1> > select_ln13_8_fu_1040_p0;
    sc_signal< sc_lv<1> > select_ln13_9_fu_1059_p0;
    sc_signal< sc_lv<1> > select_ln13_10_fu_1078_p0;
    sc_signal< sc_lv<1> > select_ln13_11_fu_1093_p0;
    sc_signal< sc_lv<8> > select_ln13_11_fu_1093_p2;
    sc_signal< sc_lv<1> > select_ln46_fu_1635_p0;
    sc_signal< sc_lv<8> > select_ln46_fu_1635_p2;
    sc_signal< sc_lv<1> > select_ln44_14_fu_1640_p0;
    sc_signal< sc_lv<8> > select_ln46_fu_1635_p3;
    sc_signal< sc_lv<1> > or_ln44_fu_1647_p0;
    sc_signal< sc_lv<1> > or_ln44_fu_1647_p1;
    sc_signal< sc_lv<1> > select_ln44_2_fu_1651_p0;
    sc_signal< sc_lv<8> > select_ln44_2_fu_1651_p3;
    sc_signal< sc_lv<1> > select_ln44_4_fu_1665_p0;
    sc_signal< sc_lv<8> > select_ln44_4_fu_1665_p3;
    sc_signal< sc_lv<1> > select_ln44_6_fu_1679_p0;
    sc_signal< sc_lv<8> > select_ln44_6_fu_1679_p3;
    sc_signal< sc_lv<1> > select_ln44_8_fu_1692_p0;
    sc_signal< sc_lv<8> > select_ln44_8_fu_1692_p3;
    sc_signal< sc_lv<1> > select_ln44_10_fu_1705_p0;
    sc_signal< sc_lv<8> > select_ln44_10_fu_1705_p3;
    sc_signal< sc_lv<1> > select_ln44_12_fu_1718_p0;
    sc_signal< sc_lv<8> > select_ln44_12_fu_1718_p3;
    sc_signal< sc_lv<1> > select_ln44_fu_1731_p0;
    sc_signal< sc_lv<8> > select_ln44_fu_1731_p3;
    sc_signal< sc_lv<25> > ap_NS_fsm;
    sc_signal< bool > ap_condition_211;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<25> ap_ST_fsm_state1;
    static const sc_lv<25> ap_ST_fsm_state2;
    static const sc_lv<25> ap_ST_fsm_state3;
    static const sc_lv<25> ap_ST_fsm_state4;
    static const sc_lv<25> ap_ST_fsm_state5;
    static const sc_lv<25> ap_ST_fsm_state6;
    static const sc_lv<25> ap_ST_fsm_state7;
    static const sc_lv<25> ap_ST_fsm_state8;
    static const sc_lv<25> ap_ST_fsm_state9;
    static const sc_lv<25> ap_ST_fsm_state10;
    static const sc_lv<25> ap_ST_fsm_state11;
    static const sc_lv<25> ap_ST_fsm_state12;
    static const sc_lv<25> ap_ST_fsm_state13;
    static const sc_lv<25> ap_ST_fsm_state14;
    static const sc_lv<25> ap_ST_fsm_state15;
    static const sc_lv<25> ap_ST_fsm_state16;
    static const sc_lv<25> ap_ST_fsm_state17;
    static const sc_lv<25> ap_ST_fsm_state18;
    static const sc_lv<25> ap_ST_fsm_state19;
    static const sc_lv<25> ap_ST_fsm_state20;
    static const sc_lv<25> ap_ST_fsm_state21;
    static const sc_lv<25> ap_ST_fsm_state22;
    static const sc_lv<25> ap_ST_fsm_state23;
    static const sc_lv<25> ap_ST_fsm_state24;
    static const sc_lv<25> ap_ST_fsm_state25;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_B;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Sreg_Array_address0();
    void thread_Sreg_Array_ce0();
    void thread_Sreg_Array_we0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state24();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_condition_211();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_dout0_0();
    void thread_dout0_0_ap_vld();
    void thread_dout0_1();
    void thread_dout0_10();
    void thread_dout0_10_ap_vld();
    void thread_dout0_11();
    void thread_dout0_11_ap_vld();
    void thread_dout0_1_ap_vld();
    void thread_dout0_2();
    void thread_dout0_2_ap_vld();
    void thread_dout0_3();
    void thread_dout0_3_ap_vld();
    void thread_dout0_4();
    void thread_dout0_4_ap_vld();
    void thread_dout0_5();
    void thread_dout0_5_ap_vld();
    void thread_dout0_6();
    void thread_dout0_6_ap_vld();
    void thread_dout0_7();
    void thread_dout0_7_ap_vld();
    void thread_dout0_8();
    void thread_dout0_8_ap_vld();
    void thread_dout0_9();
    void thread_dout0_9_ap_vld();
    void thread_dout1_0();
    void thread_dout1_0_ap_vld();
    void thread_dout1_1();
    void thread_dout1_1_ap_vld();
    void thread_dout1_2();
    void thread_dout1_2_ap_vld();
    void thread_dout1_3();
    void thread_dout1_3_ap_vld();
    void thread_en_read_read_fu_276_p2();
    void thread_or_ln44_fu_1647_p0();
    void thread_or_ln44_fu_1647_p1();
    void thread_or_ln44_fu_1647_p2();
    void thread_select_V_read_read_fu_270_p2();
    void thread_select_ln10_10_fu_860_p0();
    void thread_select_ln10_10_fu_860_p3();
    void thread_select_ln10_11_fu_875_p0();
    void thread_select_ln10_11_fu_875_p2();
    void thread_select_ln10_11_fu_875_p3();
    void thread_select_ln10_1_fu_689_p0();
    void thread_select_ln10_1_fu_689_p3();
    void thread_select_ln10_2_fu_708_p0();
    void thread_select_ln10_2_fu_708_p3();
    void thread_select_ln10_3_fu_727_p0();
    void thread_select_ln10_3_fu_727_p3();
    void thread_select_ln10_4_fu_746_p0();
    void thread_select_ln10_4_fu_746_p3();
    void thread_select_ln10_5_fu_765_p0();
    void thread_select_ln10_5_fu_765_p3();
    void thread_select_ln10_6_fu_784_p0();
    void thread_select_ln10_6_fu_784_p3();
    void thread_select_ln10_7_fu_803_p0();
    void thread_select_ln10_7_fu_803_p3();
    void thread_select_ln10_8_fu_822_p0();
    void thread_select_ln10_8_fu_822_p3();
    void thread_select_ln10_9_fu_841_p0();
    void thread_select_ln10_9_fu_841_p3();
    void thread_select_ln10_fu_676_p0();
    void thread_select_ln10_fu_676_p3();
    void thread_select_ln13_10_fu_1078_p0();
    void thread_select_ln13_10_fu_1078_p3();
    void thread_select_ln13_11_fu_1093_p0();
    void thread_select_ln13_11_fu_1093_p2();
    void thread_select_ln13_11_fu_1093_p3();
    void thread_select_ln13_1_fu_907_p0();
    void thread_select_ln13_1_fu_907_p3();
    void thread_select_ln13_2_fu_926_p0();
    void thread_select_ln13_2_fu_926_p3();
    void thread_select_ln13_3_fu_945_p0();
    void thread_select_ln13_3_fu_945_p3();
    void thread_select_ln13_4_fu_964_p0();
    void thread_select_ln13_4_fu_964_p3();
    void thread_select_ln13_5_fu_983_p0();
    void thread_select_ln13_5_fu_983_p3();
    void thread_select_ln13_6_fu_1002_p0();
    void thread_select_ln13_6_fu_1002_p3();
    void thread_select_ln13_7_fu_1021_p0();
    void thread_select_ln13_7_fu_1021_p3();
    void thread_select_ln13_8_fu_1040_p0();
    void thread_select_ln13_8_fu_1040_p3();
    void thread_select_ln13_9_fu_1059_p0();
    void thread_select_ln13_9_fu_1059_p3();
    void thread_select_ln13_fu_894_p0();
    void thread_select_ln13_fu_894_p3();
    void thread_select_ln44_10_fu_1705_p0();
    void thread_select_ln44_10_fu_1705_p3();
    void thread_select_ln44_11_fu_1711_p3();
    void thread_select_ln44_12_fu_1718_p0();
    void thread_select_ln44_12_fu_1718_p3();
    void thread_select_ln44_13_fu_1724_p3();
    void thread_select_ln44_14_fu_1640_p0();
    void thread_select_ln44_14_fu_1640_p3();
    void thread_select_ln44_1_fu_1737_p3();
    void thread_select_ln44_2_fu_1651_p0();
    void thread_select_ln44_2_fu_1651_p3();
    void thread_select_ln44_3_fu_1657_p3();
    void thread_select_ln44_4_fu_1665_p0();
    void thread_select_ln44_4_fu_1665_p3();
    void thread_select_ln44_5_fu_1671_p3();
    void thread_select_ln44_6_fu_1679_p0();
    void thread_select_ln44_6_fu_1679_p3();
    void thread_select_ln44_7_fu_1685_p3();
    void thread_select_ln44_8_fu_1692_p0();
    void thread_select_ln44_8_fu_1692_p3();
    void thread_select_ln44_9_fu_1698_p3();
    void thread_select_ln44_fu_1731_p0();
    void thread_select_ln44_fu_1731_p3();
    void thread_select_ln46_fu_1635_p0();
    void thread_select_ln46_fu_1635_p2();
    void thread_select_ln46_fu_1635_p3();
    void thread_sext_ln18_fu_658_p0();
    void thread_sext_ln18_fu_658_p1();
    void thread_shift_reg0_regs_address0();
    void thread_shift_reg0_regs_address1();
    void thread_shift_reg0_regs_ce0();
    void thread_shift_reg0_regs_ce1();
    void thread_shift_reg0_regs_d0();
    void thread_shift_reg0_regs_d1();
    void thread_shift_reg0_regs_we0();
    void thread_shift_reg0_regs_we1();
    void thread_trunc_ln23_10_fu_1615_p1();
    void thread_trunc_ln23_11_fu_1630_p1();
    void thread_trunc_ln23_1_fu_1480_p1();
    void thread_trunc_ln23_2_fu_1495_p1();
    void thread_trunc_ln23_3_fu_1510_p1();
    void thread_trunc_ln23_4_fu_1525_p1();
    void thread_trunc_ln23_5_fu_1540_p1();
    void thread_trunc_ln23_6_fu_1555_p1();
    void thread_trunc_ln23_7_fu_1570_p1();
    void thread_trunc_ln23_8_fu_1585_p1();
    void thread_trunc_ln23_9_fu_1600_p1();
    void thread_trunc_ln23_fu_1465_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
