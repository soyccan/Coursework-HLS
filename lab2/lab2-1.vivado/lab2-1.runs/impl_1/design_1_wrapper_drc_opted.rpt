Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
---------------------------------------------------------------------------------------------------------------------------------------
| Tool Version : Vivado v.2019.2 (win64) Build 2708876 Wed Nov  6 21:40:23 MST 2019
| Date         : Sat Mar 27 00:09:54 2021
| Host         : EMPEROR running 64-bit major release  (build 9200)
| Command      : report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
| Design       : design_1_wrapper
| Device       : xc7z020clg400-1
| Speed File   : -1
| Design State : Synthesized
---------------------------------------------------------------------------------------------------------------------------------------

Report DRC

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: design_1
      Design limits: <entire design considered>
           Ruledeck: default
             Max violations: <unlimited>
             Violations found: 67
+-----------+----------+----------------------------+------------+
| Rule      | Severity | Description                | Violations |
+-----------+----------+----------------------------+------------+
| CHECK-3   | Warning  | Report rule limit reached  | 1          |
| DPOP-1    | Warning  | PREG Output pipelining     | 11         |
| DPOP-2    | Warning  | MREG Output pipelining     | 33         |
| REQP-1839 | Warning  | RAMB36 async control check | 20         |
| REQP-181  | Advisory | writefirst                 | 2          |
+-----------+----------+----------------------------+------------+

2. REPORT DETAILS
-----------------
CHECK-3#1 Warning
Report rule limit reached  
REQP-1839 rule limit reached: 20 violations have been found.
Related violations: <none>

DPOP-1#1 Warning
PREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_10_fu_408_p2__0 output design_1_i/fir_n11_strm_0/inst/mul_ln35_10_fu_408_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#2 Warning
PREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_1_fu_424_p2__0 output design_1_i/fir_n11_strm_0/inst/mul_ln35_1_fu_424_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#3 Warning
PREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_2_fu_338_p2__0 output design_1_i/fir_n11_strm_0/inst/mul_ln35_2_fu_338_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#4 Warning
PREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_3_fu_354_p2__0 output design_1_i/fir_n11_strm_0/inst/mul_ln35_3_fu_354_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#5 Warning
PREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_4_fu_374_p2__0 output design_1_i/fir_n11_strm_0/inst/mul_ln35_4_fu_374_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#6 Warning
PREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_5_fu_454_p2__0 output design_1_i/fir_n11_strm_0/inst/mul_ln35_5_fu_454_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#7 Warning
PREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_6_fu_479_p2__0 output design_1_i/fir_n11_strm_0/inst/mul_ln35_6_fu_479_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#8 Warning
PREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_7_fu_495_p2__0 output design_1_i/fir_n11_strm_0/inst/mul_ln35_7_fu_495_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#9 Warning
PREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_8_fu_511_p2__0 output design_1_i/fir_n11_strm_0/inst/mul_ln35_8_fu_511_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#10 Warning
PREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_9_fu_536_p2__0 output design_1_i/fir_n11_strm_0/inst/mul_ln35_9_fu_536_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#11 Warning
PREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_fu_328_p2__0 output design_1_i/fir_n11_strm_0/inst/mul_ln35_fu_328_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-2#1 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_10_fu_408_p2 multiplier stage design_1_i/fir_n11_strm_0/inst/mul_ln35_10_fu_408_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#2 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_10_fu_408_p2__0 multiplier stage design_1_i/fir_n11_strm_0/inst/mul_ln35_10_fu_408_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#3 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_10_reg_696_reg multiplier stage design_1_i/fir_n11_strm_0/inst/mul_ln35_10_reg_696_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#4 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_1_fu_424_p2 multiplier stage design_1_i/fir_n11_strm_0/inst/mul_ln35_1_fu_424_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#5 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_1_fu_424_p2__0 multiplier stage design_1_i/fir_n11_strm_0/inst/mul_ln35_1_fu_424_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#6 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_1_reg_701_reg multiplier stage design_1_i/fir_n11_strm_0/inst/mul_ln35_1_reg_701_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#7 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_2_fu_338_p2 multiplier stage design_1_i/fir_n11_strm_0/inst/mul_ln35_2_fu_338_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#8 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_2_fu_338_p2__0 multiplier stage design_1_i/fir_n11_strm_0/inst/mul_ln35_2_fu_338_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#9 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_2_reg_641_reg multiplier stage design_1_i/fir_n11_strm_0/inst/mul_ln35_2_reg_641_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#10 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_3_fu_354_p2 multiplier stage design_1_i/fir_n11_strm_0/inst/mul_ln35_3_fu_354_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#11 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_3_fu_354_p2__0 multiplier stage design_1_i/fir_n11_strm_0/inst/mul_ln35_3_fu_354_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#12 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_3_reg_646_reg multiplier stage design_1_i/fir_n11_strm_0/inst/mul_ln35_3_reg_646_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#13 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_4_fu_374_p2 multiplier stage design_1_i/fir_n11_strm_0/inst/mul_ln35_4_fu_374_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#14 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_4_fu_374_p2__0 multiplier stage design_1_i/fir_n11_strm_0/inst/mul_ln35_4_fu_374_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#15 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_4_reg_656_reg multiplier stage design_1_i/fir_n11_strm_0/inst/mul_ln35_4_reg_656_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#16 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_5_fu_454_p2 multiplier stage design_1_i/fir_n11_strm_0/inst/mul_ln35_5_fu_454_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#17 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_5_fu_454_p2__0 multiplier stage design_1_i/fir_n11_strm_0/inst/mul_ln35_5_fu_454_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#18 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_5_reg_711_reg multiplier stage design_1_i/fir_n11_strm_0/inst/mul_ln35_5_reg_711_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#19 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_6_fu_479_p2 multiplier stage design_1_i/fir_n11_strm_0/inst/mul_ln35_6_fu_479_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#20 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_6_fu_479_p2__0 multiplier stage design_1_i/fir_n11_strm_0/inst/mul_ln35_6_fu_479_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#21 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_6_reg_721_reg multiplier stage design_1_i/fir_n11_strm_0/inst/mul_ln35_6_reg_721_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#22 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_7_fu_495_p2 multiplier stage design_1_i/fir_n11_strm_0/inst/mul_ln35_7_fu_495_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#23 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_7_fu_495_p2__0 multiplier stage design_1_i/fir_n11_strm_0/inst/mul_ln35_7_fu_495_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#24 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_7_reg_726_reg multiplier stage design_1_i/fir_n11_strm_0/inst/mul_ln35_7_reg_726_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#25 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_8_fu_511_p2 multiplier stage design_1_i/fir_n11_strm_0/inst/mul_ln35_8_fu_511_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#26 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_8_fu_511_p2__0 multiplier stage design_1_i/fir_n11_strm_0/inst/mul_ln35_8_fu_511_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#27 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_8_reg_731_reg multiplier stage design_1_i/fir_n11_strm_0/inst/mul_ln35_8_reg_731_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#28 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_9_fu_536_p2 multiplier stage design_1_i/fir_n11_strm_0/inst/mul_ln35_9_fu_536_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#29 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_9_fu_536_p2__0 multiplier stage design_1_i/fir_n11_strm_0/inst/mul_ln35_9_fu_536_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#30 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_9_reg_741_reg multiplier stage design_1_i/fir_n11_strm_0/inst/mul_ln35_9_reg_741_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#31 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_fu_328_p2 multiplier stage design_1_i/fir_n11_strm_0/inst/mul_ln35_fu_328_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#32 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_fu_328_p2__0 multiplier stage design_1_i/fir_n11_strm_0/inst/mul_ln35_fu_328_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#33 Warning
MREG Output pipelining  
DSP design_1_i/fir_n11_strm_0/inst/mul_ln35_reg_631_reg multiplier stage design_1_i/fir_n11_strm_0/inst/mul_ln35_reg_631_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

REQP-1839#1 Warning
RAMB36 async control check  
The RAMB36E1 design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg has an input control pin design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg/WEA[0] (net: design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg_i_12_n_0) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#2 Warning
RAMB36 async control check  
The RAMB36E1 design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg has an input control pin design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg/WEA[0] (net: design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg_i_12_n_0) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_full_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#3 Warning
RAMB36 async control check  
The RAMB36E1 design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg has an input control pin design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg/WEA[0] (net: design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg_i_12_n_0) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#4 Warning
RAMB36 async control check  
The RAMB36E1 design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg has an input control pin design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg/WEA[0] (net: design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg_i_12_n_0) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_full_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#5 Warning
RAMB36 async control check  
The RAMB36E1 design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg has an input control pin design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg/WEA[0] (net: design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg_i_12_n_0) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_full_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#6 Warning
RAMB36 async control check  
The RAMB36E1 design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg has an input control pin design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg/WEA[1] (net: design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg_i_11_n_0) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#7 Warning
RAMB36 async control check  
The RAMB36E1 design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg has an input control pin design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg/WEA[1] (net: design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg_i_11_n_0) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_full_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#8 Warning
RAMB36 async control check  
The RAMB36E1 design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg has an input control pin design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg/WEA[1] (net: design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg_i_11_n_0) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#9 Warning
RAMB36 async control check  
The RAMB36E1 design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg has an input control pin design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg/WEA[1] (net: design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg_i_11_n_0) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_full_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#10 Warning
RAMB36 async control check  
The RAMB36E1 design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg has an input control pin design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg/WEA[1] (net: design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg_i_11_n_0) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_full_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#11 Warning
RAMB36 async control check  
The RAMB36E1 design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg has an input control pin design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg/WEA[2] (net: design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg_i_10_n_0) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#12 Warning
RAMB36 async control check  
The RAMB36E1 design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg has an input control pin design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg/WEA[2] (net: design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg_i_10_n_0) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_full_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#13 Warning
RAMB36 async control check  
The RAMB36E1 design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg has an input control pin design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg/WEA[2] (net: design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg_i_10_n_0) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#14 Warning
RAMB36 async control check  
The RAMB36E1 design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg has an input control pin design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg/WEA[2] (net: design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg_i_10_n_0) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_full_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#15 Warning
RAMB36 async control check  
The RAMB36E1 design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg has an input control pin design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg/WEA[2] (net: design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg_i_10_n_0) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_full_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#16 Warning
RAMB36 async control check  
The RAMB36E1 design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg has an input control pin design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg/WEA[3] (net: design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg_i_9_n_0) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#17 Warning
RAMB36 async control check  
The RAMB36E1 design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg has an input control pin design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg/WEA[3] (net: design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg_i_9_n_0) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_full_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#18 Warning
RAMB36 async control check  
The RAMB36E1 design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg has an input control pin design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg/WEA[3] (net: design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg_i_9_n_0) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#19 Warning
RAMB36 async control check  
The RAMB36E1 design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg has an input control pin design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg/WEA[3] (net: design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg_i_9_n_0) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_full_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#20 Warning
RAMB36 async control check  
The RAMB36E1 design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg has an input control pin design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg/WEA[3] (net: design_1_i/fir_n11_strm_0/inst/fir_n11_strm_AXILiteS_s_axi_U/int_an32Coef/gen_write[1].mem_reg_i_9_n_0) which is driven by a register (design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_full_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-181#1 Advisory
writefirst  
Synchronous clocking is detected for BRAM (design_1_i/axi_dma_in_0/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

REQP-181#2 Advisory
writefirst  
Synchronous clocking is detected for BRAM (design_1_i/axi_dma_out_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>


